#
# autogenerated by fzextract.fz from /usr/include/sodium.h
#

module c is

  # module __bswap_16(__bsx *** unknown type ***) *** unknown type *** => native
  # module __bswap_32(__bsx *** unknown type ***) *** unknown type *** => native
  # module __bswap_64(__bsx *** unknown type ***) *** unknown type *** => native
  # module __getdelim(__lineptr Native_Ref /* from: char ** */, __n mutate.array i64, __delimiter i32, __stream Native_Ref) *** unknown type *** => native
  # module __uint16_identity(__x *** unknown type ***) *** unknown type *** => native
  # module __uint32_identity(__x *** unknown type ***) *** unknown type *** => native
  # module __uint64_identity(__x *** unknown type ***) *** unknown type *** => native
  # module arc4random *** unknown type *** => native
  # module arc4random_uniform(__upper_bound *** unknown type ***) *** unknown type *** => native
  # module atoll(__nptr mutate.array i8) *** unknown type *** => native
  # module bsearch(__key Native_Ref /* from: void * */, __base Native_Ref /* from: void * */, __nmemb i64, __size i64, __compar *** unknown type ***) Native_Ref /* from: void * */ => native
  # module div(__numer i32, __denom i32) *** unknown type *** => native
  # module fopencookie(__magic_cookie Native_Ref /* from: void * */, __modes mutate.array i8, __io_funcs *** unknown type ***) Native_Ref /* from: FILE * */ => native
  # module fread(__ptr Native_Ref /* from: void * */, __size i64, __n i64, __stream Native_Ref) *** unknown type *** => native
  # module fseeko(__stream Native_Ref, __off *** unknown type ***, __whence i32) i32 => native
  # module ftello(__stream Native_Ref) *** unknown type *** => native
  # module fwrite(__ptr Native_Ref /* from: void * */, __size i64, __n i64, __s Native_Ref) *** unknown type *** => native
  # module getdelim(__lineptr Native_Ref /* from: char ** */, __n mutate.array i64, __delimiter i32, __stream Native_Ref) *** unknown type *** => native
  # module getline(__lineptr Native_Ref /* from: char ** */, __n mutate.array i64, __stream Native_Ref) *** unknown type *** => native
  # module initstate(__seed *** unknown type ***, __statebuf mutate.array i8, __statelen i64) Native_Ref /* from: char * */ => native
  # module initstate_r(__seed *** unknown type ***, __statebuf mutate.array i8, __statelen i64, __buf Native_Ref /* from: struct random_data * */) i32 => native
  # module ldiv(__numer i64, __denom i64) *** unknown type *** => native
  # module llabs(__x *** unknown type ***) *** unknown type *** => native
  # module lldiv(__numer *** unknown type ***, __denom *** unknown type ***) *** unknown type *** => native
  # module qecvt(__value *** unknown type ***, __ndigit i32, __decpt mutate.array i32, __sign mutate.array i32) Native_Ref /* from: char * */ => native
  # module qecvt_r(__value *** unknown type ***, __ndigit i32, __decpt mutate.array i32, __sign mutate.array i32, __buf mutate.array i8, __len i64) i32 => native
  # module qfcvt(__value *** unknown type ***, __ndigit i32, __decpt mutate.array i32, __sign mutate.array i32) Native_Ref /* from: char * */ => native
  # module qfcvt_r(__value *** unknown type ***, __ndigit i32, __decpt mutate.array i32, __sign mutate.array i32, __buf mutate.array i8, __len i64) i32 => native
  # module qgcvt(__value *** unknown type ***, __ndigit i32, __buf mutate.array i8) Native_Ref /* from: char * */ => native
  # module qsort(__base Native_Ref /* from: void * */, __nmemb i64, __size i64, __compar *** unknown type ***) unit => native
  # module srand(__seed *** unknown type ***) unit => native
  # module srandom(__seed *** unknown type ***) unit => native
  # module srandom_r(__seed *** unknown type ***, __buf Native_Ref /* from: struct random_data * */) i32 => native
  # module strtold(__nptr mutate.array i8, __endptr Native_Ref /* from: char ** */) *** unknown type *** => native
  # module strtoll(__nptr mutate.array i8, __endptr Native_Ref /* from: char ** */, __base i32) *** unknown type *** => native
  # module strtoq(__nptr mutate.array i8, __endptr Native_Ref /* from: char ** */, __base i32) *** unknown type *** => native
  # module strtoul(__nptr mutate.array i8, __endptr Native_Ref /* from: char ** */, __base i32) *** unknown type *** => native
  # module vasprintf(__ptr Native_Ref /* from: char ** */, __f mutate.array i8, __arg *** unknown type ***) i32 => native
  # module vdprintf(__fd i32, __fmt mutate.array i8, __arg *** unknown type ***) i32 => native
  # module vfprintf(__s Native_Ref, __format mutate.array i8, __arg *** unknown type ***) i32 => native
  # module vfscanf(__s Native_Ref, __format mutate.array i8, __arg *** unknown type ***) i32 => native
  # module vprintf(__format mutate.array i8, __arg *** unknown type ***) i32 => native
  # module vscanf(__format mutate.array i8, __arg *** unknown type ***) i32 => native
  # module vsnprintf(__s mutate.array i8, __maxlen i64, __format mutate.array i8, __arg *** unknown type ***) i32 => native
  # module vsprintf(__s mutate.array i8, __format mutate.array i8, __arg *** unknown type ***) i32 => native
  # module vsscanf(__s mutate.array i8, __format mutate.array i8, __arg *** unknown type ***) i32 => native
  # module wctomb(__s mutate.array i8, __wchar *** unknown type ***) i32 => native
  module _Exit(__status i32) unit => native
  module __asprintf(__ptr Native_Ref /* from: char ** */, __fmt mutate.array i8) i32 => native
  module __ctype_get_mb_cur_max i64 => native
  module __overflow(_ Native_Ref, _ i32) i32 => native
  module __uflow(_ Native_Ref) i32 => native
  module _sodium_alloc_init i32 => native
  module _sodium_runtime_get_cpu_features i32 => native
  module a64l(__s mutate.array i8) i64 => native
  module abort unit => native
  module abs(__x i32) i32 => native
  module aligned_alloc(__alignment i64, __size i64) Native_Ref /* from: void * */ => native
  module alloca(__size i64) Native_Ref /* from: void * */ => native
  module arc4random_buf(__buf Native_Ref /* from: void * */, __size i64) unit => native
  module asprintf(__ptr Native_Ref /* from: char ** */, __fmt mutate.array i8) i32 => native
  module at_quick_exit(__func Native_Ref /* from: void (*)(void) */) i32 => native
  module atexit(__func Native_Ref /* from: void (*)(void) */) i32 => native
  module atof(__nptr mutate.array i8) f64 => native
  module atoi(__nptr mutate.array i8) i32 => native
  module atol(__nptr mutate.array i8) i64 => native
  module calloc(__nmemb i64, __size i64) Native_Ref /* from: void * */ => native
  module clearenv i32 => native
  module clearerr(__stream Native_Ref) unit => native
  module clearerr_unlocked(__stream Native_Ref) unit => native
  module crypto_aead_aes256gcm_abytes i64 => native
  module crypto_aead_aes256gcm_beforenm(ctx_ Native_Ref /* from: crypto_aead_aes256gcm_state * */, k mutate.array u8) i32 => native
  module crypto_aead_aes256gcm_decrypt(m mutate.array u8, mlen_p mutate.array u64, nsec mutate.array u8, c mutate.array u8, clen u64, ad mutate.array u8, adlen u64, npub mutate.array u8, k mutate.array u8) i32 => native
  module crypto_aead_aes256gcm_decrypt_afternm(m mutate.array u8, mlen_p mutate.array u64, nsec mutate.array u8, c mutate.array u8, clen u64, ad mutate.array u8, adlen u64, npub mutate.array u8, ctx_ Native_Ref /* from: crypto_aead_aes256gcm_state * */) i32 => native
  module crypto_aead_aes256gcm_decrypt_detached(m mutate.array u8, nsec mutate.array u8, c mutate.array u8, clen u64, mac mutate.array u8, ad mutate.array u8, adlen u64, npub mutate.array u8, k mutate.array u8) i32 => native
  module crypto_aead_aes256gcm_decrypt_detached_afternm(m mutate.array u8, nsec mutate.array u8, c mutate.array u8, clen u64, mac mutate.array u8, ad mutate.array u8, adlen u64, npub mutate.array u8, ctx_ Native_Ref /* from: crypto_aead_aes256gcm_state * */) i32 => native
  module crypto_aead_aes256gcm_encrypt(c mutate.array u8, clen_p mutate.array u64, m mutate.array u8, mlen u64, ad mutate.array u8, adlen u64, nsec mutate.array u8, npub mutate.array u8, k mutate.array u8) i32 => native
  module crypto_aead_aes256gcm_encrypt_afternm(c mutate.array u8, clen_p mutate.array u64, m mutate.array u8, mlen u64, ad mutate.array u8, adlen u64, nsec mutate.array u8, npub mutate.array u8, ctx_ Native_Ref /* from: crypto_aead_aes256gcm_state * */) i32 => native
  module crypto_aead_aes256gcm_encrypt_detached(c mutate.array u8, mac mutate.array u8, maclen_p mutate.array u64, m mutate.array u8, mlen u64, ad mutate.array u8, adlen u64, nsec mutate.array u8, npub mutate.array u8, k mutate.array u8) i32 => native
  module crypto_aead_aes256gcm_encrypt_detached_afternm(c mutate.array u8, mac mutate.array u8, maclen_p mutate.array u64, m mutate.array u8, mlen u64, ad mutate.array u8, adlen u64, nsec mutate.array u8, npub mutate.array u8, ctx_ Native_Ref /* from: crypto_aead_aes256gcm_state * */) i32 => native
  module crypto_aead_aes256gcm_is_available i32 => native
  module crypto_aead_aes256gcm_keybytes i64 => native
  module crypto_aead_aes256gcm_keygen(k mutate.array u8) unit => native
  module crypto_aead_aes256gcm_messagebytes_max i64 => native
  module crypto_aead_aes256gcm_npubbytes i64 => native
  module crypto_aead_aes256gcm_nsecbytes i64 => native
  module crypto_aead_aes256gcm_statebytes i64 => native
  module crypto_aead_chacha20poly1305_abytes i64 => native
  module crypto_aead_chacha20poly1305_decrypt(m mutate.array u8, mlen_p mutate.array u64, nsec mutate.array u8, c mutate.array u8, clen u64, ad mutate.array u8, adlen u64, npub mutate.array u8, k mutate.array u8) i32 => native
  module crypto_aead_chacha20poly1305_decrypt_detached(m mutate.array u8, nsec mutate.array u8, c mutate.array u8, clen u64, mac mutate.array u8, ad mutate.array u8, adlen u64, npub mutate.array u8, k mutate.array u8) i32 => native
  module crypto_aead_chacha20poly1305_encrypt(c mutate.array u8, clen_p mutate.array u64, m mutate.array u8, mlen u64, ad mutate.array u8, adlen u64, nsec mutate.array u8, npub mutate.array u8, k mutate.array u8) i32 => native
  module crypto_aead_chacha20poly1305_encrypt_detached(c mutate.array u8, mac mutate.array u8, maclen_p mutate.array u64, m mutate.array u8, mlen u64, ad mutate.array u8, adlen u64, nsec mutate.array u8, npub mutate.array u8, k mutate.array u8) i32 => native
  module crypto_aead_chacha20poly1305_ietf_abytes i64 => native
  module crypto_aead_chacha20poly1305_ietf_decrypt(m mutate.array u8, mlen_p mutate.array u64, nsec mutate.array u8, c mutate.array u8, clen u64, ad mutate.array u8, adlen u64, npub mutate.array u8, k mutate.array u8) i32 => native
  module crypto_aead_chacha20poly1305_ietf_decrypt_detached(m mutate.array u8, nsec mutate.array u8, c mutate.array u8, clen u64, mac mutate.array u8, ad mutate.array u8, adlen u64, npub mutate.array u8, k mutate.array u8) i32 => native
  module crypto_aead_chacha20poly1305_ietf_encrypt(c mutate.array u8, clen_p mutate.array u64, m mutate.array u8, mlen u64, ad mutate.array u8, adlen u64, nsec mutate.array u8, npub mutate.array u8, k mutate.array u8) i32 => native
  module crypto_aead_chacha20poly1305_ietf_encrypt_detached(c mutate.array u8, mac mutate.array u8, maclen_p mutate.array u64, m mutate.array u8, mlen u64, ad mutate.array u8, adlen u64, nsec mutate.array u8, npub mutate.array u8, k mutate.array u8) i32 => native
  module crypto_aead_chacha20poly1305_ietf_keybytes i64 => native
  module crypto_aead_chacha20poly1305_ietf_keygen(k mutate.array u8) unit => native
  module crypto_aead_chacha20poly1305_ietf_messagebytes_max i64 => native
  module crypto_aead_chacha20poly1305_ietf_npubbytes i64 => native
  module crypto_aead_chacha20poly1305_ietf_nsecbytes i64 => native
  module crypto_aead_chacha20poly1305_keybytes i64 => native
  module crypto_aead_chacha20poly1305_keygen(k mutate.array u8) unit => native
  module crypto_aead_chacha20poly1305_messagebytes_max i64 => native
  module crypto_aead_chacha20poly1305_npubbytes i64 => native
  module crypto_aead_chacha20poly1305_nsecbytes i64 => native
  module crypto_aead_xchacha20poly1305_ietf_abytes i64 => native
  module crypto_aead_xchacha20poly1305_ietf_decrypt(m mutate.array u8, mlen_p mutate.array u64, nsec mutate.array u8, c mutate.array u8, clen u64, ad mutate.array u8, adlen u64, npub mutate.array u8, k mutate.array u8) i32 => native
  module crypto_aead_xchacha20poly1305_ietf_decrypt_detached(m mutate.array u8, nsec mutate.array u8, c mutate.array u8, clen u64, mac mutate.array u8, ad mutate.array u8, adlen u64, npub mutate.array u8, k mutate.array u8) i32 => native
  module crypto_aead_xchacha20poly1305_ietf_encrypt(c mutate.array u8, clen_p mutate.array u64, m mutate.array u8, mlen u64, ad mutate.array u8, adlen u64, nsec mutate.array u8, npub mutate.array u8, k mutate.array u8) i32 => native
  module crypto_aead_xchacha20poly1305_ietf_encrypt_detached(c mutate.array u8, mac mutate.array u8, maclen_p mutate.array u64, m mutate.array u8, mlen u64, ad mutate.array u8, adlen u64, nsec mutate.array u8, npub mutate.array u8, k mutate.array u8) i32 => native
  module crypto_aead_xchacha20poly1305_ietf_keybytes i64 => native
  module crypto_aead_xchacha20poly1305_ietf_keygen(k mutate.array u8) unit => native
  module crypto_aead_xchacha20poly1305_ietf_messagebytes_max i64 => native
  module crypto_aead_xchacha20poly1305_ietf_npubbytes i64 => native
  module crypto_aead_xchacha20poly1305_ietf_nsecbytes i64 => native
  module crypto_auth(out mutate.array u8, in_ mutate.array u8, inlen u64, k mutate.array u8) i32 => native
  module crypto_auth_bytes i64 => native
  module crypto_auth_hmacsha256(out mutate.array u8, in_ mutate.array u8, inlen u64, k mutate.array u8) i32 => native
  module crypto_auth_hmacsha256_bytes i64 => native
  module crypto_auth_hmacsha256_final(state Native_Ref /* from: crypto_auth_hmacsha256_state * */, out mutate.array u8) i32 => native
  module crypto_auth_hmacsha256_init(state Native_Ref /* from: crypto_auth_hmacsha256_state * */, key mutate.array u8, keylen i64) i32 => native
  module crypto_auth_hmacsha256_keybytes i64 => native
  module crypto_auth_hmacsha256_keygen(k mutate.array u8) unit => native
  module crypto_auth_hmacsha256_statebytes i64 => native
  module crypto_auth_hmacsha256_update(state Native_Ref /* from: crypto_auth_hmacsha256_state * */, in_ mutate.array u8, inlen u64) i32 => native
  module crypto_auth_hmacsha256_verify(h mutate.array u8, in_ mutate.array u8, inlen u64, k mutate.array u8) i32 => native
  module crypto_auth_hmacsha512(out mutate.array u8, in_ mutate.array u8, inlen u64, k mutate.array u8) i32 => native
  module crypto_auth_hmacsha512256(out mutate.array u8, in_ mutate.array u8, inlen u64, k mutate.array u8) i32 => native
  module crypto_auth_hmacsha512256_bytes i64 => native
  module crypto_auth_hmacsha512256_final(state Native_Ref /* from: crypto_auth_hmacsha512256_state * */, out mutate.array u8) i32 => native
  module crypto_auth_hmacsha512256_init(state Native_Ref /* from: crypto_auth_hmacsha512256_state * */, key mutate.array u8, keylen i64) i32 => native
  module crypto_auth_hmacsha512256_keybytes i64 => native
  module crypto_auth_hmacsha512256_keygen(k mutate.array u8) unit => native
  module crypto_auth_hmacsha512256_statebytes i64 => native
  module crypto_auth_hmacsha512256_update(state Native_Ref /* from: crypto_auth_hmacsha512256_state * */, in_ mutate.array u8, inlen u64) i32 => native
  module crypto_auth_hmacsha512256_verify(h mutate.array u8, in_ mutate.array u8, inlen u64, k mutate.array u8) i32 => native
  module crypto_auth_hmacsha512_bytes i64 => native
  module crypto_auth_hmacsha512_final(state Native_Ref /* from: crypto_auth_hmacsha512_state * */, out mutate.array u8) i32 => native
  module crypto_auth_hmacsha512_init(state Native_Ref /* from: crypto_auth_hmacsha512_state * */, key mutate.array u8, keylen i64) i32 => native
  module crypto_auth_hmacsha512_keybytes i64 => native
  module crypto_auth_hmacsha512_keygen(k mutate.array u8) unit => native
  module crypto_auth_hmacsha512_statebytes i64 => native
  module crypto_auth_hmacsha512_update(state Native_Ref /* from: crypto_auth_hmacsha512_state * */, in_ mutate.array u8, inlen u64) i32 => native
  module crypto_auth_hmacsha512_verify(h mutate.array u8, in_ mutate.array u8, inlen u64, k mutate.array u8) i32 => native
  module crypto_auth_keybytes i64 => native
  module crypto_auth_keygen(k mutate.array u8) unit => native
  module crypto_auth_primitive Native_Ref /* from: char * */ => native
  module crypto_auth_verify(h mutate.array u8, in_ mutate.array u8, inlen u64, k mutate.array u8) i32 => native
  module crypto_box(c mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, pk mutate.array u8, sk mutate.array u8) i32 => native
  module crypto_box_afternm(c mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_box_beforenm(k mutate.array u8, pk mutate.array u8, sk mutate.array u8) i32 => native
  module crypto_box_beforenmbytes i64 => native
  module crypto_box_boxzerobytes i64 => native
  module crypto_box_curve25519xchacha20poly1305_beforenm(k mutate.array u8, pk mutate.array u8, sk mutate.array u8) i32 => native
  module crypto_box_curve25519xchacha20poly1305_beforenmbytes i64 => native
  module crypto_box_curve25519xchacha20poly1305_detached(c mutate.array u8, mac mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, pk mutate.array u8, sk mutate.array u8) i32 => native
  module crypto_box_curve25519xchacha20poly1305_detached_afternm(c mutate.array u8, mac mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_box_curve25519xchacha20poly1305_easy(c mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, pk mutate.array u8, sk mutate.array u8) i32 => native
  module crypto_box_curve25519xchacha20poly1305_easy_afternm(c mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_box_curve25519xchacha20poly1305_keypair(pk mutate.array u8, sk mutate.array u8) i32 => native
  module crypto_box_curve25519xchacha20poly1305_macbytes i64 => native
  module crypto_box_curve25519xchacha20poly1305_messagebytes_max i64 => native
  module crypto_box_curve25519xchacha20poly1305_noncebytes i64 => native
  module crypto_box_curve25519xchacha20poly1305_open_detached(m mutate.array u8, c mutate.array u8, mac mutate.array u8, clen u64, n mutate.array u8, pk mutate.array u8, sk mutate.array u8) i32 => native
  module crypto_box_curve25519xchacha20poly1305_open_detached_afternm(m mutate.array u8, c mutate.array u8, mac mutate.array u8, clen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_box_curve25519xchacha20poly1305_open_easy(m mutate.array u8, c mutate.array u8, clen u64, n mutate.array u8, pk mutate.array u8, sk mutate.array u8) i32 => native
  module crypto_box_curve25519xchacha20poly1305_open_easy_afternm(m mutate.array u8, c mutate.array u8, clen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_box_curve25519xchacha20poly1305_publickeybytes i64 => native
  module crypto_box_curve25519xchacha20poly1305_seal(c mutate.array u8, m mutate.array u8, mlen u64, pk mutate.array u8) i32 => native
  module crypto_box_curve25519xchacha20poly1305_seal_open(m mutate.array u8, c mutate.array u8, clen u64, pk mutate.array u8, sk mutate.array u8) i32 => native
  module crypto_box_curve25519xchacha20poly1305_sealbytes i64 => native
  module crypto_box_curve25519xchacha20poly1305_secretkeybytes i64 => native
  module crypto_box_curve25519xchacha20poly1305_seed_keypair(pk mutate.array u8, sk mutate.array u8, seed mutate.array u8) i32 => native
  module crypto_box_curve25519xchacha20poly1305_seedbytes i64 => native
  module crypto_box_curve25519xsalsa20poly1305(c mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, pk mutate.array u8, sk mutate.array u8) i32 => native
  module crypto_box_curve25519xsalsa20poly1305_afternm(c mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_box_curve25519xsalsa20poly1305_beforenm(k mutate.array u8, pk mutate.array u8, sk mutate.array u8) i32 => native
  module crypto_box_curve25519xsalsa20poly1305_beforenmbytes i64 => native
  module crypto_box_curve25519xsalsa20poly1305_boxzerobytes i64 => native
  module crypto_box_curve25519xsalsa20poly1305_keypair(pk mutate.array u8, sk mutate.array u8) i32 => native
  module crypto_box_curve25519xsalsa20poly1305_macbytes i64 => native
  module crypto_box_curve25519xsalsa20poly1305_messagebytes_max i64 => native
  module crypto_box_curve25519xsalsa20poly1305_noncebytes i64 => native
  module crypto_box_curve25519xsalsa20poly1305_open(m mutate.array u8, c mutate.array u8, clen u64, n mutate.array u8, pk mutate.array u8, sk mutate.array u8) i32 => native
  module crypto_box_curve25519xsalsa20poly1305_open_afternm(m mutate.array u8, c mutate.array u8, clen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_box_curve25519xsalsa20poly1305_publickeybytes i64 => native
  module crypto_box_curve25519xsalsa20poly1305_secretkeybytes i64 => native
  module crypto_box_curve25519xsalsa20poly1305_seed_keypair(pk mutate.array u8, sk mutate.array u8, seed mutate.array u8) i32 => native
  module crypto_box_curve25519xsalsa20poly1305_seedbytes i64 => native
  module crypto_box_curve25519xsalsa20poly1305_zerobytes i64 => native
  module crypto_box_detached(c mutate.array u8, mac mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, pk mutate.array u8, sk mutate.array u8) i32 => native
  module crypto_box_detached_afternm(c mutate.array u8, mac mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_box_easy(c mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, pk mutate.array u8, sk mutate.array u8) i32 => native
  module crypto_box_easy_afternm(c mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_box_keypair(pk mutate.array u8, sk mutate.array u8) i32 => native
  module crypto_box_macbytes i64 => native
  module crypto_box_messagebytes_max i64 => native
  module crypto_box_noncebytes i64 => native
  module crypto_box_open(m mutate.array u8, c mutate.array u8, clen u64, n mutate.array u8, pk mutate.array u8, sk mutate.array u8) i32 => native
  module crypto_box_open_afternm(m mutate.array u8, c mutate.array u8, clen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_box_open_detached(m mutate.array u8, c mutate.array u8, mac mutate.array u8, clen u64, n mutate.array u8, pk mutate.array u8, sk mutate.array u8) i32 => native
  module crypto_box_open_detached_afternm(m mutate.array u8, c mutate.array u8, mac mutate.array u8, clen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_box_open_easy(m mutate.array u8, c mutate.array u8, clen u64, n mutate.array u8, pk mutate.array u8, sk mutate.array u8) i32 => native
  module crypto_box_open_easy_afternm(m mutate.array u8, c mutate.array u8, clen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_box_primitive Native_Ref /* from: char * */ => native
  module crypto_box_publickeybytes i64 => native
  module crypto_box_seal(c mutate.array u8, m mutate.array u8, mlen u64, pk mutate.array u8) i32 => native
  module crypto_box_seal_open(m mutate.array u8, c mutate.array u8, clen u64, pk mutate.array u8, sk mutate.array u8) i32 => native
  module crypto_box_sealbytes i64 => native
  module crypto_box_secretkeybytes i64 => native
  module crypto_box_seed_keypair(pk mutate.array u8, sk mutate.array u8, seed mutate.array u8) i32 => native
  module crypto_box_seedbytes i64 => native
  module crypto_box_zerobytes i64 => native
  module crypto_core_ed25519_add(r mutate.array u8, p mutate.array u8, q mutate.array u8) i32 => native
  module crypto_core_ed25519_bytes i64 => native
  module crypto_core_ed25519_from_hash(p mutate.array u8, h mutate.array u8) i32 => native
  module crypto_core_ed25519_from_uniform(p mutate.array u8, r mutate.array u8) i32 => native
  module crypto_core_ed25519_hashbytes i64 => native
  module crypto_core_ed25519_is_valid_point(p mutate.array u8) i32 => native
  module crypto_core_ed25519_nonreducedscalarbytes i64 => native
  module crypto_core_ed25519_random(p mutate.array u8) unit => native
  module crypto_core_ed25519_scalar_add(z mutate.array u8, x mutate.array u8, y mutate.array u8) unit => native
  module crypto_core_ed25519_scalar_complement(comp mutate.array u8, s mutate.array u8) unit => native
  module crypto_core_ed25519_scalar_invert(recip mutate.array u8, s mutate.array u8) i32 => native
  module crypto_core_ed25519_scalar_mul(z mutate.array u8, x mutate.array u8, y mutate.array u8) unit => native
  module crypto_core_ed25519_scalar_negate(neg mutate.array u8, s mutate.array u8) unit => native
  module crypto_core_ed25519_scalar_random(r mutate.array u8) unit => native
  module crypto_core_ed25519_scalar_reduce(r mutate.array u8, s mutate.array u8) unit => native
  module crypto_core_ed25519_scalar_sub(z mutate.array u8, x mutate.array u8, y mutate.array u8) unit => native
  module crypto_core_ed25519_scalarbytes i64 => native
  module crypto_core_ed25519_sub(r mutate.array u8, p mutate.array u8, q mutate.array u8) i32 => native
  module crypto_core_ed25519_uniformbytes i64 => native
  module crypto_core_hchacha20(out mutate.array u8, in_ mutate.array u8, k mutate.array u8, c mutate.array u8) i32 => native
  module crypto_core_hchacha20_constbytes i64 => native
  module crypto_core_hchacha20_inputbytes i64 => native
  module crypto_core_hchacha20_keybytes i64 => native
  module crypto_core_hchacha20_outputbytes i64 => native
  module crypto_core_hsalsa20(out mutate.array u8, in_ mutate.array u8, k mutate.array u8, c mutate.array u8) i32 => native
  module crypto_core_hsalsa20_constbytes i64 => native
  module crypto_core_hsalsa20_inputbytes i64 => native
  module crypto_core_hsalsa20_keybytes i64 => native
  module crypto_core_hsalsa20_outputbytes i64 => native
  module crypto_core_ristretto255_add(r mutate.array u8, p mutate.array u8, q mutate.array u8) i32 => native
  module crypto_core_ristretto255_bytes i64 => native
  module crypto_core_ristretto255_from_hash(p mutate.array u8, r mutate.array u8) i32 => native
  module crypto_core_ristretto255_hashbytes i64 => native
  module crypto_core_ristretto255_is_valid_point(p mutate.array u8) i32 => native
  module crypto_core_ristretto255_nonreducedscalarbytes i64 => native
  module crypto_core_ristretto255_random(p mutate.array u8) unit => native
  module crypto_core_ristretto255_scalar_add(z mutate.array u8, x mutate.array u8, y mutate.array u8) unit => native
  module crypto_core_ristretto255_scalar_complement(comp mutate.array u8, s mutate.array u8) unit => native
  module crypto_core_ristretto255_scalar_invert(recip mutate.array u8, s mutate.array u8) i32 => native
  module crypto_core_ristretto255_scalar_mul(z mutate.array u8, x mutate.array u8, y mutate.array u8) unit => native
  module crypto_core_ristretto255_scalar_negate(neg mutate.array u8, s mutate.array u8) unit => native
  module crypto_core_ristretto255_scalar_random(r mutate.array u8) unit => native
  module crypto_core_ristretto255_scalar_reduce(r mutate.array u8, s mutate.array u8) unit => native
  module crypto_core_ristretto255_scalar_sub(z mutate.array u8, x mutate.array u8, y mutate.array u8) unit => native
  module crypto_core_ristretto255_scalarbytes i64 => native
  module crypto_core_ristretto255_sub(r mutate.array u8, p mutate.array u8, q mutate.array u8) i32 => native
  module crypto_core_salsa20(out mutate.array u8, in_ mutate.array u8, k mutate.array u8, c mutate.array u8) i32 => native
  module crypto_core_salsa2012(out mutate.array u8, in_ mutate.array u8, k mutate.array u8, c mutate.array u8) i32 => native
  module crypto_core_salsa2012_constbytes i64 => native
  module crypto_core_salsa2012_inputbytes i64 => native
  module crypto_core_salsa2012_keybytes i64 => native
  module crypto_core_salsa2012_outputbytes i64 => native
  module crypto_core_salsa208(out mutate.array u8, in_ mutate.array u8, k mutate.array u8, c mutate.array u8) i32 => native
  module crypto_core_salsa208_constbytes i64 => native
  module crypto_core_salsa208_inputbytes i64 => native
  module crypto_core_salsa208_keybytes i64 => native
  module crypto_core_salsa208_outputbytes i64 => native
  module crypto_core_salsa20_constbytes i64 => native
  module crypto_core_salsa20_inputbytes i64 => native
  module crypto_core_salsa20_keybytes i64 => native
  module crypto_core_salsa20_outputbytes i64 => native
  module crypto_generichash(out mutate.array u8, outlen i64, in_ mutate.array u8, inlen u64, key mutate.array u8, keylen i64) i32 => native
  module crypto_generichash_blake2b(out mutate.array u8, outlen i64, in_ mutate.array u8, inlen u64, key mutate.array u8, keylen i64) i32 => native
  module crypto_generichash_blake2b_bytes i64 => native
  module crypto_generichash_blake2b_bytes_max i64 => native
  module crypto_generichash_blake2b_bytes_min i64 => native
  module crypto_generichash_blake2b_final(state Native_Ref /* from: crypto_generichash_blake2b_state * */, out mutate.array u8, outlen i64) i32 => native
  module crypto_generichash_blake2b_init(state Native_Ref /* from: crypto_generichash_blake2b_state * */, key mutate.array u8, keylen i64, outlen i64) i32 => native
  module crypto_generichash_blake2b_init_salt_personal(state Native_Ref /* from: crypto_generichash_blake2b_state * */, key mutate.array u8, keylen i64, outlen i64, salt mutate.array u8, personal mutate.array u8) i32 => native
  module crypto_generichash_blake2b_keybytes i64 => native
  module crypto_generichash_blake2b_keybytes_max i64 => native
  module crypto_generichash_blake2b_keybytes_min i64 => native
  module crypto_generichash_blake2b_keygen(k mutate.array u8) unit => native
  module crypto_generichash_blake2b_personalbytes i64 => native
  module crypto_generichash_blake2b_salt_personal(out mutate.array u8, outlen i64, in_ mutate.array u8, inlen u64, key mutate.array u8, keylen i64, salt mutate.array u8, personal mutate.array u8) i32 => native
  module crypto_generichash_blake2b_saltbytes i64 => native
  module crypto_generichash_blake2b_statebytes i64 => native
  module crypto_generichash_blake2b_update(state Native_Ref /* from: crypto_generichash_blake2b_state * */, in_ mutate.array u8, inlen u64) i32 => native
  module crypto_generichash_bytes i64 => native
  module crypto_generichash_bytes_max i64 => native
  module crypto_generichash_bytes_min i64 => native
  module crypto_generichash_final(state Native_Ref /* from: crypto_generichash_state * */, out mutate.array u8, outlen i64) i32 => native
  module crypto_generichash_init(state Native_Ref /* from: crypto_generichash_state * */, key mutate.array u8, keylen i64, outlen i64) i32 => native
  module crypto_generichash_keybytes i64 => native
  module crypto_generichash_keybytes_max i64 => native
  module crypto_generichash_keybytes_min i64 => native
  module crypto_generichash_keygen(k mutate.array u8) unit => native
  module crypto_generichash_primitive Native_Ref /* from: char * */ => native
  module crypto_generichash_statebytes i64 => native
  module crypto_generichash_update(state Native_Ref /* from: crypto_generichash_state * */, in_ mutate.array u8, inlen u64) i32 => native
  module crypto_hash(out mutate.array u8, in_ mutate.array u8, inlen u64) i32 => native
  module crypto_hash_bytes i64 => native
  module crypto_hash_primitive Native_Ref /* from: char * */ => native
  module crypto_hash_sha256(out mutate.array u8, in_ mutate.array u8, inlen u64) i32 => native
  module crypto_hash_sha256_bytes i64 => native
  module crypto_hash_sha256_final(state Native_Ref /* from: crypto_hash_sha256_state * */, out mutate.array u8) i32 => native
  module crypto_hash_sha256_init(state Native_Ref /* from: crypto_hash_sha256_state * */) i32 => native
  module crypto_hash_sha256_statebytes i64 => native
  module crypto_hash_sha256_update(state Native_Ref /* from: crypto_hash_sha256_state * */, in_ mutate.array u8, inlen u64) i32 => native
  module crypto_hash_sha512(out mutate.array u8, in_ mutate.array u8, inlen u64) i32 => native
  module crypto_hash_sha512_bytes i64 => native
  module crypto_hash_sha512_final(state Native_Ref /* from: crypto_hash_sha512_state * */, out mutate.array u8) i32 => native
  module crypto_hash_sha512_init(state Native_Ref /* from: crypto_hash_sha512_state * */) i32 => native
  module crypto_hash_sha512_statebytes i64 => native
  module crypto_hash_sha512_update(state Native_Ref /* from: crypto_hash_sha512_state * */, in_ mutate.array u8, inlen u64) i32 => native
  module crypto_kdf_blake2b_bytes_max i64 => native
  module crypto_kdf_blake2b_bytes_min i64 => native
  module crypto_kdf_blake2b_contextbytes i64 => native
  module crypto_kdf_blake2b_derive_from_key(subkey mutate.array u8, subkey_len i64, subkey_id u64, ctx mutate.array i8, key mutate.array u8) i32 => native
  module crypto_kdf_blake2b_keybytes i64 => native
  module crypto_kdf_bytes_max i64 => native
  module crypto_kdf_bytes_min i64 => native
  module crypto_kdf_contextbytes i64 => native
  module crypto_kdf_derive_from_key(subkey mutate.array u8, subkey_len i64, subkey_id u64, ctx mutate.array i8, key mutate.array u8) i32 => native
  module crypto_kdf_keybytes i64 => native
  module crypto_kdf_keygen(k mutate.array u8) unit => native
  module crypto_kdf_primitive Native_Ref /* from: char * */ => native
  module crypto_kx_client_session_keys(rx mutate.array u8, tx mutate.array u8, client_pk mutate.array u8, client_sk mutate.array u8, server_pk mutate.array u8) i32 => native
  module crypto_kx_keypair(pk mutate.array u8, sk mutate.array u8) i32 => native
  module crypto_kx_primitive Native_Ref /* from: char * */ => native
  module crypto_kx_publickeybytes i64 => native
  module crypto_kx_secretkeybytes i64 => native
  module crypto_kx_seed_keypair(pk mutate.array u8, sk mutate.array u8, seed mutate.array u8) i32 => native
  module crypto_kx_seedbytes i64 => native
  module crypto_kx_server_session_keys(rx mutate.array u8, tx mutate.array u8, server_pk mutate.array u8, server_sk mutate.array u8, client_pk mutate.array u8) i32 => native
  module crypto_kx_sessionkeybytes i64 => native
  module crypto_onetimeauth(out mutate.array u8, in_ mutate.array u8, inlen u64, k mutate.array u8) i32 => native
  module crypto_onetimeauth_bytes i64 => native
  module crypto_onetimeauth_final(state Native_Ref /* from: crypto_onetimeauth_state * */, out mutate.array u8) i32 => native
  module crypto_onetimeauth_init(state Native_Ref /* from: crypto_onetimeauth_state * */, key mutate.array u8) i32 => native
  module crypto_onetimeauth_keybytes i64 => native
  module crypto_onetimeauth_keygen(k mutate.array u8) unit => native
  module crypto_onetimeauth_poly1305(out mutate.array u8, in_ mutate.array u8, inlen u64, k mutate.array u8) i32 => native
  module crypto_onetimeauth_poly1305_bytes i64 => native
  module crypto_onetimeauth_poly1305_final(state Native_Ref /* from: crypto_onetimeauth_poly1305_state * */, out mutate.array u8) i32 => native
  module crypto_onetimeauth_poly1305_init(state Native_Ref /* from: crypto_onetimeauth_poly1305_state * */, key mutate.array u8) i32 => native
  module crypto_onetimeauth_poly1305_keybytes i64 => native
  module crypto_onetimeauth_poly1305_keygen(k mutate.array u8) unit => native
  module crypto_onetimeauth_poly1305_statebytes i64 => native
  module crypto_onetimeauth_poly1305_update(state Native_Ref /* from: crypto_onetimeauth_poly1305_state * */, in_ mutate.array u8, inlen u64) i32 => native
  module crypto_onetimeauth_poly1305_verify(h mutate.array u8, in_ mutate.array u8, inlen u64, k mutate.array u8) i32 => native
  module crypto_onetimeauth_primitive Native_Ref /* from: char * */ => native
  module crypto_onetimeauth_statebytes i64 => native
  module crypto_onetimeauth_update(state Native_Ref /* from: crypto_onetimeauth_state * */, in_ mutate.array u8, inlen u64) i32 => native
  module crypto_onetimeauth_verify(h mutate.array u8, in_ mutate.array u8, inlen u64, k mutate.array u8) i32 => native
  module crypto_pwhash(out mutate.array u8, outlen u64, passwd mutate.array i8, passwdlen u64, salt mutate.array u8, opslimit u64, memlimit i64, alg i32) i32 => native
  module crypto_pwhash_alg_argon2i13 i32 => native
  module crypto_pwhash_alg_argon2id13 i32 => native
  module crypto_pwhash_alg_default i32 => native
  module crypto_pwhash_argon2i(out mutate.array u8, outlen u64, passwd mutate.array i8, passwdlen u64, salt mutate.array u8, opslimit u64, memlimit i64, alg i32) i32 => native
  module crypto_pwhash_argon2i_alg_argon2i13 i32 => native
  module crypto_pwhash_argon2i_bytes_max i64 => native
  module crypto_pwhash_argon2i_bytes_min i64 => native
  module crypto_pwhash_argon2i_memlimit_interactive i64 => native
  module crypto_pwhash_argon2i_memlimit_max i64 => native
  module crypto_pwhash_argon2i_memlimit_min i64 => native
  module crypto_pwhash_argon2i_memlimit_moderate i64 => native
  module crypto_pwhash_argon2i_memlimit_sensitive i64 => native
  module crypto_pwhash_argon2i_opslimit_interactive i64 => native
  module crypto_pwhash_argon2i_opslimit_max i64 => native
  module crypto_pwhash_argon2i_opslimit_min i64 => native
  module crypto_pwhash_argon2i_opslimit_moderate i64 => native
  module crypto_pwhash_argon2i_opslimit_sensitive i64 => native
  module crypto_pwhash_argon2i_passwd_max i64 => native
  module crypto_pwhash_argon2i_passwd_min i64 => native
  module crypto_pwhash_argon2i_saltbytes i64 => native
  module crypto_pwhash_argon2i_str(out mutate.array i8, passwd mutate.array i8, passwdlen u64, opslimit u64, memlimit i64) i32 => native
  module crypto_pwhash_argon2i_str_needs_rehash(str mutate.array i8, opslimit u64, memlimit i64) i32 => native
  module crypto_pwhash_argon2i_str_verify(str mutate.array i8, passwd mutate.array i8, passwdlen u64) i32 => native
  module crypto_pwhash_argon2i_strbytes i64 => native
  module crypto_pwhash_argon2i_strprefix Native_Ref /* from: char * */ => native
  module crypto_pwhash_argon2id(out mutate.array u8, outlen u64, passwd mutate.array i8, passwdlen u64, salt mutate.array u8, opslimit u64, memlimit i64, alg i32) i32 => native
  module crypto_pwhash_argon2id_alg_argon2id13 i32 => native
  module crypto_pwhash_argon2id_bytes_max i64 => native
  module crypto_pwhash_argon2id_bytes_min i64 => native
  module crypto_pwhash_argon2id_memlimit_interactive i64 => native
  module crypto_pwhash_argon2id_memlimit_max i64 => native
  module crypto_pwhash_argon2id_memlimit_min i64 => native
  module crypto_pwhash_argon2id_memlimit_moderate i64 => native
  module crypto_pwhash_argon2id_memlimit_sensitive i64 => native
  module crypto_pwhash_argon2id_opslimit_interactive i64 => native
  module crypto_pwhash_argon2id_opslimit_max i64 => native
  module crypto_pwhash_argon2id_opslimit_min i64 => native
  module crypto_pwhash_argon2id_opslimit_moderate i64 => native
  module crypto_pwhash_argon2id_opslimit_sensitive i64 => native
  module crypto_pwhash_argon2id_passwd_max i64 => native
  module crypto_pwhash_argon2id_passwd_min i64 => native
  module crypto_pwhash_argon2id_saltbytes i64 => native
  module crypto_pwhash_argon2id_str(out mutate.array i8, passwd mutate.array i8, passwdlen u64, opslimit u64, memlimit i64) i32 => native
  module crypto_pwhash_argon2id_str_needs_rehash(str mutate.array i8, opslimit u64, memlimit i64) i32 => native
  module crypto_pwhash_argon2id_str_verify(str mutate.array i8, passwd mutate.array i8, passwdlen u64) i32 => native
  module crypto_pwhash_argon2id_strbytes i64 => native
  module crypto_pwhash_argon2id_strprefix Native_Ref /* from: char * */ => native
  module crypto_pwhash_bytes_max i64 => native
  module crypto_pwhash_bytes_min i64 => native
  module crypto_pwhash_memlimit_interactive i64 => native
  module crypto_pwhash_memlimit_max i64 => native
  module crypto_pwhash_memlimit_min i64 => native
  module crypto_pwhash_memlimit_moderate i64 => native
  module crypto_pwhash_memlimit_sensitive i64 => native
  module crypto_pwhash_opslimit_interactive i64 => native
  module crypto_pwhash_opslimit_max i64 => native
  module crypto_pwhash_opslimit_min i64 => native
  module crypto_pwhash_opslimit_moderate i64 => native
  module crypto_pwhash_opslimit_sensitive i64 => native
  module crypto_pwhash_passwd_max i64 => native
  module crypto_pwhash_passwd_min i64 => native
  module crypto_pwhash_primitive Native_Ref /* from: char * */ => native
  module crypto_pwhash_saltbytes i64 => native
  module crypto_pwhash_scryptsalsa208sha256(out mutate.array u8, outlen u64, passwd mutate.array i8, passwdlen u64, salt mutate.array u8, opslimit u64, memlimit i64) i32 => native
  module crypto_pwhash_scryptsalsa208sha256_bytes_max i64 => native
  module crypto_pwhash_scryptsalsa208sha256_bytes_min i64 => native
  module crypto_pwhash_scryptsalsa208sha256_ll(passwd mutate.array u8, passwdlen i64, salt mutate.array u8, saltlen i64, N u64, r u32, p u32, buf mutate.array u8, buflen i64) i32 => native
  module crypto_pwhash_scryptsalsa208sha256_memlimit_interactive i64 => native
  module crypto_pwhash_scryptsalsa208sha256_memlimit_max i64 => native
  module crypto_pwhash_scryptsalsa208sha256_memlimit_min i64 => native
  module crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive i64 => native
  module crypto_pwhash_scryptsalsa208sha256_opslimit_interactive i64 => native
  module crypto_pwhash_scryptsalsa208sha256_opslimit_max i64 => native
  module crypto_pwhash_scryptsalsa208sha256_opslimit_min i64 => native
  module crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive i64 => native
  module crypto_pwhash_scryptsalsa208sha256_passwd_max i64 => native
  module crypto_pwhash_scryptsalsa208sha256_passwd_min i64 => native
  module crypto_pwhash_scryptsalsa208sha256_saltbytes i64 => native
  module crypto_pwhash_scryptsalsa208sha256_str(out mutate.array i8, passwd mutate.array i8, passwdlen u64, opslimit u64, memlimit i64) i32 => native
  module crypto_pwhash_scryptsalsa208sha256_str_needs_rehash(str mutate.array i8, opslimit u64, memlimit i64) i32 => native
  module crypto_pwhash_scryptsalsa208sha256_str_verify(str mutate.array i8, passwd mutate.array i8, passwdlen u64) i32 => native
  module crypto_pwhash_scryptsalsa208sha256_strbytes i64 => native
  module crypto_pwhash_scryptsalsa208sha256_strprefix Native_Ref /* from: char * */ => native
  module crypto_pwhash_str(out mutate.array i8, passwd mutate.array i8, passwdlen u64, opslimit u64, memlimit i64) i32 => native
  module crypto_pwhash_str_alg(out mutate.array i8, passwd mutate.array i8, passwdlen u64, opslimit u64, memlimit i64, alg i32) i32 => native
  module crypto_pwhash_str_needs_rehash(str mutate.array i8, opslimit u64, memlimit i64) i32 => native
  module crypto_pwhash_str_verify(str mutate.array i8, passwd mutate.array i8, passwdlen u64) i32 => native
  module crypto_pwhash_strbytes i64 => native
  module crypto_pwhash_strprefix Native_Ref /* from: char * */ => native
  module crypto_scalarmult(q mutate.array u8, n mutate.array u8, p mutate.array u8) i32 => native
  module crypto_scalarmult_base(q mutate.array u8, n mutate.array u8) i32 => native
  module crypto_scalarmult_bytes i64 => native
  module crypto_scalarmult_curve25519(q mutate.array u8, n mutate.array u8, p mutate.array u8) i32 => native
  module crypto_scalarmult_curve25519_base(q mutate.array u8, n mutate.array u8) i32 => native
  module crypto_scalarmult_curve25519_bytes i64 => native
  module crypto_scalarmult_curve25519_scalarbytes i64 => native
  module crypto_scalarmult_ed25519(q mutate.array u8, n mutate.array u8, p mutate.array u8) i32 => native
  module crypto_scalarmult_ed25519_base(q mutate.array u8, n mutate.array u8) i32 => native
  module crypto_scalarmult_ed25519_base_noclamp(q mutate.array u8, n mutate.array u8) i32 => native
  module crypto_scalarmult_ed25519_bytes i64 => native
  module crypto_scalarmult_ed25519_noclamp(q mutate.array u8, n mutate.array u8, p mutate.array u8) i32 => native
  module crypto_scalarmult_ed25519_scalarbytes i64 => native
  module crypto_scalarmult_primitive Native_Ref /* from: char * */ => native
  module crypto_scalarmult_ristretto255(q mutate.array u8, n mutate.array u8, p mutate.array u8) i32 => native
  module crypto_scalarmult_ristretto255_base(q mutate.array u8, n mutate.array u8) i32 => native
  module crypto_scalarmult_ristretto255_bytes i64 => native
  module crypto_scalarmult_ristretto255_scalarbytes i64 => native
  module crypto_scalarmult_scalarbytes i64 => native
  module crypto_secretbox(c mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_secretbox_boxzerobytes i64 => native
  module crypto_secretbox_detached(c mutate.array u8, mac mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_secretbox_easy(c mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_secretbox_keybytes i64 => native
  module crypto_secretbox_keygen(k mutate.array u8) unit => native
  module crypto_secretbox_macbytes i64 => native
  module crypto_secretbox_messagebytes_max i64 => native
  module crypto_secretbox_noncebytes i64 => native
  module crypto_secretbox_open(m mutate.array u8, c mutate.array u8, clen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_secretbox_open_detached(m mutate.array u8, c mutate.array u8, mac mutate.array u8, clen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_secretbox_open_easy(m mutate.array u8, c mutate.array u8, clen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_secretbox_primitive Native_Ref /* from: char * */ => native
  module crypto_secretbox_xchacha20poly1305_detached(c mutate.array u8, mac mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_secretbox_xchacha20poly1305_easy(c mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_secretbox_xchacha20poly1305_keybytes i64 => native
  module crypto_secretbox_xchacha20poly1305_macbytes i64 => native
  module crypto_secretbox_xchacha20poly1305_messagebytes_max i64 => native
  module crypto_secretbox_xchacha20poly1305_noncebytes i64 => native
  module crypto_secretbox_xchacha20poly1305_open_detached(m mutate.array u8, c mutate.array u8, mac mutate.array u8, clen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_secretbox_xchacha20poly1305_open_easy(m mutate.array u8, c mutate.array u8, clen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_secretbox_xsalsa20poly1305(c mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_secretbox_xsalsa20poly1305_boxzerobytes i64 => native
  module crypto_secretbox_xsalsa20poly1305_keybytes i64 => native
  module crypto_secretbox_xsalsa20poly1305_keygen(k mutate.array u8) unit => native
  module crypto_secretbox_xsalsa20poly1305_macbytes i64 => native
  module crypto_secretbox_xsalsa20poly1305_messagebytes_max i64 => native
  module crypto_secretbox_xsalsa20poly1305_noncebytes i64 => native
  module crypto_secretbox_xsalsa20poly1305_open(m mutate.array u8, c mutate.array u8, clen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_secretbox_xsalsa20poly1305_zerobytes i64 => native
  module crypto_secretbox_zerobytes i64 => native
  module crypto_secretstream_xchacha20poly1305_abytes i64 => native
  module crypto_secretstream_xchacha20poly1305_headerbytes i64 => native
  module crypto_secretstream_xchacha20poly1305_init_pull(state Native_Ref /* from: crypto_secretstream_xchacha20poly1305_state * */, header mutate.array u8, k mutate.array u8) i32 => native
  module crypto_secretstream_xchacha20poly1305_init_push(state Native_Ref /* from: crypto_secretstream_xchacha20poly1305_state * */, header mutate.array u8, k mutate.array u8) i32 => native
  module crypto_secretstream_xchacha20poly1305_keybytes i64 => native
  module crypto_secretstream_xchacha20poly1305_keygen(k mutate.array u8) unit => native
  module crypto_secretstream_xchacha20poly1305_messagebytes_max i64 => native
  module crypto_secretstream_xchacha20poly1305_pull(state Native_Ref /* from: crypto_secretstream_xchacha20poly1305_state * */, m mutate.array u8, mlen_p mutate.array u64, tag_p mutate.array u8, c mutate.array u8, clen u64, ad mutate.array u8, adlen u64) i32 => native
  module crypto_secretstream_xchacha20poly1305_push(state Native_Ref /* from: crypto_secretstream_xchacha20poly1305_state * */, c mutate.array u8, clen_p mutate.array u64, m mutate.array u8, mlen u64, ad mutate.array u8, adlen u64, tag u8) i32 => native
  module crypto_secretstream_xchacha20poly1305_rekey(state Native_Ref /* from: crypto_secretstream_xchacha20poly1305_state * */) unit => native
  module crypto_secretstream_xchacha20poly1305_statebytes i64 => native
  module crypto_secretstream_xchacha20poly1305_tag_final u8 => native
  module crypto_secretstream_xchacha20poly1305_tag_message u8 => native
  module crypto_secretstream_xchacha20poly1305_tag_push u8 => native
  module crypto_secretstream_xchacha20poly1305_tag_rekey u8 => native
  module crypto_shorthash(out mutate.array u8, in_ mutate.array u8, inlen u64, k mutate.array u8) i32 => native
  module crypto_shorthash_bytes i64 => native
  module crypto_shorthash_keybytes i64 => native
  module crypto_shorthash_keygen(k mutate.array u8) unit => native
  module crypto_shorthash_primitive Native_Ref /* from: char * */ => native
  module crypto_shorthash_siphash24(out mutate.array u8, in_ mutate.array u8, inlen u64, k mutate.array u8) i32 => native
  module crypto_shorthash_siphash24_bytes i64 => native
  module crypto_shorthash_siphash24_keybytes i64 => native
  module crypto_shorthash_siphashx24(out mutate.array u8, in_ mutate.array u8, inlen u64, k mutate.array u8) i32 => native
  module crypto_shorthash_siphashx24_bytes i64 => native
  module crypto_shorthash_siphashx24_keybytes i64 => native
  module crypto_sign(sm mutate.array u8, smlen_p mutate.array u64, m mutate.array u8, mlen u64, sk mutate.array u8) i32 => native
  module crypto_sign_bytes i64 => native
  module crypto_sign_detached(sig mutate.array u8, siglen_p mutate.array u64, m mutate.array u8, mlen u64, sk mutate.array u8) i32 => native
  module crypto_sign_ed25519(sm mutate.array u8, smlen_p mutate.array u64, m mutate.array u8, mlen u64, sk mutate.array u8) i32 => native
  module crypto_sign_ed25519_bytes i64 => native
  module crypto_sign_ed25519_detached(sig mutate.array u8, siglen_p mutate.array u64, m mutate.array u8, mlen u64, sk mutate.array u8) i32 => native
  module crypto_sign_ed25519_keypair(pk mutate.array u8, sk mutate.array u8) i32 => native
  module crypto_sign_ed25519_messagebytes_max i64 => native
  module crypto_sign_ed25519_open(m mutate.array u8, mlen_p mutate.array u64, sm mutate.array u8, smlen u64, pk mutate.array u8) i32 => native
  module crypto_sign_ed25519_pk_to_curve25519(curve25519_pk mutate.array u8, ed25519_pk mutate.array u8) i32 => native
  module crypto_sign_ed25519_publickeybytes i64 => native
  module crypto_sign_ed25519_secretkeybytes i64 => native
  module crypto_sign_ed25519_seed_keypair(pk mutate.array u8, sk mutate.array u8, seed mutate.array u8) i32 => native
  module crypto_sign_ed25519_seedbytes i64 => native
  module crypto_sign_ed25519_sk_to_curve25519(curve25519_sk mutate.array u8, ed25519_sk mutate.array u8) i32 => native
  module crypto_sign_ed25519_sk_to_pk(pk mutate.array u8, sk mutate.array u8) i32 => native
  module crypto_sign_ed25519_sk_to_seed(seed mutate.array u8, sk mutate.array u8) i32 => native
  module crypto_sign_ed25519_verify_detached(sig mutate.array u8, m mutate.array u8, mlen u64, pk mutate.array u8) i32 => native
  module crypto_sign_ed25519ph_final_create(state Native_Ref /* from: crypto_sign_ed25519ph_state * */, sig mutate.array u8, siglen_p mutate.array u64, sk mutate.array u8) i32 => native
  module crypto_sign_ed25519ph_final_verify(state Native_Ref /* from: crypto_sign_ed25519ph_state * */, sig mutate.array u8, pk mutate.array u8) i32 => native
  module crypto_sign_ed25519ph_init(state Native_Ref /* from: crypto_sign_ed25519ph_state * */) i32 => native
  module crypto_sign_ed25519ph_statebytes i64 => native
  module crypto_sign_ed25519ph_update(state Native_Ref /* from: crypto_sign_ed25519ph_state * */, m mutate.array u8, mlen u64) i32 => native
  module crypto_sign_final_create(state Native_Ref /* from: crypto_sign_state * */, sig mutate.array u8, siglen_p mutate.array u64, sk mutate.array u8) i32 => native
  module crypto_sign_final_verify(state Native_Ref /* from: crypto_sign_state * */, sig mutate.array u8, pk mutate.array u8) i32 => native
  module crypto_sign_init(state Native_Ref /* from: crypto_sign_state * */) i32 => native
  module crypto_sign_keypair(pk mutate.array u8, sk mutate.array u8) i32 => native
  module crypto_sign_messagebytes_max i64 => native
  module crypto_sign_open(m mutate.array u8, mlen_p mutate.array u64, sm mutate.array u8, smlen u64, pk mutate.array u8) i32 => native
  module crypto_sign_primitive Native_Ref /* from: char * */ => native
  module crypto_sign_publickeybytes i64 => native
  module crypto_sign_secretkeybytes i64 => native
  module crypto_sign_seed_keypair(pk mutate.array u8, sk mutate.array u8, seed mutate.array u8) i32 => native
  module crypto_sign_seedbytes i64 => native
  module crypto_sign_statebytes i64 => native
  module crypto_sign_update(state Native_Ref /* from: crypto_sign_state * */, m mutate.array u8, mlen u64) i32 => native
  module crypto_sign_verify_detached(sig mutate.array u8, m mutate.array u8, mlen u64, pk mutate.array u8) i32 => native
  module crypto_stream(c mutate.array u8, clen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_stream_chacha20(c mutate.array u8, clen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_stream_chacha20_ietf(c mutate.array u8, clen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_stream_chacha20_ietf_keybytes i64 => native
  module crypto_stream_chacha20_ietf_keygen(k mutate.array u8) unit => native
  module crypto_stream_chacha20_ietf_messagebytes_max i64 => native
  module crypto_stream_chacha20_ietf_noncebytes i64 => native
  module crypto_stream_chacha20_ietf_xor(c mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_stream_chacha20_ietf_xor_ic(c mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, ic u32, k mutate.array u8) i32 => native
  module crypto_stream_chacha20_keybytes i64 => native
  module crypto_stream_chacha20_keygen(k mutate.array u8) unit => native
  module crypto_stream_chacha20_messagebytes_max i64 => native
  module crypto_stream_chacha20_noncebytes i64 => native
  module crypto_stream_chacha20_xor(c mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_stream_chacha20_xor_ic(c mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, ic u64, k mutate.array u8) i32 => native
  module crypto_stream_keybytes i64 => native
  module crypto_stream_keygen(k mutate.array u8) unit => native
  module crypto_stream_messagebytes_max i64 => native
  module crypto_stream_noncebytes i64 => native
  module crypto_stream_primitive Native_Ref /* from: char * */ => native
  module crypto_stream_salsa20(c mutate.array u8, clen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_stream_salsa2012(c mutate.array u8, clen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_stream_salsa2012_keybytes i64 => native
  module crypto_stream_salsa2012_keygen(k mutate.array u8) unit => native
  module crypto_stream_salsa2012_messagebytes_max i64 => native
  module crypto_stream_salsa2012_noncebytes i64 => native
  module crypto_stream_salsa2012_xor(c mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_stream_salsa208(c mutate.array u8, clen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_stream_salsa208_keybytes i64 => native
  module crypto_stream_salsa208_keygen(k mutate.array u8) unit => native
  module crypto_stream_salsa208_messagebytes_max i64 => native
  module crypto_stream_salsa208_noncebytes i64 => native
  module crypto_stream_salsa208_xor(c mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_stream_salsa20_keybytes i64 => native
  module crypto_stream_salsa20_keygen(k mutate.array u8) unit => native
  module crypto_stream_salsa20_messagebytes_max i64 => native
  module crypto_stream_salsa20_noncebytes i64 => native
  module crypto_stream_salsa20_xor(c mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_stream_salsa20_xor_ic(c mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, ic u64, k mutate.array u8) i32 => native
  module crypto_stream_xchacha20(c mutate.array u8, clen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_stream_xchacha20_keybytes i64 => native
  module crypto_stream_xchacha20_keygen(k mutate.array u8) unit => native
  module crypto_stream_xchacha20_messagebytes_max i64 => native
  module crypto_stream_xchacha20_noncebytes i64 => native
  module crypto_stream_xchacha20_xor(c mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_stream_xchacha20_xor_ic(c mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, ic u64, k mutate.array u8) i32 => native
  module crypto_stream_xor(c mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_stream_xsalsa20(c mutate.array u8, clen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_stream_xsalsa20_keybytes i64 => native
  module crypto_stream_xsalsa20_keygen(k mutate.array u8) unit => native
  module crypto_stream_xsalsa20_messagebytes_max i64 => native
  module crypto_stream_xsalsa20_noncebytes i64 => native
  module crypto_stream_xsalsa20_xor(c mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, k mutate.array u8) i32 => native
  module crypto_stream_xsalsa20_xor_ic(c mutate.array u8, m mutate.array u8, mlen u64, n mutate.array u8, ic u64, k mutate.array u8) i32 => native
  module crypto_verify_16(x mutate.array u8, y mutate.array u8) i32 => native
  module crypto_verify_16_bytes i64 => native
  module crypto_verify_32(x mutate.array u8, y mutate.array u8) i32 => native
  module crypto_verify_32_bytes i64 => native
  module crypto_verify_64(x mutate.array u8, y mutate.array u8) i32 => native
  module crypto_verify_64_bytes i64 => native
  module ctermid(__s mutate.array i8) Native_Ref /* from: char * */ => native
  module dprintf(__fd i32, __fmt mutate.array i8) i32 => native
  module drand48 f64 => native
  module drand48_r(__buffer Native_Ref /* from: struct drand48_data * */, __result mutate.array f64) i32 => native
  module ecvt(__value f64, __ndigit i32, __decpt mutate.array i32, __sign mutate.array i32) Native_Ref /* from: char * */ => native
  module ecvt_r(__value f64, __ndigit i32, __decpt mutate.array i32, __sign mutate.array i32, __buf mutate.array i8, __len i64) i32 => native
  module erand48(__xsubi mutate.array u16) f64 => native
  module erand48_r(__xsubi mutate.array u16, __buffer Native_Ref /* from: struct drand48_data * */, __result mutate.array f64) i32 => native
  module exit(__status i32) unit => native
  module fclose(__stream Native_Ref) i32 => native
  module fcvt(__value f64, __ndigit i32, __decpt mutate.array i32, __sign mutate.array i32) Native_Ref /* from: char * */ => native
  module fcvt_r(__value f64, __ndigit i32, __decpt mutate.array i32, __sign mutate.array i32, __buf mutate.array i8, __len i64) i32 => native
  module fdopen(__fd i32, __modes mutate.array i8) Native_Ref /* from: FILE * */ => native
  module feof(__stream Native_Ref) i32 => native
  module feof_unlocked(__stream Native_Ref) i32 => native
  module ferror(__stream Native_Ref) i32 => native
  module ferror_unlocked(__stream Native_Ref) i32 => native
  module fflush(__stream Native_Ref) i32 => native
  module fflush_unlocked(__stream Native_Ref) i32 => native
  module fgetc(__stream Native_Ref) i32 => native
  module fgetc_unlocked(__stream Native_Ref) i32 => native
  module fgetpos(__stream Native_Ref, __pos Native_Ref /* from: fpos_t * */) i32 => native
  module fgets(__s mutate.array i8, __n i32, __stream Native_Ref) Native_Ref /* from: char * */ => native
  module fileno(__stream Native_Ref) i32 => native
  module fileno_unlocked(__stream Native_Ref) i32 => native
  module flockfile(__stream Native_Ref) unit => native
  module fmemopen(__s Native_Ref /* from: void * */, __len i64, __modes mutate.array i8) Native_Ref /* from: FILE * */ => native
  module fopen(__filename mutate.array i8, __modes mutate.array i8) Native_Ref /* from: FILE * */ => native
  module fprintf(__stream Native_Ref, __format mutate.array i8) i32 => native
  module fputc(__c i32, __stream Native_Ref) i32 => native
  module fputc_unlocked(__c i32, __stream Native_Ref) i32 => native
  module fputs(__s mutate.array i8, __stream Native_Ref) i32 => native
  module fread_unlocked(__ptr Native_Ref /* from: void * */, __size i64, __n i64, __stream Native_Ref) i64 => native
  module free(__ptr Native_Ref /* from: void * */) unit => native
  module freopen(__filename mutate.array i8, __modes mutate.array i8, __stream Native_Ref) Native_Ref /* from: FILE * */ => native
  module fscanf(__stream Native_Ref, __format mutate.array i8) i32 => native
  module fseek(__stream Native_Ref, __off i64, __whence i32) i32 => native
  module fsetpos(__stream Native_Ref, __pos Native_Ref /* from: fpos_t * */) i32 => native
  module ftell(__stream Native_Ref) i64 => native
  module ftrylockfile(__stream Native_Ref) i32 => native
  module funlockfile(__stream Native_Ref) unit => native
  module fwrite_unlocked(__ptr Native_Ref /* from: void * */, __size i64, __n i64, __stream Native_Ref) i64 => native
  module gcvt(__value f64, __ndigit i32, __buf mutate.array i8) Native_Ref /* from: char * */ => native
  module getc(__stream Native_Ref) i32 => native
  module getc_unlocked(__stream Native_Ref) i32 => native
  module getchar i32 => native
  module getchar_unlocked i32 => native
  module getenv(__name mutate.array i8) Native_Ref /* from: char * */ => native
  module getloadavg(__loadavg mutate.array f64, __nelem i32) i32 => native
  module getsubopt(__optionp Native_Ref /* from: char ** */, __tokens Native_Ref /* from: char ** */, __valuep Native_Ref /* from: char ** */) i32 => native
  module getw(__stream Native_Ref) i32 => native
  module jrand48(__xsubi mutate.array u16) i64 => native
  module jrand48_r(__xsubi mutate.array u16, __buffer Native_Ref /* from: struct drand48_data * */, __result mutate.array i64) i32 => native
  module l64a(__n i64) Native_Ref /* from: char * */ => native
  module labs(__x i64) i64 => native
  module lcong48(__param mutate.array u16) unit => native
  module lcong48_r(__param mutate.array u16, __buffer Native_Ref /* from: struct drand48_data * */) i32 => native
  module lrand48 i64 => native
  module lrand48_r(__buffer Native_Ref /* from: struct drand48_data * */, __result mutate.array i64) i32 => native
  module malloc(__size i64) Native_Ref /* from: void * */ => native
  module mblen(__s mutate.array i8, __n i64) i32 => native
  module mbstowcs(__pwcs Native_Ref /* from: wchar_t * */, __s mutate.array i8, __n i64) i64 => native
  module mbtowc(__pwc Native_Ref /* from: wchar_t * */, __s mutate.array i8, __n i64) i32 => native
  module mkdtemp(__template mutate.array i8) Native_Ref /* from: char * */ => native
  module mkstemp(__template mutate.array i8) i32 => native
  module mkstemps(__template mutate.array i8, __suffixlen i32) i32 => native
  module mktemp(__template mutate.array i8) Native_Ref /* from: char * */ => native
  module mrand48 i64 => native
  module mrand48_r(__buffer Native_Ref /* from: struct drand48_data * */, __result mutate.array i64) i32 => native
  module nrand48(__xsubi mutate.array u16) i64 => native
  module nrand48_r(__xsubi mutate.array u16, __buffer Native_Ref /* from: struct drand48_data * */, __result mutate.array i64) i32 => native
  module on_exit(__func Native_Ref /* from: void (*)(int, void *) */, __arg Native_Ref /* from: void * */) i32 => native
  module open_memstream(__bufloc Native_Ref /* from: char ** */, __sizeloc mutate.array i64) Native_Ref /* from: FILE * */ => native
  module pclose(__stream Native_Ref) i32 => native
  module perror(__s mutate.array i8) unit => native
  module popen(__command mutate.array i8, __modes mutate.array i8) Native_Ref /* from: FILE * */ => native
  module posix_memalign(__memptr Native_Ref /* from: void ** */, __alignment i64, __size i64) i32 => native
  module printf(__format mutate.array i8) i32 => native
  module pselect(__nfds i32, __readfds Native_Ref /* from: fd_set * */, __writefds Native_Ref /* from: fd_set * */, __exceptfds Native_Ref /* from: fd_set * */, __timeout Native_Ref /* from: struct timespec * */, __sigmask Native_Ref /* from: __sigset_t * */) i32 => native
  module putc(__c i32, __stream Native_Ref) i32 => native
  module putc_unlocked(__c i32, __stream Native_Ref) i32 => native
  module putchar(__c i32) i32 => native
  module putchar_unlocked(__c i32) i32 => native
  module putenv(__string mutate.array i8) i32 => native
  module puts(__s mutate.array i8) i32 => native
  module putw(__w i32, __stream Native_Ref) i32 => native
  module quick_exit(__status i32) unit => native
  module rand i32 => native
  module rand_r(__seed mutate.array u32) i32 => native
  module random i64 => native
  module random_r(__buf Native_Ref /* from: struct random_data * */, __result mutate.array i32) i32 => native
  module randombytes(buf mutate.array u8, buf_len u64) unit => native
  module randombytes_buf(buf Native_Ref /* from: void * */, size i64) unit => native
  module randombytes_buf_deterministic(buf Native_Ref /* from: void * */, size i64, seed mutate.array u8) unit => native
  module randombytes_close i32 => native
  module randombytes_implementation_name Native_Ref /* from: char * */ => native
  module randombytes_random u32 => native
  module randombytes_seedbytes i64 => native
  module randombytes_set_implementation(impl Native_Ref /* from: randombytes_implementation * */) i32 => native
  module randombytes_stir unit => native
  module randombytes_uniform(upper_bound u32) u32 => native
  module realloc(__ptr Native_Ref /* from: void * */, __size i64) Native_Ref /* from: void * */ => native
  module reallocarray(__ptr Native_Ref /* from: void * */, __nmemb i64, __size i64) Native_Ref /* from: void * */ => native
  module realpath(__name mutate.array i8, __resolved mutate.array i8) Native_Ref /* from: char * */ => native
  module remove(__filename mutate.array i8) i32 => native
  module rename(__old mutate.array i8, __new mutate.array i8) i32 => native
  module renameat(__oldfd i32, __old mutate.array i8, __newfd i32, __new mutate.array i8) i32 => native
  module rewind(__stream Native_Ref) unit => native
  module rpmatch(__response mutate.array i8) i32 => native
  module scanf(__format mutate.array i8) i32 => native
  module seed48(__seed16v mutate.array u16) Native_Ref /* from: unsigned short * */ => native
  module seed48_r(__seed16v mutate.array u16, __buffer Native_Ref /* from: struct drand48_data * */) i32 => native
  module select(__nfds i32, __readfds Native_Ref /* from: fd_set * */, __writefds Native_Ref /* from: fd_set * */, __exceptfds Native_Ref /* from: fd_set * */, __timeout Native_Ref /* from: struct timeval * */) i32 => native
  module setbuf(__stream Native_Ref, __buf mutate.array i8) unit => native
  module setbuffer(__stream Native_Ref, __buf mutate.array i8, __size i64) unit => native
  module setenv(__name mutate.array i8, __value mutate.array i8, __replace i32) i32 => native
  module setlinebuf(__stream Native_Ref) unit => native
  module setstate(__statebuf mutate.array i8) Native_Ref /* from: char * */ => native
  module setstate_r(__statebuf mutate.array i8, __buf Native_Ref /* from: struct random_data * */) i32 => native
  module setvbuf(__stream Native_Ref, __buf mutate.array i8, __modes i32, __n i64) i32 => native
  module snprintf(__s mutate.array i8, __maxlen i64, __format mutate.array i8) i32 => native
  module sodium_add(a mutate.array u8, b mutate.array u8, len i64) unit => native
  module sodium_allocarray(count i64, size i64) Native_Ref /* from: void * */ => native
  module sodium_base642bin(bin mutate.array u8, bin_maxlen i64, b64 mutate.array i8, b64_len i64, ignore mutate.array i8, bin_len mutate.array i64, b64_end Native_Ref /* from: char ** */, variant_ i32) i32 => native
  module sodium_base64_encoded_len(bin_len i64, variant_ i32) i64 => native
  module sodium_bin2base64(b64 mutate.array i8, b64_maxlen i64, bin mutate.array u8, bin_len i64, variant_ i32) Native_Ref /* from: char * */ => native
  module sodium_bin2hex(hex mutate.array i8, hex_maxlen i64, bin mutate.array u8, bin_len i64) Native_Ref /* from: char * */ => native
  module sodium_compare(b1_ mutate.array u8, b2_ mutate.array u8, len i64) i32 => native
  module sodium_free(ptr Native_Ref /* from: void * */) unit => native
  module sodium_hex2bin(bin mutate.array u8, bin_maxlen i64, hex mutate.array i8, hex_len i64, ignore mutate.array i8, bin_len mutate.array i64, hex_end Native_Ref /* from: char ** */) i32 => native
  module sodium_increment(n mutate.array u8, nlen i64) unit => native
  module sodium_init i32 => native
  module sodium_is_zero(n mutate.array u8, nlen i64) i32 => native
  module sodium_library_minimal i32 => native
  module sodium_library_version_major i32 => native
  module sodium_library_version_minor i32 => native
  module sodium_malloc(size i64) Native_Ref /* from: void * */ => native
  module sodium_memcmp(b1_ Native_Ref /* from: void * */, b2_ Native_Ref /* from: void * */, len i64) i32 => native
  module sodium_memzero(pnt Native_Ref /* from: void * */, len i64) unit => native
  module sodium_misuse unit => native
  module sodium_mlock(addr Native_Ref /* from: void * */, len i64) i32 => native
  module sodium_mprotect_noaccess(ptr Native_Ref /* from: void * */) i32 => native
  module sodium_mprotect_readonly(ptr Native_Ref /* from: void * */) i32 => native
  module sodium_mprotect_readwrite(ptr Native_Ref /* from: void * */) i32 => native
  module sodium_munlock(addr Native_Ref /* from: void * */, len i64) i32 => native
  module sodium_pad(padded_buflen_p mutate.array i64, buf mutate.array u8, unpadded_buflen i64, blocksize i64, max_buflen i64) i32 => native
  module sodium_runtime_has_aesni i32 => native
  module sodium_runtime_has_avx i32 => native
  module sodium_runtime_has_avx2 i32 => native
  module sodium_runtime_has_avx512f i32 => native
  module sodium_runtime_has_neon i32 => native
  module sodium_runtime_has_pclmul i32 => native
  module sodium_runtime_has_rdrand i32 => native
  module sodium_runtime_has_sse2 i32 => native
  module sodium_runtime_has_sse3 i32 => native
  module sodium_runtime_has_sse41 i32 => native
  module sodium_runtime_has_ssse3 i32 => native
  module sodium_set_misuse_handler(handler Native_Ref /* from: void (*)(void) */) i32 => native
  module sodium_stackzero(len i64) unit => native
  module sodium_sub(a mutate.array u8, b mutate.array u8, len i64) unit => native
  module sodium_unpad(unpadded_buflen_p mutate.array i64, buf mutate.array u8, padded_buflen i64, blocksize i64) i32 => native
  module sodium_version_string Native_Ref /* from: char * */ => native
  module sprintf(__s mutate.array i8, __format mutate.array i8) i32 => native
  module srand48(__seedval i64) unit => native
  module srand48_r(__seedval i64, __buffer Native_Ref /* from: struct drand48_data * */) i32 => native
  module sscanf(__s mutate.array i8, __format mutate.array i8) i32 => native
  module strtod(__nptr mutate.array i8, __endptr Native_Ref /* from: char ** */) f64 => native
  module strtof(__nptr mutate.array i8, __endptr Native_Ref /* from: char ** */) f32 => native
  module strtol(__nptr mutate.array i8, __endptr Native_Ref /* from: char ** */, __base i32) i64 => native
  module strtoull(__nptr mutate.array i8, __endptr Native_Ref /* from: char ** */, __base i32) u64 => native
  module strtouq(__nptr mutate.array i8, __endptr Native_Ref /* from: char ** */, __base i32) u64 => native
  module system(__command mutate.array i8) i32 => native
  module tempnam(__dir mutate.array i8, __pfx mutate.array i8) Native_Ref /* from: char * */ => native
  module tmpfile Native_Ref /* from: FILE * */ => native
  module tmpnam(_ mutate.array i8) Native_Ref /* from: char * */ => native
  module tmpnam_r(__s mutate.array i8) Native_Ref /* from: char * */ => native
  module ungetc(__c i32, __stream Native_Ref) i32 => native
  module unsetenv(__name mutate.array i8) i32 => native
  module valloc(__size i64) Native_Ref /* from: void * */ => native
  module wcstombs(__s mutate.array i8, __pwcs Native_Ref /* from: wchar_t * */, __n i64) i64 => native
