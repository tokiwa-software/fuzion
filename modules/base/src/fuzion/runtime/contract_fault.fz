# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion standard library feature contract_fault
#
#  Author: Fridtjof Siebert (siebert@tokiwa.software)
#
# -----------------------------------------------------------------------

# contract_fault -- effect that terminates a computation due to a failed
# condition in a pre, post or check statement
#
public contract_fault (
  # the handler this effect uses to fail
  p ((String,String)) -> void
  ) : eff.fallible p
is


  # install default contract_fault handler
  type.install_default =>
    (fuzion.runtime.contract_fault kind_and_msg->
      fuzion.runtime.fault.cause kind_and_msg).default


  # create an instance of `contract_fault` with the given error handler.
  #
  public fixed redef type.new(h ((String,String)) -> void) => fuzion.runtime.contract_fault h


# contract_fault with no argument returns contract_fault.env, the currently installed
# runtime contract_fault handler.
#
public contract_fault =>
  contract_fault.install_default
  contract_fault.env
