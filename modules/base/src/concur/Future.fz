# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion standard library feature concur.Future
#
# -----------------------------------------------------------------------

# A Future is an interface for an asynchronous computation.
#
public Future(T type) ref is

  # is the computation done?
  #
  public is_done bool => abstract

  # block until the computation is done
  # the return the result
  #
  public get T => abstract


  # This takes a lambda from "result of future" to "new result" and returns a new future,
  # scheduled on the same thread pool as the first future.
  #
  public and_then(T2 type, new_task T->T2) concur.Future T2 => abstract
