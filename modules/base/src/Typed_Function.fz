# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion standard library feature Function
#
#  Author: Fridtjof Siebert (siebert@tokiwa.software)
#
# -----------------------------------------------------------------------

# Typed_Function -- generic function with type parameter `T` and argument `v` of that type
#
# R is the result type of the function, A are the argument types of the function in
# addition to `T` and `v`.
#
# This is used, e.g., as an argument to `Any.dynamic_apply`.
#
public Typed_Function(public R type,
                      public A type...) ref is


  # call this function for type T on arguments a... and v.
  #
  # NYI: CLEANUP: #5895 if this is fixed, we should change the argument order to
  # macht the order used in `container.typed_applicator`:
  #
  #     public call(T type, a A..., v T) R => abstract
  #
  public call(T type, v T, a A...) R => abstract
