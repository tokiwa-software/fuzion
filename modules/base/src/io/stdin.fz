# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion standard library feature stdin
#
#  Author: Michael Lill (michael.lill@tokiwa.software)
#
# -----------------------------------------------------------------------


# short-hand to return an io.reader with a read handler
# allowing to read from stdin.
#
# usage example:
#
#    io.stdin ! ()->
#      for l := io.stdin.read_line
#          i in 1..
#      while l??
#        say "$i: $l"
#
public stdin : has_reader is

  # infix variant instate_self
  #
  # use it like this:
  #
  #     effect_instance ! ()->code
  #
  public infix !(# result type
                 R type,

                 # the code to execute with `e` instated.
                 code () -> R
  ) R
  =>
    # NYI: Do we need some way to specify effect dependencies?
    #
    reader_mutate ! ()->
      ((buffered reader_mutate).reader stdin_read_handler 1024) ! code



# Read handler for stdin
#
stdin_read_handler : Read_Handler is

  # implementation of read for reading from stdin
  #
  public redef read(count i32) choice (array u8) io.end_of_file error =>
    arr := fuzion.sys.internal_array_init u8 count
    v := fzE_file_read fzE_file_stdin arr.data count
    if v < -1
      error "an error occurred while reading stdin"
    else if v <= 0
      io.end_of_file
    else if v < count
      array u8 v i->arr[i]
    else
      arr.as_array
