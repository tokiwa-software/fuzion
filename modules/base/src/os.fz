# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion standard library feature os
#
# -----------------------------------------------------------------------


public os is


  # create a new process
  # NYI option to pass stdin/out/err, pwd
  #
  module fzE_process_create(
    args fuzion.sys.Pointer,
    arg_len i32,
    env_vars fuzion.sys.Pointer,
    env_vars_len i32,
    res fuzion.sys.Pointer,
    args_str fuzion.sys.Pointer,
    env_str fuzion.sys.Pointer) i32 => native


  # wait for process to exit
  #
  module fzE_process_wait(p i64) i32 => native


  # NYI send_signal(p i64, signal i32) unit => intrinsic
  # NYI is_alive(p i64) unit => intrinsic
  # NYI exit_code(p i64) unit => intrinsic


  # returns -1 on error, 0 on end_of_file, number of read bytes otherwise.
  #
  module fzE_pipe_read(
    # the descriptor
    desc i64,
    # the internal array data representing the container for the bytes to be read
    file_array fuzion.sys.Pointer,
    # the length of the array that represents the file bytes
    file_array_length i32) i32 => native

  # returns -1 on error, number of written bytes otherwise.
  #
  module fzE_pipe_write(
    # the descriptor
    desc i64,
    # the internal array data representing the content bytes to write
    content fuzion.sys.Pointer,
    # the length of the internal array representing the content
    content_length i32) i32 => native


  # returns -1 on error, 0 on success
  #
  module fzE_pipe_close(
    # descriptor
    desc i64) i32 => native
