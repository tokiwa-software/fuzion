# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion feature Sequence.group_by
#
# -----------------------------------------------------------------------


# group the elements of this sequence by a key of type K
#
# f determines the key of an element
#
public Sequence.group_by(K type : property.hashable, f T -> K) lock_free.Map K (Sequence T) =>

  # NYI It should be possible to choose the map implementation that is used.
  res := (lock_free.Map K (Sequence T)).empty

  for_each x->
    key := f x
    match res[key]
      nil => res.put key [x]
      s Sequence T => res.put key s++[x]

  res
