# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion test ctrie_test
#
#  Author: Michael Lill (michael.lill@tokiwa.software)
#
# -----------------------------------------------------------------------

ctrie_test is
  ctrie := (container.ctrie i32 String).type.empty

  set_from(s Sequence i32) =>
    (container.ps_set i32).type.from_sequence s

  all := set_from 0..100
  removed := set_from 0..100:2
  readded := set_from 0..100:3

  no_items := ctrie.snapshot true

  for k in all do
    ctrie.add k "v$k"

  all_items := ctrie.snapshot true

  for k in removed do
    ctrie.remove k

  half_of_items := ctrie.snapshot true

  for k in readded do
    ctrie.add k "v$k"

  # NYI Set should have `except()` feature
  no  := removed.filter (x -> !(readded.contains x))
  yes := (set_from (all.filter (x -> !(removed.contains x)))) ∪ readded

  say (no  ∀ (k -> ctrie[k].is_nil))

  say (yes ∀ (k -> ctrie[k].get = "v$k"))

  say (ctrie.size = yes.size)

  say no_items.items.count # 0

  say all_items.items.count # 101

  say half_of_items.items.count # 50
