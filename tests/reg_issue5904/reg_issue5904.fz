# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion test reg_issue5904
#
# -----------------------------------------------------------------------

reg_issue5904 =>
  find(a array i32, v i32) option i32 =>
    for e in a
    until e=v then v
              else nil

  find2(a array i32, v i32) option i32 =>
    for
      i := 0, i+1
    while i < a.length
    until a[i]=v
      a[i]
    else
      nil

  # nested loop
  find3(a array i32, v i32) option i32 =>
    for e in a
    until e=v then
      for eb in a
      until eb=v then v
                  else nil
    else
      for ec in a
      until ec=v then v
                  else nil

  /* NYI: UNDER DEVELOPMENT: does not work yet

  fields =>

    a := [4]
    v := 4

    find4 option i32 :=
      for e in a
      until e=v then v
                else nil

    find5 option i32 :=
      for
        i := 0, i+1
      while i < a.length
      until a[i]=v
        a[i]
      else
        nil

    # nested loop
    find6 option i32 :=
      for e in a
      until e=v then
        for eb in a
        until eb=v then v
                    else nil
      else
        for ec in a
        until ec=v then v
                    else nil


    say find4
    say find5
    say find6

  */

  say (find [4] 4)
  say (find2 [4] 4)
  say (find3 [4] 4)
  # fields
