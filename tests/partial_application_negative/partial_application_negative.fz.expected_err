
--CURDIR--/partial_application_negative.fz:49:19: error 1: Could not find called feature
  _ := data.map 3.prefix*    # 4. should flag an error, do not change named prefix call to infix call
------------------^^^^^^^
Feature not found: 'prefix *' (no arguments)
Target feature: 'i32'
In call: '3.prefix*'


--CURDIR--/partial_application_negative.fz:50:19: error 2: Could not find called feature
  _ := data.map 3.postfix*   # 5. should flag an error, do not change named postfix call to infix call
------------------^^^^^^^^
Feature not found: 'postfix *' (no arguments)
Target feature: 'i32'
In call: '3.postfix*'


--CURDIR--/partial_application_negative.fz:60:13: error 3: Ambiguity between direct and partially applied call target
  _ := test ambig             # 6. should flag an error: Ambiguous call to `ambig (0 arguments)` or `ambig (1 arguments)`
------------^^^^^
This call can be resolved in two ways, either as a direct call to 'partial_application_negative.ambig' declared at --CURDIR--/partial_application_negative.fz:53:3:
  ambig        Unary String i32 => x->"#$x#"
--^^^^^
or by partially applying arguments to a call to 'partial_application_negative.ambig' declared at --CURDIR--/partial_application_negative.fz:54:3:
  ambig(x i32) Unary String i32 => {say "V1"; y->"#$y x:$x#"}
--^^^^^.
To solve this, rename one of the ambiguous features.


--CURDIR--/partial_application_negative.fz:61:14: error 4: Ambiguity between direct and partially applied call target
  _ := test (ambig 42   )     # 7. should flag an error: Ambiguous call to `ambig (1 arguments)` or `ambig (2 arguments)`
-------------^^^^^
This call can be resolved in two ways, either as a direct call to 'partial_application_negative.ambig' declared at --CURDIR--/partial_application_negative.fz:54:3:
  ambig(x i32) Unary String i32 => {say "V1"; y->"#$y x:$x#"}
--^^^^^
or by partially applying arguments to a call to 'partial_application_negative.ambig' declared at --CURDIR--/partial_application_negative.fz:55:3:
  ambig(x,y i32)     String     => "$x $y"
--^^^^^.
To solve this, rename one of the ambiguous features.


--CURDIR--/partial_application_negative.fz:62:14: error 5: Ambiguity between direct and partially applied call target
  _ := test (ambig 47 11)     # 8. should flag an error: Ambiguous call to `ambig (2 arguments)` or `ambig (3 arguments)`
-------------^^^^^
This call can be resolved in two ways, either as a direct call to 'partial_application_negative.ambig' declared at --CURDIR--/partial_application_negative.fz:55:3:
  ambig(x,y i32)     String     => "$x $y"
--^^^^^
or by partially applying arguments to a call to 'partial_application_negative.ambig' declared at --CURDIR--/partial_application_negative.fz:56:3:
  ambig(x,y,z i32)   String     => "$x $y $z"
--^^^^^.
To solve this, rename one of the ambiguous features.


--CURDIR--/partial_application_negative.fz:42:47: error 6: Could not find called feature
  test "data.map 3.prefix*   " (data.map    3.prefix*) "[3,6,9,12,15,18,21,24,27,30]"    # 1. should flag an error, do not change named prefix call to infix call
----------------------------------------------^^^^^^^
Feature not found: 'prefix *' (one argument)
Target feature: 'i32'
In call: '3.prefix*'


--CURDIR--/partial_application_negative.fz:43:47: error 7: Incompatible types when passing argument in a call
  test "data.map 3.prefix-   " (data.map    3.prefix-) "[3,6,9,12,15,18,21,24,27,30]"    # 2. should flag an error, do not change named prefix call to infix call
----------------------------------------------^^^^^^^
Actual type for argument #1 'f' does not match expected type.
In call to          : 'Sequence.map'
expected formal type: 'Unary Sequence.map.B Sequence.T'
actual type found   : 'i32'
assignable to       : 'i32'
for value assigned  : '3.prefix-'
To solve this, you could change the type of the target 'f' to 'i32' or convert the type of the assigned value to 'Unary Sequence.map.B Sequence.T'.


--CURDIR--/partial_application_negative.fz:44:47: error 8: Could not find called feature
  test "data.map 3.postfix*  " (data.map    3.postfix*) "[3,6,9,12,15,18,21,24,27,30]"  # 3. should flag an error, do not change named prefix call to infix call
----------------------------------------------^^^^^^^^
Feature not found: 'postfix *' (one argument)
Target feature: 'i32'
In call: '3.postfix*'
This call was created automatically by partial application. To solve this, you might want to use an explicit lambda expression of the form '( a0 -> ..code using a0..)'.


--CURDIR--/partial_application_negative.fz:77:38: error 9: Different count of arguments needed when calling feature
  test "data.map  .as_string " (data.map  .as_string ) "[1,2,3,4,5,6,7,8,9,10]"  # 11. should flag an error: dot-call partials require parentheses
-------------------------------------^^^
Feature not found: 'map' (no arguments)
Target feature: 'interval'
In call: 'map'
To solve this, you might change the actual number of arguments to match the feature 'map'  (one type argument, one value argument) at {base.fum}/Sequence.fz:393:10:
  public map(B type, f T->B) Sequence B =>
---------^^^
To call 'map' you must provide 2 arguments. The type arguments may be omitted or `_` may be used in place of a type argument.



--CURDIR--/partial_application_negative.fz:72:20: error 10: Ambiguity between direct and partially applied call target
  _ i32->String := ambig2 4711     # 9. should flag an error: ambiguous call to implicit ambig2.call (1 argument) or partially applied ambig2 (2 arguments)
-------------------^^^^^^
This call can be resolved in two ways, either as a direct call to 'partial_application_negative.ambig2' declared at --CURDIR--/partial_application_negative.fz:66:3:
  ambig2 Unary String i32 => x->"#$x#"
--^^^^^^
or by partially applying arguments to a call to 'partial_application_negative.ambig2' declared at --CURDIR--/partial_application_negative.fz:67:3:
  ambig2(x, y i32) String => "$x $y"
--^^^^^^.
To solve this, rename one of the ambiguous features.


--CURDIR--/partial_application_negative.fz:74:26: error 11: Ambiguity between direct and partially applied call target
  _ := test2            (ambig2 4711)    # 10. should flag an error: ambiguous call to implicit `ambig2.call (1 argument)` or partially applied `ambig2 (2 arguments)`
-------------------------^^^^^^
This call can be resolved in two ways, either as a direct call to 'partial_application_negative.ambig2' declared at --CURDIR--/partial_application_negative.fz:66:3:
  ambig2 Unary String i32 => x->"#$x#"
--^^^^^^
or by partially applying arguments to a call to 'partial_application_negative.ambig2' declared at --CURDIR--/partial_application_negative.fz:67:3:
  ambig2(x, y i32) String => "$x $y"
--^^^^^^.
To solve this, rename one of the ambiguous features.

11 errors.
