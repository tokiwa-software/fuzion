# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion test inherit_postcondition/modules/mod.fz
#
#  Author: Fridtjof Siebert (siebert@tokiwa.software)
#
# -----------------------------------------------------------------------

# this provides features with complex postconditions to check
# that inheritance of post conditions from a module works
#
public mod is

  ok(s String) => {say s; true}

  public post_accessing_result is
    public n i32 := 333
    public m i32 => 333
    public r i32 => 666
    public f i32
      post
        m * 2 = r
        ok "original $result $m $r"
        { io.Out.env.println "hi"; true }
        { v := post_accessing_result.this; true }
        { [1,result,2].fold i32.sum > 3 }
        { fn i32->i32 := *result; fn 3 > 120 }
        result > 23
    =>
      42

    public g i32
    => 420

  public post_accessing_result_child : post_accessing_result is
    public redef f i32
      post then
        ok "redef $result"
        { io.Out.env.println "hi"; true }
        result % 5 = 1
    =>
      4711

    public redef g i32
      post then
        ok "redef g $result"
        { io.Out.env.println "ho"; true }
        result % 5 = 4
    => 69

  public post_accessing_result_child2 : post_accessing_result_child is
    public redef f i32
      post then
        ok "redef2 $result"
        { io.Out.env.println "hi"; true }
        true
    =>
      4716

    public redef g i32
      post then
        ok "redef g $result"
        { io.Out.env.println "he"; true }
        result % 10 = 9
    => 42069

  public post_accessing_result_child3 : post_accessing_result is
    public redef f i32
      post then
    =>
      32168

  public post_accessing_result_child4 : post_accessing_result is
    public redef f i32
    =>
      112
