# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion test test_effect_neg.fz
#
#  Author: Fridtjof Siebert (siebert@tokiwa.software)
#
# -----------------------------------------------------------------------

# This is a negative test complementary to tests/effect_installed/test_effect.fz
# that includes all the failing cases.
#
test_effect_neg is

  maybe => envir.args.count > 3

  a : mutate is
  b : mutate is
  c : mutate is
  d : mutate is
  e : mutate is
  f : mutate is
  g : mutate is
  use_a => _ := a.env
  use_b => _ := b.env
  use_c => _ := c.env
  use_e => _ := e.env
  use_f => _ := f.env
  use_g => _ := g.env
  use_a_err1 => _ := a.env       # 1. should flag an error: effect not installed
  use_b_err2 => _ := b.env       # 2. should flag an error: effect not installed
  use_c_err3 => _ := c.env       # 3. should flag an error: effect not installed
  use_d_err4 => _ := d.env       # 4. should flag an error: effect not installed
  FA : Function unit is public redef call unit => use_a
  FB : Function unit is public redef call unit => use_b
  FC : Function unit is public redef call unit => use_c
  fa Function unit := FA
  fb Function unit := FB
  fc Function unit := FC
  a.instate_self unit fa
  b.instate_self unit fb
  c.instate_self unit fc
  a ! ()->use_a
  b ! ()->use_b
  c ! ()->use_c
  e ! ()->use_e
  f ! ()->use_f
  g ! ()->use_g
  a ! ()->
    b ! ()->
      c ! ()->
        use_a
        use_b
        use_c
  a ! ()->use_b_err2
  b ! ()->use_c_err3
  c ! ()->use_a_err1
  a ! ()->
    b ! ()->
      c ! ()->
        use_a
        use_b
        use_c
        use_d_err4

  # the following ones are a little tricky since use_e/f/g are also used in
  # positive cases above, so the call traces might get mixed up.
  #
  if maybe
    e ! ()->
      f ! ()->
        use_g      # 5. should flag an error: effect not installed
  if maybe
    e ! ()->
      g ! ()->
        use_f      # 6. should flag an error: effect not installed
  if maybe
    f ! ()->
      g ! ()->
        use_e      # 7. should flag an error: effect not installed
