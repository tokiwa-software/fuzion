
--CURDIR--/test_effect_neg.fz:37:17: error 1: Failed to verify that effect 'test_effect_neg.a' is installed in current environment.
  use_a => _ := a.env
----------------^^^^^
Callchain that lead to this point:

effect environment 'test_effect_neg.b, test_effect_neg.c' for call to 'test_effect_neg.type.a.type.from_env' at --CURDIR--/test_effect_neg.fz:37:17:
  use_a => _ := a.env
----------------^^^^^
effect environment 'test_effect_neg.b, test_effect_neg.c' for call to 'test_effect_neg.use_a' at --CURDIR--/test_effect_neg.fz:87:9:
        use_a      # 7. should flag an error: effect not installed
--------^^^^^
effect environment 'test_effect_neg.b, test_effect_neg.c' for call to 'test_effect_neg.λ.call.λ.call' at {base.fum}/effect.fz:417:18:
      set res := code()
-----------------^^^^
effect environment 'test_effect_neg.b, test_effect_neg.c' for call to '(instate_helper unit test_effect_neg.c).call_code.call'
install effect 'test_effect_neg.c', old environment was 'test_effect_neg.b' for call to 'test_effect_neg.type.c.type.instate0#5 (instate_helper unit test_effect_neg.c).call_code (instate_helper unit test_effect_neg.c).call_def' at {base.fum}/effect.fz:169:5:
    instate0 e x.call_code x.call_def
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.b' for call to 'test_effect_neg.type.c.type.instate#4 unit' at {base.fum}/effect.fz:190:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.b' for call to 'test_effect_neg.type.c.type.instate#3 unit' at {base.fum}/effect.fz:211:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.b' for call to 'test_effect_neg.c.instate_self#2 unit' at {base.fum}/effect.fz:228:5:
    instate_self code
----^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.b' for call to 'test_effect_neg.c.infix !#2 unit' at --CURDIR--/test_effect_neg.fz:86:7:
      c ! ()->
------^^^^^^^^
        use_a      # 7. should flag an error: effect not installed
--------^^^^^
effect environment 'test_effect_neg.b' for call to 'test_effect_neg.λ.call' at {base.fum}/effect.fz:417:18:
      set res := code()
-----------------^^^^
effect environment 'test_effect_neg.b' for call to '(instate_helper unit test_effect_neg.b).call_code.call'
install effect 'test_effect_neg.b', old environment was '--empty--' for call to 'test_effect_neg.type.b.type.instate0#5 (instate_helper unit test_effect_neg.b).call_code (instate_helper unit test_effect_neg.b).call_def' at {base.fum}/effect.fz:169:5:
    instate0 e x.call_code x.call_def
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.b.type.instate#4 unit' at {base.fum}/effect.fz:190:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.b.type.instate#3 unit' at {base.fum}/effect.fz:211:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.b.instate_self#2 unit' at --CURDIR--/test_effect_neg.fz:51:3:
  b.instate_self unit fb
--^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg'
effect environment '--empty--' at program entry


--CURDIR--/test_effect_neg.fz:38:17: error 2: Failed to verify that effect 'test_effect_neg.b' is installed in current environment.
  use_b => _ := b.env
----------------^^^^^
Callchain that lead to this point:

effect environment 'test_effect_neg.a, test_effect_neg.c' for call to 'test_effect_neg.type.b.type.from_env' at --CURDIR--/test_effect_neg.fz:38:17:
  use_b => _ := b.env
----------------^^^^^
effect environment 'test_effect_neg.a, test_effect_neg.c' for call to 'test_effect_neg.use_b' at --CURDIR--/test_effect_neg.fz:83:9:
        use_b      # 6. should flag an error: effect not installed
--------^^^^^
effect environment 'test_effect_neg.a, test_effect_neg.c' for call to 'test_effect_neg.λ.call.λ.call' at {base.fum}/effect.fz:417:18:
      set res := code()
-----------------^^^^
effect environment 'test_effect_neg.a, test_effect_neg.c' for call to '(instate_helper unit test_effect_neg.c).call_code.call'
install effect 'test_effect_neg.c', old environment was 'test_effect_neg.a' for call to 'test_effect_neg.type.c.type.instate0#5 (instate_helper unit test_effect_neg.c).call_code (instate_helper unit test_effect_neg.c).call_def' at {base.fum}/effect.fz:169:5:
    instate0 e x.call_code x.call_def
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a' for call to 'test_effect_neg.type.c.type.instate#4 unit' at {base.fum}/effect.fz:190:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a' for call to 'test_effect_neg.type.c.type.instate#3 unit' at {base.fum}/effect.fz:211:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a' for call to 'test_effect_neg.c.instate_self#2 unit' at {base.fum}/effect.fz:228:5:
    instate_self code
----^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a' for call to 'test_effect_neg.c.infix !#2 unit' at --CURDIR--/test_effect_neg.fz:82:7:
      c ! ()->
------^^^^^^^^
        use_b      # 6. should flag an error: effect not installed
--------^^^^^
effect environment 'test_effect_neg.a' for call to 'test_effect_neg.λ.call' at {base.fum}/effect.fz:417:18:
      set res := code()
-----------------^^^^
effect environment 'test_effect_neg.a' for call to '(instate_helper unit test_effect_neg.a).call_code.call'
install effect 'test_effect_neg.a', old environment was '--empty--' for call to 'test_effect_neg.type.a.type.instate0#5 (instate_helper unit test_effect_neg.a).call_code (instate_helper unit test_effect_neg.a).call_def' at {base.fum}/effect.fz:169:5:
    instate0 e x.call_code x.call_def
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.a.type.instate#4 unit' at {base.fum}/effect.fz:190:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.a.type.instate#3 unit' at {base.fum}/effect.fz:211:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.a.instate_self#2 unit' at --CURDIR--/test_effect_neg.fz:50:3:
  a.instate_self unit fa
--^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg'
effect environment '--empty--' at program entry


--CURDIR--/test_effect_neg.fz:39:17: error 3: Failed to verify that effect 'test_effect_neg.c' is installed in current environment.
  use_c => _ := c.env
----------------^^^^^
Callchain that lead to this point:

effect environment 'test_effect_neg.a, test_effect_neg.b' for call to 'test_effect_neg.type.c.type.from_env' at --CURDIR--/test_effect_neg.fz:39:17:
  use_c => _ := c.env
----------------^^^^^
effect environment 'test_effect_neg.a, test_effect_neg.b' for call to 'test_effect_neg.use_c' at --CURDIR--/test_effect_neg.fz:79:9:
        use_c      # 5. should flag an error: effect not installed
--------^^^^^
effect environment 'test_effect_neg.a, test_effect_neg.b' for call to 'test_effect_neg.λ.call.λ.call' at {base.fum}/effect.fz:417:18:
      set res := code()
-----------------^^^^
effect environment 'test_effect_neg.a, test_effect_neg.b' for call to '(instate_helper unit test_effect_neg.b).call_code.call'
install effect 'test_effect_neg.b', old environment was 'test_effect_neg.a' for call to 'test_effect_neg.type.b.type.instate0#5 (instate_helper unit test_effect_neg.b).call_code (instate_helper unit test_effect_neg.b).call_def' at {base.fum}/effect.fz:169:5:
    instate0 e x.call_code x.call_def
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a' for call to 'test_effect_neg.type.b.type.instate#4 unit' at {base.fum}/effect.fz:190:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a' for call to 'test_effect_neg.type.b.type.instate#3 unit' at {base.fum}/effect.fz:211:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a' for call to 'test_effect_neg.b.instate_self#2 unit' at {base.fum}/effect.fz:228:5:
    instate_self code
----^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a' for call to 'test_effect_neg.b.infix !#2 unit' at --CURDIR--/test_effect_neg.fz:57:5:
    b ! ()->
----^^^^^^^^
      c ! ()->
------^^^^^^^^
        use_a
--------^^^^^
        use_b
--------^^^^^
        use_c
--------^^^^^
effect environment 'test_effect_neg.a' for call to 'test_effect_neg.λ.call' at {base.fum}/effect.fz:417:18:
      set res := code()
-----------------^^^^
effect environment 'test_effect_neg.a' for call to '(instate_helper unit test_effect_neg.a).call_code.call'
install effect 'test_effect_neg.a', old environment was '--empty--' for call to 'test_effect_neg.type.a.type.instate0#5 (instate_helper unit test_effect_neg.a).call_code (instate_helper unit test_effect_neg.a).call_def' at {base.fum}/effect.fz:169:5:
    instate0 e x.call_code x.call_def
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.a.type.instate#4 unit' at {base.fum}/effect.fz:190:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.a.type.instate#3 unit' at {base.fum}/effect.fz:211:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.a.instate_self#2 unit' at --CURDIR--/test_effect_neg.fz:50:3:
  a.instate_self unit fa
--^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg'
effect environment '--empty--' at program entry


--CURDIR--/test_effect_neg.fz:41:22: error 4: Failed to verify that effect 'test_effect_neg.b' is installed in current environment.
  use_b_err2 => _ := b.env       # 2. should flag an error: effect not installed
---------------------^^^^^
Callchain that lead to this point:

effect environment 'test_effect_neg.a' for call to 'test_effect_neg.type.b.type.from_env' at --CURDIR--/test_effect_neg.fz:41:22:
  use_b_err2 => _ := b.env       # 2. should flag an error: effect not installed
---------------------^^^^^
effect environment 'test_effect_neg.a' for call to 'test_effect_neg.use_b_err2' at --CURDIR--/test_effect_neg.fz:62:11:
  a ! ()->use_b_err2
----------^^^^^^^^^^
effect environment 'test_effect_neg.a' for call to 'test_effect_neg.λ.call' at {base.fum}/effect.fz:417:18:
      set res := code()
-----------------^^^^
effect environment 'test_effect_neg.a' for call to '(instate_helper unit test_effect_neg.a).call_code.call'
install effect 'test_effect_neg.a', old environment was '--empty--' for call to 'test_effect_neg.type.a.type.instate0#5 (instate_helper unit test_effect_neg.a).call_code (instate_helper unit test_effect_neg.a).call_def' at {base.fum}/effect.fz:169:5:
    instate0 e x.call_code x.call_def
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.a.type.instate#4 unit' at {base.fum}/effect.fz:190:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.a.type.instate#3 unit' at {base.fum}/effect.fz:211:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.a.instate_self#2 unit' at --CURDIR--/test_effect_neg.fz:50:3:
  a.instate_self unit fa
--^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg'
effect environment '--empty--' at program entry


--CURDIR--/test_effect_neg.fz:42:22: error 5: Failed to verify that effect 'test_effect_neg.c' is installed in current environment.
  use_c_err3 => _ := c.env       # 3. should flag an error: effect not installed
---------------------^^^^^
Callchain that lead to this point:

effect environment 'test_effect_neg.b' for call to 'test_effect_neg.type.c.type.from_env' at --CURDIR--/test_effect_neg.fz:42:22:
  use_c_err3 => _ := c.env       # 3. should flag an error: effect not installed
---------------------^^^^^
effect environment 'test_effect_neg.b' for call to 'test_effect_neg.use_c_err3' at --CURDIR--/test_effect_neg.fz:63:11:
  b ! ()->use_c_err3
----------^^^^^^^^^^
effect environment 'test_effect_neg.b' for call to 'test_effect_neg.λ.call' at {base.fum}/effect.fz:417:18:
      set res := code()
-----------------^^^^
effect environment 'test_effect_neg.b' for call to '(instate_helper unit test_effect_neg.b).call_code.call'
install effect 'test_effect_neg.b', old environment was '--empty--' for call to 'test_effect_neg.type.b.type.instate0#5 (instate_helper unit test_effect_neg.b).call_code (instate_helper unit test_effect_neg.b).call_def' at {base.fum}/effect.fz:169:5:
    instate0 e x.call_code x.call_def
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.b.type.instate#4 unit' at {base.fum}/effect.fz:190:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.b.type.instate#3 unit' at {base.fum}/effect.fz:211:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.b.instate_self#2 unit' at --CURDIR--/test_effect_neg.fz:51:3:
  b.instate_self unit fb
--^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg'
effect environment '--empty--' at program entry


--CURDIR--/test_effect_neg.fz:40:22: error 6: Failed to verify that effect 'test_effect_neg.a' is installed in current environment.
  use_a_err1 => _ := a.env       # 1. should flag an error: effect not installed
---------------------^^^^^
Callchain that lead to this point:

effect environment 'test_effect_neg.c' for call to 'test_effect_neg.type.a.type.from_env' at --CURDIR--/test_effect_neg.fz:40:22:
  use_a_err1 => _ := a.env       # 1. should flag an error: effect not installed
---------------------^^^^^
effect environment 'test_effect_neg.c' for call to 'test_effect_neg.use_a_err1' at --CURDIR--/test_effect_neg.fz:64:11:
  c ! ()->use_a_err1
----------^^^^^^^^^^
effect environment 'test_effect_neg.c' for call to 'test_effect_neg.λ.call' at {base.fum}/effect.fz:417:18:
      set res := code()
-----------------^^^^
effect environment 'test_effect_neg.c' for call to '(instate_helper unit test_effect_neg.c).call_code.call'
install effect 'test_effect_neg.c', old environment was '--empty--' for call to 'test_effect_neg.type.c.type.instate0#5 (instate_helper unit test_effect_neg.c).call_code (instate_helper unit test_effect_neg.c).call_def' at {base.fum}/effect.fz:169:5:
    instate0 e x.call_code x.call_def
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.c.type.instate#4 unit' at {base.fum}/effect.fz:190:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.c.type.instate#3 unit' at {base.fum}/effect.fz:211:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.c.instate_self#2 unit' at --CURDIR--/test_effect_neg.fz:52:3:
  c.instate_self unit fc
--^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg'
effect environment '--empty--' at program entry


--CURDIR--/test_effect_neg.fz:43:22: error 7: Failed to verify that effect 'test_effect_neg.d' is installed in current environment.
  use_d_err4 => _ := d.env       # 4. should flag an error: effect not installed
---------------------^^^^^
Callchain that lead to this point:

effect environment 'test_effect_neg.a, test_effect_neg.b, test_effect_neg.c' for call to 'test_effect_neg.type.d.type.from_env' at --CURDIR--/test_effect_neg.fz:43:22:
  use_d_err4 => _ := d.env       # 4. should flag an error: effect not installed
---------------------^^^^^
effect environment 'test_effect_neg.a, test_effect_neg.b, test_effect_neg.c' for call to 'test_effect_neg.use_d_err4' at --CURDIR--/test_effect_neg.fz:71:9:
        use_d_err4
--------^^^^^^^^^^
effect environment 'test_effect_neg.a, test_effect_neg.b, test_effect_neg.c' for call to 'test_effect_neg.λ.call.λ.call.λ.call' at {base.fum}/effect.fz:417:18:
      set res := code()
-----------------^^^^
effect environment 'test_effect_neg.a, test_effect_neg.b, test_effect_neg.c' for call to '(instate_helper unit test_effect_neg.c).call_code.call'
install effect 'test_effect_neg.c', old environment was 'test_effect_neg.a, test_effect_neg.b' for call to 'test_effect_neg.type.c.type.instate0#5 (instate_helper unit test_effect_neg.c).call_code (instate_helper unit test_effect_neg.c).call_def' at {base.fum}/effect.fz:169:5:
    instate0 e x.call_code x.call_def
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a, test_effect_neg.b' for call to 'test_effect_neg.type.c.type.instate#4 unit' at {base.fum}/effect.fz:190:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a, test_effect_neg.b' for call to 'test_effect_neg.type.c.type.instate#3 unit' at {base.fum}/effect.fz:211:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a, test_effect_neg.b' for call to 'test_effect_neg.c.instate_self#2 unit' at {base.fum}/effect.fz:228:5:
    instate_self code
----^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a, test_effect_neg.b' for call to 'test_effect_neg.c.infix !#2 unit' at --CURDIR--/test_effect_neg.fz:58:7:
      c ! ()->
------^^^^^^^^
        use_a
--------^^^^^
        use_b
--------^^^^^
        use_c
--------^^^^^
effect environment 'test_effect_neg.a, test_effect_neg.b' for call to 'test_effect_neg.λ.call.λ.call' at {base.fum}/effect.fz:417:18:
      set res := code()
-----------------^^^^
effect environment 'test_effect_neg.a, test_effect_neg.b' for call to '(instate_helper unit test_effect_neg.b).call_code.call'
install effect 'test_effect_neg.b', old environment was 'test_effect_neg.a' for call to 'test_effect_neg.type.b.type.instate0#5 (instate_helper unit test_effect_neg.b).call_code (instate_helper unit test_effect_neg.b).call_def' at {base.fum}/effect.fz:169:5:
    instate0 e x.call_code x.call_def
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a' for call to 'test_effect_neg.type.b.type.instate#4 unit' at {base.fum}/effect.fz:190:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a' for call to 'test_effect_neg.type.b.type.instate#3 unit' at {base.fum}/effect.fz:211:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a' for call to 'test_effect_neg.b.instate_self#2 unit' at {base.fum}/effect.fz:228:5:
    instate_self code
----^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a' for call to 'test_effect_neg.b.infix !#2 unit' at --CURDIR--/test_effect_neg.fz:57:5:
    b ! ()->
----^^^^^^^^
      c ! ()->
------^^^^^^^^
        use_a
--------^^^^^
        use_b
--------^^^^^
        use_c
--------^^^^^
effect environment 'test_effect_neg.a' for call to 'test_effect_neg.λ.call' at {base.fum}/effect.fz:417:18:
      set res := code()
-----------------^^^^
effect environment 'test_effect_neg.a' for call to '(instate_helper unit test_effect_neg.a).call_code.call'
install effect 'test_effect_neg.a', old environment was '--empty--' for call to 'test_effect_neg.type.a.type.instate0#5 (instate_helper unit test_effect_neg.a).call_code (instate_helper unit test_effect_neg.a).call_def' at {base.fum}/effect.fz:169:5:
    instate0 e x.call_code x.call_def
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.a.type.instate#4 unit' at {base.fum}/effect.fz:190:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.a.type.instate#3 unit' at {base.fum}/effect.fz:211:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.a.instate_self#2 unit' at --CURDIR--/test_effect_neg.fz:50:3:
  a.instate_self unit fa
--^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg'
effect environment '--empty--' at program entry

7 errors.
