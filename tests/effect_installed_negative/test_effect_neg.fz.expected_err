
--CURDIR--/test_effect_neg.fz:43:17: error 1: Failed to verify that effect 'test_effect_neg.e' is installed in current environment.
  use_e => _ := e.env
----------------^^^^^
Callchain that lead to this point:

effect environment '--empty--' for call to 'test_effect_neg.type.e.type.from_env' at --CURDIR--/test_effect_neg.fz:43:17:
  use_e => _ := e.env
----------------^^^^^
effect environment '--empty--' for call to 'test_effect_neg.use_e' at --CURDIR--/test_effect_neg.fz:96:9:
        use_e      # 7. should flag an error: effect not installed
--------^^^^^
effect environment '--empty--' for call to 'test_effect_neg.λ.call.λ.call' at {base.fum}/effect.fz:416:18:
      set res := code()
-----------------^^^^
effect environment 'test_effect_neg.f, test_effect_neg.g' for call to '(instate_helper unit test_effect_neg.g).call_code.call'
install effect 'test_effect_neg.g', old environment was 'test_effect_neg.f' for call to 'test_effect_neg.type.g.type.instate0#5 (instate_helper unit test_effect_neg.g).call_code (instate_helper unit test_effect_neg.g).call_def' at {base.fum}/effect.fz:411:3:
  ET.instate0 e call_code call_def
--^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.f' for call to 'instate_helper unit test_effect_neg.g' at {base.fum}/effect.fz:166:10:
    x := instate_helper R effect.this e code def
---------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.f' for call to 'test_effect_neg.type.g.type.instate#4 unit' at {base.fum}/effect.fz:187:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.f' for call to 'test_effect_neg.type.g.type.instate#3 unit' at {base.fum}/effect.fz:208:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.f' for call to 'test_effect_neg.g.instate_self#2 unit' at {base.fum}/effect.fz:225:5:
    instate_self code
----^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.f' for call to 'test_effect_neg.g.infix !#2 unit' at --CURDIR--/test_effect_neg.fz:95:7:
      g ! ()->
------^^^^^^^^
        use_e      # 7. should flag an error: effect not installed
--------^^^^^
effect environment 'test_effect_neg.f' for call to 'test_effect_neg.λ.call' at {base.fum}/effect.fz:416:18:
      set res := code()
-----------------^^^^
effect environment 'test_effect_neg.f' for call to '(instate_helper unit test_effect_neg.f).call_code.call'
install effect 'test_effect_neg.f', old environment was '--empty--' for call to 'test_effect_neg.type.f.type.instate0#5 (instate_helper unit test_effect_neg.f).call_code (instate_helper unit test_effect_neg.f).call_def' at {base.fum}/effect.fz:411:3:
  ET.instate0 e call_code call_def
--^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'instate_helper unit test_effect_neg.f' at {base.fum}/effect.fz:166:10:
    x := instate_helper R effect.this e code def
---------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.f.type.instate#4 unit' at {base.fum}/effect.fz:187:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.f.type.instate#3 unit' at {base.fum}/effect.fz:208:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.f.instate_self#2 unit' at {base.fum}/effect.fz:225:5:
    instate_self code
----^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.f.infix !#2 unit' at --CURDIR--/test_effect_neg.fz:63:3:
  f ! ()->use_f
--^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg'
effect environment '--empty--' at program entry

To fix this, you should make sure that an effect for type 'test_effect_neg.e' is instated along all call paths to this effect use.

Alternatively, you might want to try setting env variable 'dev_flang_fuir_analysis_dfa_TRACE_ALL_EFFECT_ENVS=true'.  This will increase the analysis accuracy for effects, but may take a long time.


--CURDIR--/test_effect_neg.fz:44:17: error 2: Failed to verify that effect 'test_effect_neg.f' is installed in current environment.
  use_f => _ := f.env
----------------^^^^^
Callchain that lead to this point:

effect environment '--empty--' for call to 'test_effect_neg.type.f.type.from_env' at --CURDIR--/test_effect_neg.fz:44:17:
  use_f => _ := f.env
----------------^^^^^
effect environment '--empty--' for call to 'test_effect_neg.use_f' at --CURDIR--/test_effect_neg.fz:92:9:
        use_f      # 6. should flag an error: effect not installed
--------^^^^^
effect environment '--empty--' for call to 'test_effect_neg.λ.call.λ.call' at {base.fum}/effect.fz:416:18:
      set res := code()
-----------------^^^^
effect environment 'test_effect_neg.e, test_effect_neg.g' for call to '(instate_helper unit test_effect_neg.g).call_code.call'
install effect 'test_effect_neg.g', old environment was 'test_effect_neg.e' for call to 'test_effect_neg.type.g.type.instate0#5 (instate_helper unit test_effect_neg.g).call_code (instate_helper unit test_effect_neg.g).call_def' at {base.fum}/effect.fz:411:3:
  ET.instate0 e call_code call_def
--^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.e' for call to 'instate_helper unit test_effect_neg.g' at {base.fum}/effect.fz:166:10:
    x := instate_helper R effect.this e code def
---------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.e' for call to 'test_effect_neg.type.g.type.instate#4 unit' at {base.fum}/effect.fz:187:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.e' for call to 'test_effect_neg.type.g.type.instate#3 unit' at {base.fum}/effect.fz:208:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.e' for call to 'test_effect_neg.g.instate_self#2 unit' at {base.fum}/effect.fz:225:5:
    instate_self code
----^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.e' for call to 'test_effect_neg.g.infix !#2 unit' at --CURDIR--/test_effect_neg.fz:91:7:
      g ! ()->
------^^^^^^^^
        use_f      # 6. should flag an error: effect not installed
--------^^^^^
effect environment 'test_effect_neg.e' for call to 'test_effect_neg.λ.call' at {base.fum}/effect.fz:416:18:
      set res := code()
-----------------^^^^
effect environment 'test_effect_neg.e' for call to '(instate_helper unit test_effect_neg.e).call_code.call'
install effect 'test_effect_neg.e', old environment was '--empty--' for call to 'test_effect_neg.type.e.type.instate0#5 (instate_helper unit test_effect_neg.e).call_code (instate_helper unit test_effect_neg.e).call_def' at {base.fum}/effect.fz:411:3:
  ET.instate0 e call_code call_def
--^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'instate_helper unit test_effect_neg.e' at {base.fum}/effect.fz:166:10:
    x := instate_helper R effect.this e code def
---------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.e.type.instate#4 unit' at {base.fum}/effect.fz:187:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.e.type.instate#3 unit' at {base.fum}/effect.fz:208:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.e.instate_self#2 unit' at {base.fum}/effect.fz:225:5:
    instate_self code
----^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.e.infix !#2 unit' at --CURDIR--/test_effect_neg.fz:62:3:
  e ! ()->use_e
--^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg'
effect environment '--empty--' at program entry

To fix this, you should make sure that an effect for type 'test_effect_neg.f' is instated along all call paths to this effect use.

Alternatively, you might want to try setting env variable 'dev_flang_fuir_analysis_dfa_TRACE_ALL_EFFECT_ENVS=true'.  This will increase the analysis accuracy for effects, but may take a long time.


--CURDIR--/test_effect_neg.fz:45:17: error 3: Failed to verify that effect 'test_effect_neg.g' is installed in current environment.
  use_g => _ := g.env
----------------^^^^^
Callchain that lead to this point:

effect environment '--empty--' for call to 'test_effect_neg.type.g.type.from_env' at --CURDIR--/test_effect_neg.fz:45:17:
  use_g => _ := g.env
----------------^^^^^
effect environment '--empty--' for call to 'test_effect_neg.use_g' at --CURDIR--/test_effect_neg.fz:88:9:
        use_g      # 5. should flag an error: effect not installed
--------^^^^^
effect environment '--empty--' for call to 'test_effect_neg.λ.call.λ.call' at {base.fum}/effect.fz:416:18:
      set res := code()
-----------------^^^^
effect environment 'test_effect_neg.e, test_effect_neg.f' for call to '(instate_helper unit test_effect_neg.f).call_code.call'
install effect 'test_effect_neg.f', old environment was 'test_effect_neg.e' for call to 'test_effect_neg.type.f.type.instate0#5 (instate_helper unit test_effect_neg.f).call_code (instate_helper unit test_effect_neg.f).call_def' at {base.fum}/effect.fz:411:3:
  ET.instate0 e call_code call_def
--^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.e' for call to 'instate_helper unit test_effect_neg.f' at {base.fum}/effect.fz:166:10:
    x := instate_helper R effect.this e code def
---------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.e' for call to 'test_effect_neg.type.f.type.instate#4 unit' at {base.fum}/effect.fz:187:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.e' for call to 'test_effect_neg.type.f.type.instate#3 unit' at {base.fum}/effect.fz:208:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.e' for call to 'test_effect_neg.f.instate_self#2 unit' at {base.fum}/effect.fz:225:5:
    instate_self code
----^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.e' for call to 'test_effect_neg.f.infix !#2 unit' at --CURDIR--/test_effect_neg.fz:87:7:
      f ! ()->
------^^^^^^^^
        use_g      # 5. should flag an error: effect not installed
--------^^^^^
effect environment 'test_effect_neg.e' for call to 'test_effect_neg.λ.call' at {base.fum}/effect.fz:416:18:
      set res := code()
-----------------^^^^
effect environment 'test_effect_neg.e' for call to '(instate_helper unit test_effect_neg.e).call_code.call'
install effect 'test_effect_neg.e', old environment was '--empty--' for call to 'test_effect_neg.type.e.type.instate0#5 (instate_helper unit test_effect_neg.e).call_code (instate_helper unit test_effect_neg.e).call_def' at {base.fum}/effect.fz:411:3:
  ET.instate0 e call_code call_def
--^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'instate_helper unit test_effect_neg.e' at {base.fum}/effect.fz:166:10:
    x := instate_helper R effect.this e code def
---------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.e.type.instate#4 unit' at {base.fum}/effect.fz:187:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.e.type.instate#3 unit' at {base.fum}/effect.fz:208:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.e.instate_self#2 unit' at {base.fum}/effect.fz:225:5:
    instate_self code
----^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.e.infix !#2 unit' at --CURDIR--/test_effect_neg.fz:62:3:
  e ! ()->use_e
--^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg'
effect environment '--empty--' at program entry

To fix this, you should make sure that an effect for type 'test_effect_neg.g' is instated along all call paths to this effect use.

Alternatively, you might want to try setting env variable 'dev_flang_fuir_analysis_dfa_TRACE_ALL_EFFECT_ENVS=true'.  This will increase the analysis accuracy for effects, but may take a long time.


--CURDIR--/test_effect_neg.fz:47:22: error 4: Failed to verify that effect 'test_effect_neg.b' is installed in current environment.
  use_b_err2 => _ := b.env       # 2. should flag an error: effect not installed
---------------------^^^^^
Callchain that lead to this point:

effect environment '--empty--' for call to 'test_effect_neg.type.b.type.from_env' at --CURDIR--/test_effect_neg.fz:47:22:
  use_b_err2 => _ := b.env       # 2. should flag an error: effect not installed
---------------------^^^^^
effect environment '--empty--' for call to 'test_effect_neg.use_b_err2' at --CURDIR--/test_effect_neg.fz:71:11:
  a ! ()->use_b_err2
----------^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.λ.call' at {base.fum}/effect.fz:416:18:
      set res := code()
-----------------^^^^
effect environment 'test_effect_neg.a' for call to '(instate_helper unit test_effect_neg.a).call_code.call'
install effect 'test_effect_neg.a', old environment was '--empty--' for call to 'test_effect_neg.type.a.type.instate0#5 (instate_helper unit test_effect_neg.a).call_code (instate_helper unit test_effect_neg.a).call_def' at {base.fum}/effect.fz:411:3:
  ET.instate0 e call_code call_def
--^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'instate_helper unit test_effect_neg.a' at {base.fum}/effect.fz:166:10:
    x := instate_helper R effect.this e code def
---------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.a.type.instate#4 unit' at {base.fum}/effect.fz:187:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.a.type.instate#3 unit' at {base.fum}/effect.fz:208:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.a.instate_self#2 unit' at --CURDIR--/test_effect_neg.fz:56:3:
  a.instate_self unit fa
--^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg'
effect environment '--empty--' at program entry

To fix this, you should make sure that an effect for type 'test_effect_neg.b' is instated along all call paths to this effect use.

Alternatively, you might want to try setting env variable 'dev_flang_fuir_analysis_dfa_TRACE_ALL_EFFECT_ENVS=true'.  This will increase the analysis accuracy for effects, but may take a long time.


--CURDIR--/test_effect_neg.fz:48:22: error 5: Failed to verify that effect 'test_effect_neg.c' is installed in current environment.
  use_c_err3 => _ := c.env       # 3. should flag an error: effect not installed
---------------------^^^^^
Callchain that lead to this point:

effect environment '--empty--' for call to 'test_effect_neg.type.c.type.from_env' at --CURDIR--/test_effect_neg.fz:48:22:
  use_c_err3 => _ := c.env       # 3. should flag an error: effect not installed
---------------------^^^^^
effect environment '--empty--' for call to 'test_effect_neg.use_c_err3' at --CURDIR--/test_effect_neg.fz:72:11:
  b ! ()->use_c_err3
----------^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.λ.call' at {base.fum}/effect.fz:416:18:
      set res := code()
-----------------^^^^
effect environment 'test_effect_neg.b' for call to '(instate_helper unit test_effect_neg.b).call_code.call'
install effect 'test_effect_neg.b', old environment was '--empty--' for call to 'test_effect_neg.type.b.type.instate0#5 (instate_helper unit test_effect_neg.b).call_code (instate_helper unit test_effect_neg.b).call_def' at {base.fum}/effect.fz:411:3:
  ET.instate0 e call_code call_def
--^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'instate_helper unit test_effect_neg.b' at {base.fum}/effect.fz:166:10:
    x := instate_helper R effect.this e code def
---------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.b.type.instate#4 unit' at {base.fum}/effect.fz:187:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.b.type.instate#3 unit' at {base.fum}/effect.fz:208:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.b.instate_self#2 unit' at --CURDIR--/test_effect_neg.fz:57:3:
  b.instate_self unit fb
--^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg'
effect environment '--empty--' at program entry

To fix this, you should make sure that an effect for type 'test_effect_neg.c' is instated along all call paths to this effect use.

Alternatively, you might want to try setting env variable 'dev_flang_fuir_analysis_dfa_TRACE_ALL_EFFECT_ENVS=true'.  This will increase the analysis accuracy for effects, but may take a long time.


--CURDIR--/test_effect_neg.fz:46:22: error 6: Failed to verify that effect 'test_effect_neg.a' is installed in current environment.
  use_a_err1 => _ := a.env       # 1. should flag an error: effect not installed
---------------------^^^^^
Callchain that lead to this point:

effect environment '--empty--' for call to 'test_effect_neg.type.a.type.from_env' at --CURDIR--/test_effect_neg.fz:46:22:
  use_a_err1 => _ := a.env       # 1. should flag an error: effect not installed
---------------------^^^^^
effect environment '--empty--' for call to 'test_effect_neg.use_a_err1' at --CURDIR--/test_effect_neg.fz:73:11:
  c ! ()->use_a_err1
----------^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.λ.call' at {base.fum}/effect.fz:416:18:
      set res := code()
-----------------^^^^
effect environment 'test_effect_neg.c' for call to '(instate_helper unit test_effect_neg.c).call_code.call'
install effect 'test_effect_neg.c', old environment was '--empty--' for call to 'test_effect_neg.type.c.type.instate0#5 (instate_helper unit test_effect_neg.c).call_code (instate_helper unit test_effect_neg.c).call_def' at {base.fum}/effect.fz:411:3:
  ET.instate0 e call_code call_def
--^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'instate_helper unit test_effect_neg.c' at {base.fum}/effect.fz:166:10:
    x := instate_helper R effect.this e code def
---------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.c.type.instate#4 unit' at {base.fum}/effect.fz:187:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.c.type.instate#3 unit' at {base.fum}/effect.fz:208:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.c.instate_self#2 unit' at --CURDIR--/test_effect_neg.fz:58:3:
  c.instate_self unit fc
--^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg'
effect environment '--empty--' at program entry

To fix this, you should make sure that an effect for type 'test_effect_neg.a' is instated along all call paths to this effect use.

Alternatively, you might want to try setting env variable 'dev_flang_fuir_analysis_dfa_TRACE_ALL_EFFECT_ENVS=true'.  This will increase the analysis accuracy for effects, but may take a long time.


--CURDIR--/test_effect_neg.fz:49:22: error 7: Failed to verify that effect 'test_effect_neg.d' is installed in current environment.
  use_d_err4 => _ := d.env       # 4. should flag an error: effect not installed
---------------------^^^^^
Callchain that lead to this point:

effect environment '--empty--' for call to 'test_effect_neg.type.d.type.from_env' at --CURDIR--/test_effect_neg.fz:49:22:
  use_d_err4 => _ := d.env       # 4. should flag an error: effect not installed
---------------------^^^^^
effect environment '--empty--' for call to 'test_effect_neg.use_d_err4' at --CURDIR--/test_effect_neg.fz:80:9:
        use_d_err4
--------^^^^^^^^^^
effect environment 'test_effect_neg.a, test_effect_neg.b, test_effect_neg.c' for call to 'test_effect_neg.λ.call.λ.call.λ.call' at {base.fum}/effect.fz:416:18:
      set res := code()
-----------------^^^^
effect environment 'test_effect_neg.a, test_effect_neg.b, test_effect_neg.c' for call to '(instate_helper unit test_effect_neg.c).call_code.call'
install effect 'test_effect_neg.c', old environment was 'test_effect_neg.a, test_effect_neg.b' for call to 'test_effect_neg.type.c.type.instate0#5 (instate_helper unit test_effect_neg.c).call_code (instate_helper unit test_effect_neg.c).call_def' at {base.fum}/effect.fz:411:3:
  ET.instate0 e call_code call_def
--^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a, test_effect_neg.b' for call to 'instate_helper unit test_effect_neg.c' at {base.fum}/effect.fz:166:10:
    x := instate_helper R effect.this e code def
---------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a, test_effect_neg.b' for call to 'test_effect_neg.type.c.type.instate#4 unit' at {base.fum}/effect.fz:187:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a, test_effect_neg.b' for call to 'test_effect_neg.type.c.type.instate#3 unit' at {base.fum}/effect.fz:208:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a, test_effect_neg.b' for call to 'test_effect_neg.c.instate_self#2 unit' at {base.fum}/effect.fz:225:5:
    instate_self code
----^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a, test_effect_neg.b' for call to 'test_effect_neg.c.infix !#2 unit' at --CURDIR--/test_effect_neg.fz:67:7:
      c ! ()->
------^^^^^^^^
        use_a
--------^^^^^
        use_b
--------^^^^^
        use_c
--------^^^^^
effect environment 'test_effect_neg.a, test_effect_neg.b' for call to 'test_effect_neg.λ.call.λ.call' at {base.fum}/effect.fz:416:18:
      set res := code()
-----------------^^^^
effect environment 'test_effect_neg.a, test_effect_neg.b' for call to '(instate_helper unit test_effect_neg.b).call_code.call'
install effect 'test_effect_neg.b', old environment was 'test_effect_neg.a' for call to 'test_effect_neg.type.b.type.instate0#5 (instate_helper unit test_effect_neg.b).call_code (instate_helper unit test_effect_neg.b).call_def' at {base.fum}/effect.fz:411:3:
  ET.instate0 e call_code call_def
--^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a' for call to 'instate_helper unit test_effect_neg.b' at {base.fum}/effect.fz:166:10:
    x := instate_helper R effect.this e code def
---------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a' for call to 'test_effect_neg.type.b.type.instate#4 unit' at {base.fum}/effect.fz:187:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a' for call to 'test_effect_neg.type.b.type.instate#3 unit' at {base.fum}/effect.fz:208:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a' for call to 'test_effect_neg.b.instate_self#2 unit' at {base.fum}/effect.fz:225:5:
    instate_self code
----^^^^^^^^^^^^^^^^^
effect environment 'test_effect_neg.a' for call to 'test_effect_neg.b.infix !#2 unit' at --CURDIR--/test_effect_neg.fz:66:5:
    b ! ()->
----^^^^^^^^
      c ! ()->
------^^^^^^^^
        use_a
--------^^^^^
        use_b
--------^^^^^
        use_c
--------^^^^^
effect environment 'test_effect_neg.a' for call to 'test_effect_neg.λ.call' at {base.fum}/effect.fz:416:18:
      set res := code()
-----------------^^^^
effect environment 'test_effect_neg.a' for call to '(instate_helper unit test_effect_neg.a).call_code.call'
install effect 'test_effect_neg.a', old environment was '--empty--' for call to 'test_effect_neg.type.a.type.instate0#5 (instate_helper unit test_effect_neg.a).call_code (instate_helper unit test_effect_neg.a).call_def' at {base.fum}/effect.fz:411:3:
  ET.instate0 e call_code call_def
--^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'instate_helper unit test_effect_neg.a' at {base.fum}/effect.fz:166:10:
    x := instate_helper R effect.this e code def
---------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.a.type.instate#4 unit' at {base.fum}/effect.fz:187:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.type.a.type.instate#3 unit' at {base.fum}/effect.fz:208:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg.a.instate_self#2 unit' at --CURDIR--/test_effect_neg.fz:56:3:
  a.instate_self unit fa
--^^^^^^^^^^^^^^^^^^^^^^
effect environment '--empty--' for call to 'test_effect_neg'
effect environment '--empty--' at program entry

To fix this, you should make sure that an effect for type 'test_effect_neg.d' is instated along all call paths to this effect use.

Alternatively, you might want to try setting env variable 'dev_flang_fuir_analysis_dfa_TRACE_ALL_EFFECT_ENVS=true'.  This will increase the analysis accuracy for effects, but may take a long time.

7 errors.
