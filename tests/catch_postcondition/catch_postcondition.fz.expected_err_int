
error 1: Postcondition `equals result-x x` does not hold after call
Call stack:
fuzion.type.runtime.type.fault.type.install_default.λ.call#1: $MODULE/fuzion/runtime/fault.fz:38:7:
      fuzion.sys.fatal_fault kind msg
------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
fuzion.runtime.fault.cause#1: $MODULE/eff/fallible.fz:35:6:
  => h e
-----^
fuzion.type.runtime.type.post_fault.type.install_default.λ.call#1: $MODULE/fuzion/runtime/post_fault.fz:39:7:
      fuzion.runtime.fault.cause ("postcondition", msg)).default
------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
fuzion.runtime.post_fault.cause#1: $MODULE/eff/fallible.fz:35:6:
  => h e
-----^
fuzion.runtime.postcondition_fault#1: $MODULE/fuzion/runtime/post_fault.fz:58:43:
public postcondition_fault(msg String) => post_fault.cause msg
------------------------------------------^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.test#1 i32).post double: --CURDIR--/catch_postcondition.fz:38:9:
        equals result-x x
--------^^^^^^^^^^^^^^^^^
(catch_postcondition.test#1 i32).double#1: --CURDIR--/catch_postcondition.fz:37:7:
      post
------^^^^
        equals result-x x
--------^^^^^^^^^^^^^^^^^
(catch_postcondition.test#1 i32).loop: --CURDIR--/catch_postcondition.fz:43:21:
    for v := T.one, double v
--------------------^^^^^^^^
catch_postcondition.test#1 i32: --CURDIR--/catch_postcondition.fz:43:5:
    for v := T.one, double v
----^
catch_postcondition.λ.call: --CURDIR--/catch_postcondition.fz:291:7:
  say (test i32)
------^^^^^^^^^^
catch_postcondition.loop.λ.call: --CURDIR--/catch_postcondition.fz:276:19:
           option tries[c].call
------------------^^^^^^^^^^^^^
(fuzion.type.runtime.type.fault.type.try#2 (option String)).λ.call: $MODULE/eff/fallible.fz:70:35:
    eff.try ERROR fallible.this T code_try
----------------------------------^^^^^^^^
(eff.try (tuple String String) fuzion.runtime.fault (option String)).catch#1.λ.call.λ.call: $MODULE/eff/try.fz:52:21:
      F.instate T v code_try (_ -> code_catch m.get.get)
--------------------^^^^^^^^
(fuzion.type.runtime.type.fault.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:162:41:
    x := instate_helper R effect.this e code def
----------------------------------------^^^^
(instate_helper (option String) fuzion.runtime.fault).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
fuzion.type.runtime.type.fault.type.instate#4 (option String): <source position not available>:

(eff.try (tuple String String) fuzion.runtime.fault (option String)).catch#1.λ.call: $MODULE/eff/try.fz:52:7:
      F.instate T v code_try (_ -> code_catch m.get.get)
------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
((eff.try (tuple String String) fuzion.runtime.fault (option String)).catch#1.lm.instate_self#2 (option String)).λ.call: $MODULE/effect.fz:205:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
((eff.type.try.type (tuple String String) fuzion.runtime.fault (option String)).catch#1.type.lm.type.instate#3 (option String)).λ.call: $MODULE/effect.fz:184:17:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----------------^^^^
((eff.type.try.type (tuple String String) fuzion.runtime.fault (option String)).catch#1.type.lm.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:162:41:
    x := instate_helper R effect.this e code def
----------------------------------------^^^^
(instate_helper (option String) (eff.try (tuple String String) fuzion.runtime.fault (option String)).catch#1.lm).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
(eff.type.try.type (tuple String String) fuzion.runtime.fault (option String)).catch#1.type.lm.type.instate#4 (option String): <source position not available>:

(eff.type.try.type (tuple String String) fuzion.runtime.fault (option String)).catch#1.type.lm.type.instate#3 (option String): $MODULE/effect.fz:184:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(eff.try (tuple String String) fuzion.runtime.fault (option String)).catch#1.lm.instate_self#2 (option String): $MODULE/effect.fz:205:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(eff.try (tuple String String) fuzion.runtime.fault (option String)).catch#1: $MODULE/eff/try.fz:47:5:
    lm.instate_self ()->
----^^^^^^^^^^^^^^^^^^^^
      m := lm.env.new (option ERROR nil)
------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      v := F.new e->
------^^^^^^^^^^^^^^
                m <- e
----------------^^^^^^
                F.abort
----------------^^^^^^^
      F.instate T v code_try (_ -> code_catch m.get.get)
------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.test#1 i32: --CURDIR--/catch_postcondition.fz:275:10:
    r := fuzion.runtime.fault.try ()->
---------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           option tries[c].call
-----------^^^^^^^^^^^^^^^^^^^^
         .catch s->
---------^^^^^^^^^^
           say "*** failed: {s.0} {s.1} ***"
-----------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           nil
-----------^^^
catch_postcondition.λ.call: --CURDIR--/catch_postcondition.fz:146:38:
  tries array ()->String := [ (() -> test i32), (() -> test i16), (() -> test i64) ]
-------------------------------------^^^^^^^^
catch_postcondition.loop.λ.call: --CURDIR--/catch_postcondition.fz:276:19:
           option tries[c].call
------------------^^^^^^^^^^^^^
(fuzion.type.runtime.type.fault.type.try#2 (option String)).λ.call: $MODULE/eff/fallible.fz:70:35:
    eff.try ERROR fallible.this T code_try
----------------------------------^^^^^^^^
(eff.try (tuple String String) fuzion.runtime.fault (option String)).catch#1.λ.call.λ.call: $MODULE/eff/try.fz:52:21:
      F.instate T v code_try (_ -> code_catch m.get.get)
--------------------^^^^^^^^
(fuzion.type.runtime.type.fault.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:162:41:
    x := instate_helper R effect.this e code def
----------------------------------------^^^^
(instate_helper (option String) fuzion.runtime.fault).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
fuzion.type.runtime.type.fault.type.instate#4 (option String): <source position not available>:

(eff.try (tuple String String) fuzion.runtime.fault (option String)).catch#1.λ.call: $MODULE/eff/try.fz:52:7:
      F.instate T v code_try (_ -> code_catch m.get.get)
------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
((eff.try (tuple String String) fuzion.runtime.fault (option String)).catch#1.lm.instate_self#2 (option String)).λ.call: $MODULE/effect.fz:205:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
((eff.type.try.type (tuple String String) fuzion.runtime.fault (option String)).catch#1.type.lm.type.instate#3 (option String)).λ.call: $MODULE/effect.fz:184:17:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----------------^^^^
((eff.type.try.type (tuple String String) fuzion.runtime.fault (option String)).catch#1.type.lm.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:162:41:
    x := instate_helper R effect.this e code def
----------------------------------------^^^^
(instate_helper (option String) (eff.try (tuple String String) fuzion.runtime.fault (option String)).catch#1.lm).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
(eff.type.try.type (tuple String String) fuzion.runtime.fault (option String)).catch#1.type.lm.type.instate#4 (option String): <source position not available>:

(eff.type.try.type (tuple String String) fuzion.runtime.fault (option String)).catch#1.type.lm.type.instate#3 (option String): $MODULE/effect.fz:184:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(eff.try (tuple String String) fuzion.runtime.fault (option String)).catch#1.lm.instate_self#2 (option String): $MODULE/effect.fz:205:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(eff.try (tuple String String) fuzion.runtime.fault (option String)).catch#1: $MODULE/eff/try.fz:47:5:
    lm.instate_self ()->
----^^^^^^^^^^^^^^^^^^^^
      m := lm.env.new (option ERROR nil)
------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      v := F.new e->
------^^^^^^^^^^^^^^
                m <- e
----------------^^^^^^
                F.abort
----------------^^^^^^^
      F.instate T v code_try (_ -> code_catch m.get.get)
------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.loop: --CURDIR--/catch_postcondition.fz:275:10:
    r := fuzion.runtime.fault.try ()->
---------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           option tries[c].call
-----------^^^^^^^^^^^^^^^^^^^^
         .catch s->
---------^^^^^^^^^^
           say "*** failed: {s.0} {s.1} ***"
-----------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           nil
-----------^^^
(fuzion.type.runtime.type.post_fault.type.try#2 (option String)).λ.call: --CURDIR--/catch_postcondition.fz:272:3:
  for
--^
(eff.try String fuzion.runtime.post_fault (option String)).catch#1.λ.call.λ.call: $MODULE/eff/try.fz:52:21:
      F.instate T v code_try (_ -> code_catch m.get.get)
--------------------^^^^^^^^
(fuzion.type.runtime.type.post_fault.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:162:41:
    x := instate_helper R effect.this e code def
----------------------------------------^^^^
(instate_helper (option String) fuzion.runtime.post_fault).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
fuzion.type.runtime.type.post_fault.type.instate#4 (option String): <source position not available>:

(eff.try String fuzion.runtime.post_fault (option String)).catch#1.λ.call: $MODULE/eff/try.fz:52:7:
      F.instate T v code_try (_ -> code_catch m.get.get)
------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
((eff.try String fuzion.runtime.post_fault (option String)).catch#1.lm.instate_self#2 (option String)).λ.call: $MODULE/effect.fz:205:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
((eff.type.try.type String fuzion.runtime.post_fault (option String)).catch#1.type.lm.type.instate#3 (option String)).λ.call: $MODULE/effect.fz:184:17:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----------------^^^^
((eff.type.try.type String fuzion.runtime.post_fault (option String)).catch#1.type.lm.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:162:41:
    x := instate_helper R effect.this e code def
----------------------------------------^^^^
(instate_helper (option String) (eff.try String fuzion.runtime.post_fault (option String)).catch#1.lm).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
(eff.type.try.type String fuzion.runtime.post_fault (option String)).catch#1.type.lm.type.instate#4 (option String): <source position not available>:

(eff.type.try.type String fuzion.runtime.post_fault (option String)).catch#1.type.lm.type.instate#3 (option String): $MODULE/effect.fz:184:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(eff.try String fuzion.runtime.post_fault (option String)).catch#1.lm.instate_self#2 (option String): $MODULE/effect.fz:205:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(eff.try String fuzion.runtime.post_fault (option String)).catch#1: $MODULE/eff/try.fz:47:5:
    lm.instate_self ()->
----^^^^^^^^^^^^^^^^^^^^
      m := lm.env.new (option ERROR nil)
------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      v := F.new e->
------^^^^^^^^^^^^^^
                m <- e
----------------^^^^^^
                F.abort
----------------^^^^^^^
      F.instate T v code_try (_ -> code_catch m.get.get)
------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.loop.λ.call: --CURDIR--/catch_postcondition.fz:256:10:
    r := fuzion.runtime.post_fault.try ()->
---------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           option tries[c].call
-----------^^^^^^^^^^^^^^^^^^^^
         .catch s->
---------^^^^^^^^^^
           say "*** failed: $s ***"
-----------^^^^^^^^^^^^^^^^^^^^^^^^
           nil
-----------^^^
(fuzion.type.runtime.type.post_fault.type.try#2 (option String)).λ.call: $MODULE/eff/fallible.fz:70:35:
    eff.try ERROR fallible.this T code_try
----------------------------------^^^^^^^^
(eff.try String fuzion.runtime.post_fault (option String)).catch#1.λ.call.λ.call: $MODULE/eff/try.fz:52:21:
      F.instate T v code_try (_ -> code_catch m.get.get)
--------------------^^^^^^^^
(fuzion.type.runtime.type.post_fault.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:162:41:
    x := instate_helper R effect.this e code def
----------------------------------------^^^^
(instate_helper (option String) fuzion.runtime.post_fault).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
fuzion.type.runtime.type.post_fault.type.instate#4 (option String): <source position not available>:

(eff.try String fuzion.runtime.post_fault (option String)).catch#1.λ.call: $MODULE/eff/try.fz:52:7:
      F.instate T v code_try (_ -> code_catch m.get.get)
------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
((eff.try String fuzion.runtime.post_fault (option String)).catch#1.lm.instate_self#2 (option String)).λ.call: $MODULE/effect.fz:205:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
((eff.type.try.type String fuzion.runtime.post_fault (option String)).catch#1.type.lm.type.instate#3 (option String)).λ.call: $MODULE/effect.fz:184:17:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----------------^^^^
((eff.type.try.type String fuzion.runtime.post_fault (option String)).catch#1.type.lm.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:162:41:
    x := instate_helper R effect.this e code def
----------------------------------------^^^^
(instate_helper (option String) (eff.try String fuzion.runtime.post_fault (option String)).catch#1.lm).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
(eff.type.try.type String fuzion.runtime.post_fault (option String)).catch#1.type.lm.type.instate#4 (option String): <source position not available>:

(eff.type.try.type String fuzion.runtime.post_fault (option String)).catch#1.type.lm.type.instate#3 (option String): $MODULE/effect.fz:184:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(eff.try String fuzion.runtime.post_fault (option String)).catch#1.lm.instate_self#2 (option String): $MODULE/effect.fz:205:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(eff.try String fuzion.runtime.post_fault (option String)).catch#1: $MODULE/eff/try.fz:47:5:
    lm.instate_self ()->
----^^^^^^^^^^^^^^^^^^^^
      m := lm.env.new (option ERROR nil)
------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      v := F.new e->
------^^^^^^^^^^^^^^
                m <- e
----------------^^^^^^
                F.abort
----------------^^^^^^^
      F.instate T v code_try (_ -> code_catch m.get.get)
------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.loop: --CURDIR--/catch_postcondition.fz:256:10:
    r := fuzion.runtime.post_fault.try ()->
---------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           option tries[c].call
-----------^^^^^^^^^^^^^^^^^^^^
         .catch s->
---------^^^^^^^^^^
           say "*** failed: $s ***"
-----------^^^^^^^^^^^^^^^^^^^^^^^^
           nil
-----------^^^
(catch_postcondition.try_post (option String)).catch#1.h.λ.call.λ.call: --CURDIR--/catch_postcondition.fz:253:3:
  for
--^
(fuzion.type.runtime.type.post_fault.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:162:41:
    x := instate_helper R effect.this e code def
----------------------------------------^^^^
(instate_helper (option String) fuzion.runtime.post_fault).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
fuzion.type.runtime.type.post_fault.type.instate#4 (option String): <source position not available>:

(catch_postcondition.try_post (option String)).catch#1.h.λ.call: --CURDIR--/catch_postcondition.fz:107:9:
        (fuzion.runtime.post_fault.instate
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          T
----------^
          (rt.post_fault msg->
----------^^^^^^^^^^^^^^^^^^^^
            m <- msg
------------^^^^^^^^
            fuzion.runtime.post_fault.abort)
------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          try
----------^^^
          (_ -> catch m.get.get))
----------^^^^^^^^^^^^^^^^^^^^^^^
((catch_postcondition.try_post (option String)).catch#1.h.lm.instate_self#2 (option String)).λ.call: $MODULE/effect.fz:205:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
((catch_postcondition.type.try_post.type (option String)).catch#1.type.h.type.lm.type.instate#3 (option String)).λ.call: $MODULE/effect.fz:184:17:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----------------^^^^
((catch_postcondition.type.try_post.type (option String)).catch#1.type.h.type.lm.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:162:41:
    x := instate_helper R effect.this e code def
----------------------------------------^^^^
(instate_helper (option String) (catch_postcondition.try_post (option String)).catch#1.h.lm).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
(catch_postcondition.type.try_post.type (option String)).catch#1.type.h.type.lm.type.instate#4 (option String): <source position not available>:

(catch_postcondition.type.try_post.type (option String)).catch#1.type.h.type.lm.type.instate#3 (option String): $MODULE/effect.fz:184:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.try_post (option String)).catch#1.h.lm.instate_self#2 (option String): $MODULE/effect.fz:205:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.try_post (option String)).catch#1.h: --CURDIR--/catch_postcondition.fz:105:12:
    res := lm.instate_self ()->
-----------^^^^^^^^^^^^^^^^^^^^
        m := lm.env.new (option String nil)
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        (fuzion.runtime.post_fault.instate
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          T
----------^
          (rt.post_fault msg->
----------^^^^^^^^^^^^^^^^^^^^
            m <- msg
------------^^^^^^^^
            fuzion.runtime.post_fault.abort)
------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          try
----------^^^
          (_ -> catch m.get.get))
----------^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.try_post (option String)).catch#1: --CURDIR--/catch_postcondition.fz:195:7:
      h.res
------^
(catch_postcondition.try_post (option String)).catch#1.h.try: --CURDIR--/catch_postcondition.fz:237:10:
    r := try_post ()->
---------^^^^^^^^^^^^^
           option tries[c].call
-----------^^^^^^^^^^^^^^^^^^^^
         .catch s->
---------^^^^^^^^^^
           say "*** failed: $s ***"
-----------^^^^^^^^^^^^^^^^^^^^^^^^
           nil
-----------^^^
(catch_postcondition.try_post (option String)).catch#1.h.λ.call.λ.call: --CURDIR--/catch_postcondition.fz:112:11:
          try
----------^^^
(fuzion.type.runtime.type.post_fault.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:162:41:
    x := instate_helper R effect.this e code def
----------------------------------------^^^^
(instate_helper (option String) fuzion.runtime.post_fault).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
fuzion.type.runtime.type.post_fault.type.instate#4 (option String): <source position not available>:

(catch_postcondition.try_post (option String)).catch#1.h.λ.call: --CURDIR--/catch_postcondition.fz:107:9:
        (fuzion.runtime.post_fault.instate
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          T
----------^
          (rt.post_fault msg->
----------^^^^^^^^^^^^^^^^^^^^
            m <- msg
------------^^^^^^^^
            fuzion.runtime.post_fault.abort)
------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          try
----------^^^
          (_ -> catch m.get.get))
----------^^^^^^^^^^^^^^^^^^^^^^^
((catch_postcondition.try_post (option String)).catch#1.h.lm.instate_self#2 (option String)).λ.call: $MODULE/effect.fz:205:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
((catch_postcondition.type.try_post.type (option String)).catch#1.type.h.type.lm.type.instate#3 (option String)).λ.call: $MODULE/effect.fz:184:17:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----------------^^^^
((catch_postcondition.type.try_post.type (option String)).catch#1.type.h.type.lm.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:162:41:
    x := instate_helper R effect.this e code def
----------------------------------------^^^^
(instate_helper (option String) (catch_postcondition.try_post (option String)).catch#1.h.lm).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
(catch_postcondition.type.try_post.type (option String)).catch#1.type.h.type.lm.type.instate#4 (option String): <source position not available>:

(catch_postcondition.type.try_post.type (option String)).catch#1.type.h.type.lm.type.instate#3 (option String): $MODULE/effect.fz:184:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.try_post (option String)).catch#1.h.lm.instate_self#2 (option String): $MODULE/effect.fz:205:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.try_post (option String)).catch#1.h: --CURDIR--/catch_postcondition.fz:105:12:
    res := lm.instate_self ()->
-----------^^^^^^^^^^^^^^^^^^^^
        m := lm.env.new (option String nil)
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        (fuzion.runtime.post_fault.instate
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          T
----------^
          (rt.post_fault msg->
----------^^^^^^^^^^^^^^^^^^^^
            m <- msg
------------^^^^^^^^
            fuzion.runtime.post_fault.abort)
------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          try
----------^^^
          (_ -> catch m.get.get))
----------^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.try_post (option String)).catch#1: --CURDIR--/catch_postcondition.fz:195:7:
      h.res
------^
catch_postcondition.loop: --CURDIR--/catch_postcondition.fz:237:10:
    r := try_post ()->
---------^^^^^^^^^^^^^
           option tries[c].call
-----------^^^^^^^^^^^^^^^^^^^^
         .catch s->
---------^^^^^^^^^^
           say "*** failed: $s ***"
-----------^^^^^^^^^^^^^^^^^^^^^^^^
           nil
-----------^^^
(instate_helper String fuzion.runtime.post_fault).call_code.call: --CURDIR--/catch_postcondition.fz:234:3:
  for
--^
fuzion.type.runtime.type.post_fault.type.instate#4 String: <source position not available>:

(catch_postcondition.try_post String).catch#1.h.λ.call: --CURDIR--/catch_postcondition.fz:107:9:
        (fuzion.runtime.post_fault.instate
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          T
----------^
          (rt.post_fault msg->
----------^^^^^^^^^^^^^^^^^^^^
            m <- msg
------------^^^^^^^^
            fuzion.runtime.post_fault.abort)
------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          try
----------^^^
          (_ -> catch m.get.get))
----------^^^^^^^^^^^^^^^^^^^^^^^
((catch_postcondition.try_post String).catch#1.h.lm.instate_self#2 String).λ.call: $MODULE/effect.fz:205:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
((catch_postcondition.type.try_post.type String).catch#1.type.h.type.lm.type.instate#3 String).λ.call: $MODULE/effect.fz:184:17:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----------------^^^^
((catch_postcondition.type.try_post.type String).catch#1.type.h.type.lm.type.instate#4 String).λ.call: $MODULE/effect.fz:162:41:
    x := instate_helper R effect.this e code def
----------------------------------------^^^^
(instate_helper String (catch_postcondition.try_post String).catch#1.h.lm).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
(catch_postcondition.type.try_post.type String).catch#1.type.h.type.lm.type.instate#4 String: <source position not available>:

(catch_postcondition.type.try_post.type String).catch#1.type.h.type.lm.type.instate#3 String: $MODULE/effect.fz:184:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.try_post String).catch#1.h.lm.instate_self#2 String: $MODULE/effect.fz:205:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.try_post String).catch#1.h: --CURDIR--/catch_postcondition.fz:105:12:
    res := lm.instate_self ()->
-----------^^^^^^^^^^^^^^^^^^^^
        m := lm.env.new (option String nil)
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        (fuzion.runtime.post_fault.instate
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          T
----------^
          (rt.post_fault msg->
----------^^^^^^^^^^^^^^^^^^^^
            m <- msg
------------^^^^^^^^
            fuzion.runtime.post_fault.abort)
------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          try
----------^^^
          (_ -> catch m.get.get))
----------^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.try_post String).catch#1: --CURDIR--/catch_postcondition.fz:195:7:
      h.res
------^
(catch_postcondition.try_post String).infix ||#1: --CURDIR--/catch_postcondition.fz:206:40:
    infix || (code_catch String->T) => catch code_catch
---------------------------------------^^^^^^^^^^^^^^^^
catch_postcondition.res2: --CURDIR--/catch_postcondition.fz:225:11:
  res2 => try_post (test i32) || (s->say "*** failed: $s ***"; test u64)
----------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(fuzion.type.runtime.type.post_fault.type.instate#4 String).λ.call: --CURDIR--/catch_postcondition.fz:226:7:
  say res2
------^^^^
(instate_helper String fuzion.runtime.post_fault).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
fuzion.type.runtime.type.post_fault.type.instate#4 String: <source position not available>:

(catch_postcondition.try_post String).catch#1.h.λ.call: --CURDIR--/catch_postcondition.fz:107:9:
        (fuzion.runtime.post_fault.instate
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          T
----------^
          (rt.post_fault msg->
----------^^^^^^^^^^^^^^^^^^^^
            m <- msg
------------^^^^^^^^
            fuzion.runtime.post_fault.abort)
------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          try
----------^^^
          (_ -> catch m.get.get))
----------^^^^^^^^^^^^^^^^^^^^^^^
((catch_postcondition.try_post String).catch#1.h.lm.instate_self#2 String).λ.call: $MODULE/effect.fz:205:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
((catch_postcondition.type.try_post.type String).catch#1.type.h.type.lm.type.instate#3 String).λ.call: $MODULE/effect.fz:184:17:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----------------^^^^
((catch_postcondition.type.try_post.type String).catch#1.type.h.type.lm.type.instate#4 String).λ.call: $MODULE/effect.fz:162:41:
    x := instate_helper R effect.this e code def
----------------------------------------^^^^
(instate_helper String (catch_postcondition.try_post String).catch#1.h.lm).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
(catch_postcondition.type.try_post.type String).catch#1.type.h.type.lm.type.instate#4 String: <source position not available>:

(catch_postcondition.type.try_post.type String).catch#1.type.h.type.lm.type.instate#3 String: $MODULE/effect.fz:184:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.try_post String).catch#1.h.lm.instate_self#2 String: $MODULE/effect.fz:205:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.try_post String).catch#1.h: --CURDIR--/catch_postcondition.fz:105:12:
    res := lm.instate_self ()->
-----------^^^^^^^^^^^^^^^^^^^^
        m := lm.env.new (option String nil)
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        (fuzion.runtime.post_fault.instate
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          T
----------^
          (rt.post_fault msg->
----------^^^^^^^^^^^^^^^^^^^^
            m <- msg
------------^^^^^^^^
            fuzion.runtime.post_fault.abort)
------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          try
----------^^^
          (_ -> catch m.get.get))
----------^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.try_post String).catch#1: --CURDIR--/catch_postcondition.fz:195:7:
      h.res
------^
catch_postcondition.res: --CURDIR--/catch_postcondition.fz:212:10:
  res => try_post ()->
---------^^^^^^^^^^^^^
           test i32
-----------^^^^^^^^
         .catch s->
---------^^^^^^^^^^
           say "*** failed: $s ***"
-----------^^^^^^^^^^^^^^^^^^^^^^^^
           test u64
-----------^^^^^^^^
catch_postcondition.loop.h.λ.call.λ.call: --CURDIR--/catch_postcondition.fz:217:7:
  say res
------^^^
(fuzion.type.runtime.type.post_fault.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:162:41:
    x := instate_helper R effect.this e code def
----------------------------------------^^^^
(instate_helper (option String) fuzion.runtime.post_fault).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
fuzion.type.runtime.type.post_fault.type.instate#4 (option String): <source position not available>:

catch_postcondition.loop.h.λ.call: --CURDIR--/catch_postcondition.fz:107:9:
        (fuzion.runtime.post_fault.instate
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          T
----------^
          (rt.post_fault msg->
----------^^^^^^^^^^^^^^^^^^^^
            m <- msg
------------^^^^^^^^
            fuzion.runtime.post_fault.abort)
------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          try
----------^^^
          (_ -> catch m.get.get))
----------^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.loop.h.lm.instate_self#2 (option String)).λ.call: $MODULE/effect.fz:205:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
(catch_postcondition.type.loop.type.h.type.lm.type.instate#3 (option String)).λ.call: $MODULE/effect.fz:184:17:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----------------^^^^
(catch_postcondition.type.loop.type.h.type.lm.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:162:41:
    x := instate_helper R effect.this e code def
----------------------------------------^^^^
(instate_helper (option String) catch_postcondition.loop.h.lm).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
catch_postcondition.type.loop.type.h.type.lm.type.instate#4 (option String): <source position not available>:

catch_postcondition.type.loop.type.h.type.lm.type.instate#3 (option String): $MODULE/effect.fz:184:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.loop.h.lm.instate_self#2 (option String): $MODULE/effect.fz:205:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.loop.h: --CURDIR--/catch_postcondition.fz:105:12:
    res := lm.instate_self ()->
-----------^^^^^^^^^^^^^^^^^^^^
        m := lm.env.new (option String nil)
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        (fuzion.runtime.post_fault.instate
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          T
----------^
          (rt.post_fault msg->
----------^^^^^^^^^^^^^^^^^^^^
            m <- msg
------------^^^^^^^^
            fuzion.runtime.post_fault.abort)
------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          try
----------^^^
          (_ -> catch m.get.get))
----------^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.loop.h.try: --CURDIR--/catch_postcondition.fz:166:10:
    r := h.res
---------^
catch_postcondition.loop.h.λ.call.λ.call: --CURDIR--/catch_postcondition.fz:112:11:
          try
----------^^^
(fuzion.type.runtime.type.post_fault.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:162:41:
    x := instate_helper R effect.this e code def
----------------------------------------^^^^
(instate_helper (option String) fuzion.runtime.post_fault).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
fuzion.type.runtime.type.post_fault.type.instate#4 (option String): <source position not available>:

catch_postcondition.loop.h.λ.call: --CURDIR--/catch_postcondition.fz:107:9:
        (fuzion.runtime.post_fault.instate
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          T
----------^
          (rt.post_fault msg->
----------^^^^^^^^^^^^^^^^^^^^
            m <- msg
------------^^^^^^^^
            fuzion.runtime.post_fault.abort)
------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          try
----------^^^
          (_ -> catch m.get.get))
----------^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.loop.h.lm.instate_self#2 (option String)).λ.call: $MODULE/effect.fz:205:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
(catch_postcondition.type.loop.type.h.type.lm.type.instate#3 (option String)).λ.call: $MODULE/effect.fz:184:17:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----------------^^^^
(catch_postcondition.type.loop.type.h.type.lm.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:162:41:
    x := instate_helper R effect.this e code def
----------------------------------------^^^^
(instate_helper (option String) catch_postcondition.loop.h.lm).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
catch_postcondition.type.loop.type.h.type.lm.type.instate#4 (option String): <source position not available>:

catch_postcondition.type.loop.type.h.type.lm.type.instate#3 (option String): $MODULE/effect.fz:184:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.loop.h.lm.instate_self#2 (option String): $MODULE/effect.fz:205:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.loop.h: --CURDIR--/catch_postcondition.fz:105:12:
    res := lm.instate_self ()->
-----------^^^^^^^^^^^^^^^^^^^^
        m := lm.env.new (option String nil)
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        (fuzion.runtime.post_fault.instate
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          T
----------^
          (rt.post_fault msg->
----------^^^^^^^^^^^^^^^^^^^^
            m <- msg
------------^^^^^^^^
            fuzion.runtime.post_fault.abort)
------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          try
----------^^^
          (_ -> catch m.get.get))
----------^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.loop: --CURDIR--/catch_postcondition.fz:166:10:
    r := h.res
---------^
catch_postcondition.z: --CURDIR--/catch_postcondition.fz:162:3:
  for c in tries.indices do
--^
catch_postcondition.z.catch#1: --CURDIR--/catch_postcondition.fz:152:118:
    redef catch(s String) option String => {say "*** failed: $s ***"; c0 <- c0.get + 1; if c0.get < tries.count then z.res else nil}
---------------------------------------------------------------------------------------------------------------------^
catch_postcondition.z.λ.call.λ.call#1: --CURDIR--/catch_postcondition.fz:113:17:
          (_ -> catch m.get.get))
----------------^^^^^^^^^^^^^^^
(instate_helper (option String) fuzion.runtime.post_fault).call_def.call#1: $MODULE/effect.fz:378:18:
      set res := def cur_e
-----------------^^^
fuzion.type.runtime.type.post_fault.type.abort: <source position not available>:

fuzion.type.runtime.type.post_fault.type.precall abort: $MODULE/effect.fz:285:3:
  pre
--^^^
    safety: effect.this.is_instated
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    safety: effect.this.env.abortable
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.z.λ.call.λ.call#1: --CURDIR--/catch_postcondition.fz:111:13:
            fuzion.runtime.post_fault.abort)
------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
fuzion.runtime.post_fault.cause#1: $MODULE/eff/fallible.fz:35:6:
  => h e
-----^
fuzion.runtime.postcondition_fault#1: $MODULE/fuzion/runtime/post_fault.fz:58:43:
public postcondition_fault(msg String) => post_fault.cause msg
------------------------------------------^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.test#1 i32).post double: --CURDIR--/catch_postcondition.fz:38:9:
        equals result-x x
--------^^^^^^^^^^^^^^^^^
(catch_postcondition.test#1 i32).double#1: --CURDIR--/catch_postcondition.fz:37:7:
      post
------^^^^
        equals result-x x
--------^^^^^^^^^^^^^^^^^
(catch_postcondition.test#1 i32).loop: --CURDIR--/catch_postcondition.fz:43:21:
    for v := T.one, double v
--------------------^^^^^^^^
catch_postcondition.test#1 i32: --CURDIR--/catch_postcondition.fz:43:5:
    for v := T.one, double v
----^
catch_postcondition.λ.call: --CURDIR--/catch_postcondition.fz:146:38:
  tries array ()->String := [ (() -> test i32), (() -> test i16), (() -> test i64) ]
-------------------------------------^^^^^^^^
catch_postcondition.z.try: --CURDIR--/catch_postcondition.fz:151:33:
    redef try option String  => tries[c0].call
--------------------------------^^^^^^^^^^^^^^
catch_postcondition.z.λ.call.λ.call: --CURDIR--/catch_postcondition.fz:112:11:
          try
----------^^^
(fuzion.type.runtime.type.post_fault.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:162:41:
    x := instate_helper R effect.this e code def
----------------------------------------^^^^
(instate_helper (option String) fuzion.runtime.post_fault).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
fuzion.type.runtime.type.post_fault.type.instate#4 (option String): <source position not available>:

catch_postcondition.z.λ.call: --CURDIR--/catch_postcondition.fz:107:9:
        (fuzion.runtime.post_fault.instate
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          T
----------^
          (rt.post_fault msg->
----------^^^^^^^^^^^^^^^^^^^^
            m <- msg
------------^^^^^^^^
            fuzion.runtime.post_fault.abort)
------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          try
----------^^^
          (_ -> catch m.get.get))
----------^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.z.lm.instate_self#2 (option String)).λ.call: $MODULE/effect.fz:205:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
(catch_postcondition.type.z.type.lm.type.instate#3 (option String)).λ.call: $MODULE/effect.fz:184:17:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----------------^^^^
(catch_postcondition.type.z.type.lm.type.instate#4 (option String)).λ.call: $MODULE/effect.fz:162:41:
    x := instate_helper R effect.this e code def
----------------------------------------^^^^
(instate_helper (option String) catch_postcondition.z.lm).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
catch_postcondition.type.z.type.lm.type.instate#4 (option String): <source position not available>:

catch_postcondition.type.z.type.lm.type.instate#3 (option String): $MODULE/effect.fz:184:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.z.lm.instate_self#2 (option String): $MODULE/effect.fz:205:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.z: --CURDIR--/catch_postcondition.fz:105:12:
    res := lm.instate_self ()->
-----------^^^^^^^^^^^^^^^^^^^^
        m := lm.env.new (option String nil)
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        (fuzion.runtime.post_fault.instate
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          T
----------^
          (rt.post_fault msg->
----------^^^^^^^^^^^^^^^^^^^^
            m <- msg
------------^^^^^^^^
            fuzion.runtime.post_fault.abort)
------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          try
----------^^^
          (_ -> catch m.get.get))
----------^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.ref handle_post String).λ.call.λ.call: --CURDIR--/catch_postcondition.fz:154:7:
  say z.res
------^
(fuzion.type.runtime.type.post_fault.type.instate#4 String).λ.call: $MODULE/effect.fz:162:41:
    x := instate_helper R effect.this e code def
----------------------------------------^^^^
(instate_helper String fuzion.runtime.post_fault).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
fuzion.type.runtime.type.post_fault.type.instate#4 String: <source position not available>:

(catch_postcondition.ref handle_post String).λ.call: --CURDIR--/catch_postcondition.fz:107:9:
        (fuzion.runtime.post_fault.instate
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          T
----------^
          (rt.post_fault msg->
----------^^^^^^^^^^^^^^^^^^^^
            m <- msg
------------^^^^^^^^
            fuzion.runtime.post_fault.abort)
------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          try
----------^^^
          (_ -> catch m.get.get))
----------^^^^^^^^^^^^^^^^^^^^^^^
((catch_postcondition.ref handle_post String).lm.instate_self#2 String).λ.call: $MODULE/effect.fz:205:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
((catch_postcondition.type.handle_post.type String).lm.type.instate#3 String).λ.call: $MODULE/effect.fz:184:17:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----------------^^^^
((catch_postcondition.type.handle_post.type String).lm.type.instate#4 String).λ.call: $MODULE/effect.fz:162:41:
    x := instate_helper R effect.this e code def
----------------------------------------^^^^
(instate_helper String (catch_postcondition.ref handle_post String).lm).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
(catch_postcondition.type.handle_post.type String).lm.type.instate#4 String: <source position not available>:

(catch_postcondition.type.handle_post.type String).lm.type.instate#3 String: $MODULE/effect.fz:184:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.ref handle_post String).lm.instate_self#2 String: $MODULE/effect.fz:205:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.anonymous: --CURDIR--/catch_postcondition.fz:105:12:
    res := lm.instate_self ()->
-----------^^^^^^^^^^^^^^^^^^^^
        m := lm.env.new (option String nil)
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        (fuzion.runtime.post_fault.instate
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          T
----------^
          (rt.post_fault msg->
----------^^^^^^^^^^^^^^^^^^^^
            m <- msg
------------^^^^^^^^
            fuzion.runtime.post_fault.abort)
------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          try
----------^^^
          (_ -> catch m.get.get))
----------^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.y.λ.call.λ.call: --CURDIR--/catch_postcondition.fz:132:8:
  say (ref : handle_post String
-------^
(fuzion.type.runtime.type.post_fault.type.instate#4 String).λ.call: $MODULE/effect.fz:162:41:
    x := instate_helper R effect.this e code def
----------------------------------------^^^^
(instate_helper String fuzion.runtime.post_fault).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
fuzion.type.runtime.type.post_fault.type.instate#4 String: <source position not available>:

catch_postcondition.y.λ.call: --CURDIR--/catch_postcondition.fz:107:9:
        (fuzion.runtime.post_fault.instate
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          T
----------^
          (rt.post_fault msg->
----------^^^^^^^^^^^^^^^^^^^^
            m <- msg
------------^^^^^^^^
            fuzion.runtime.post_fault.abort)
------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          try
----------^^^
          (_ -> catch m.get.get))
----------^^^^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.y.lm.instate_self#2 String).λ.call: $MODULE/effect.fz:205:39:
    effect.this.instate R effect.this code
--------------------------------------^^^^
(catch_postcondition.type.y.type.lm.type.instate#3 String).λ.call: $MODULE/effect.fz:184:17:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----------------^^^^
(catch_postcondition.type.y.type.lm.type.instate#4 String).λ.call: $MODULE/effect.fz:162:41:
    x := instate_helper R effect.this e code def
----------------------------------------^^^^
(instate_helper String catch_postcondition.y.lm).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
catch_postcondition.type.y.type.lm.type.instate#4 String: <source position not available>:

catch_postcondition.type.y.type.lm.type.instate#3 String: $MODULE/effect.fz:184:5:
    instate R e code (_ -> panic "unexpected abort in {effect.this.type}")
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.y.lm.instate_self#2 String: $MODULE/effect.fz:205:5:
    effect.this.instate R effect.this code
----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
catch_postcondition.y: --CURDIR--/catch_postcondition.fz:105:12:
    res := lm.instate_self ()->
-----------^^^^^^^^^^^^^^^^^^^^
        m := lm.env.new (option String nil)
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        (fuzion.runtime.post_fault.instate
--------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          T
----------^
          (rt.post_fault msg->
----------^^^^^^^^^^^^^^^^^^^^
            m <- msg
------------^^^^^^^^
            fuzion.runtime.post_fault.abort)
------------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          try
----------^^^
          (_ -> catch m.get.get))
----------^^^^^^^^^^^^^^^^^^^^^^^
fuzion.type.runtime.type.post_fault.type.precall abort: --CURDIR--/catch_postcondition.fz:124:7:
  say y.res
------^
catch_postcondition.λ.call#1: --CURDIR--/catch_postcondition.fz:85:11:
          fuzion.runtime.post_fault.abort)
----------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
fuzion.runtime.post_fault.cause#1: $MODULE/eff/fallible.fz:35:6:
  => h e
-----^
fuzion.runtime.postcondition_fault#1: $MODULE/fuzion/runtime/post_fault.fz:58:43:
public postcondition_fault(msg String) => post_fault.cause msg
------------------------------------------^^^^^^^^^^^^^^^^^^^^
(catch_postcondition.test#1 i32).post double: --CURDIR--/catch_postcondition.fz:38:9:
        equals result-x x
--------^^^^^^^^^^^^^^^^^
(catch_postcondition.test#1 i32).double#1: --CURDIR--/catch_postcondition.fz:37:7:
      post
------^^^^
        equals result-x x
--------^^^^^^^^^^^^^^^^^
(catch_postcondition.test#1 i32).loop: --CURDIR--/catch_postcondition.fz:43:21:
    for v := T.one, double v
--------------------^^^^^^^^
catch_postcondition.test#1 i32: --CURDIR--/catch_postcondition.fz:43:5:
    for v := T.one, double v
----^
catch_postcondition.λ.call: --CURDIR--/catch_postcondition.fz:86:9:
        (test i32)
--------^^^^^^^^^^
(fuzion.type.runtime.type.post_fault.type.instate#4 String).λ.call: $MODULE/effect.fz:162:41:
    x := instate_helper R effect.this e code def
----------------------------------------^^^^
(instate_helper String fuzion.runtime.post_fault).call_code.call: $MODULE/effect.fz:373:18:
      set res := code()
-----------------^^^^
fuzion.type.runtime.type.post_fault.type.instate#4 String: <source position not available>:

catch_postcondition: --CURDIR--/catch_postcondition.fz:81:7:
  say (fuzion.runtime.post_fault.instate
------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        String
--------^^^^^^
        (rt.post_fault msg->
--------^^^^^^^^^^^^^^^^^^^^
          say "postcondition failed: $msg"
----------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          fuzion.runtime.post_fault.abort)
----------^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        (test i32)
--------^^^^^^^^^^
        (_ -> test u64))
--------^^^^^^^^^^^^^^^^

*** fatal errors encountered, stopping.
one error.
