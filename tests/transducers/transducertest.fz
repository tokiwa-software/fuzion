# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion test transducertest
#
#  Author: Michael Lill (michael.lill@tokiwa.software)
#
# -----------------------------------------------------------------------

transducertest : transducers is

  exitCode := 0

  chck (b bool, msg string) unit is
    if b
      say "PASSED: $msg"
    else
      say "FAILED: $msg"
      set exitCode := 1

  xf_filter := filter (Sequence i32) i32 (x -> x > 3)
  r := (1..5).into xf_filter
  chck ((comparable_sequence r) = (comparable_sequence [4, 5]))                            "filter transducer"


  xf_map := map (Sequence bool) i32 bool (x -> x > 3)
  r := (1..5).into xf_map
  chck ((comparable_sequence r) = (comparable_sequence [false, false, false, true, true])) "map transducer"


  human(age i32) is
  ages := map (Sequence i32) human i32 (x -> x.age)
  gt_ten := filter (Sequence i32) i32 (x -> x > 10)
  r := [human(4), human(12), human(30)].into (ages âˆ˜ gt_ten)
  chck ((comparable_sequence r) = (comparable_sequence [12, 30]))                          "compose transducers"

  exit exitCode
