# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion test reg_issue5467
#
# -----------------------------------------------------------------------

# The problem here is that a feature `Any.infix +` is originally not found
# as a right-associative operator, but when turning operators into left-associative
# ones, it is. However, the pending error is not reset and gets reported.
#
reg_issue5467 =>

  # the original code from #5467
  greet(who Any) => say ("Hi " + who + "! π is " + 3.142 + ".")

  # the workaround from #5467
  greet_fixed1(who Any) => say (("Hi " + who) + "! π is " + 3.142 + ".")
  greet_fixed2(who Any) => say ("Hi " + $who + "! π is " + 3.142 + ".")

  greet "Alice"
  greet_fixed1 "Bob"
  greet_fixed2 "Charlie"

  # the simpler test from #5467 that works
  x := ">"+Any+"<"; say x

  # the simpler test from #5467 that does not work
  say ">"+Any+"<"
