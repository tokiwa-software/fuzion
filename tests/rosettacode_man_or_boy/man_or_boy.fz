# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion test man_or_boy
#
#  Author: Fridtjof Siebert (siebert@tokiwa.software)
#
# -----------------------------------------------------------------------

# original lua code from rosettacode:
#
# function a(k,x1,x2,x3,x4,x5)
#   local function b()
#      k = k - 1
#      return a(k,b,x1,x2,x3,x4)
#    end
#     if k <= 0 then return x4() + x5() else return b() end
#  end
#
#  function K(n)
#    return function()
#      return n
#    end
#  end
#
#  print(a(10, K(1), K(-1), K(-1), K(1), K(0)))

man_or_boy is

  a(k i32, x1, x2, x3, x4, x5 () -> i32) i32 =>
    b =>
      set k := k - 1
      a k (()->b) x1 x2 x3 x4

    if (k â‰¤ 0) x4() + x5() else b
    # k <= 0 ? x4() + x5() : b

  # a(k i32, x1, x2, x3, x4, x5 fun () i32) => { b => { k = k - 1
  #                                                     a(k,fun b ,x1,x2,x3,x4)
  #                                                   }
  #                                              k <= 0 ? x4() + x5() : b
  #                                            }

  # a(k i32, x1, x2, x3, x4, x5 fun () i32) => k <= 0 ? x4() + x5() : b
  # a.b => { k = k - 1
  #          a(k,fun b ,x1,x2,x3,x4)
  #        }

  # K(n i32) => fun () i32 { n }
  # K(n i32) => fun i32 { n }
  # K(n i32) => fun () => n
  # K(n i32) => fun => n
  K(n i32) Function i32 => ()->n

  (0..8) ! n -> say "manorboy a($n) = {a n K(1) K(-1) K(-1) K(1) K(0)}"
