# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion test mix_inheritance_and_outer
#
#  Author: Fridtjof Siebert (siebert@tokiwa.software)
#
# -----------------------------------------------------------------------

mix_inheritance_and_outer is


  chck (b bool, msg String) unit =>
    if b
      say "PASSED: $msg"
    else
      say "FAILED: $msg"
      _ := set_exit_code 1

  # x is a generic feature:
  X (A type, v A) ref is

    # y is a feature declared within x that also inherits from x
    #
    # Consequently, features of x such as v exist twice, the inherited
    # version and the outer version.
    #
    y : X i32 42 is

      # this should access the outer x's v field of type A
      get_x_this_v => X.this.v

      # this should access the inherited x.v field of type i32
      get_inherited_v => y.this.v

      # NYI: if renaming is supported, we could change the inherited v's name and access
      # the outer v without qualification.

  say (X "Hello").v
  say (X "Hello").y.v
  say (X "Hello").y.get_x_this_v
  say (X "Hello").y.get_inherited_v
  z := (X "Hello").y
  say z.v
  say z.get_x_this_v
  say z.get_inherited_v

  chck (  (X "Hello").v                  = "Hello") "(x String).v"
  chck (  (X "Hello").y.v                = 42     ) "(x String).y.v"
  # chck (  (X "Hello").y.get_x_this_v     = "Hello") "(x string).y.getXThisV"      # NYI: causes type error!
  chck ("{(X "Hello").y.get_x_this_v}"   = "Hello") "(x String).y.getXThisV"
  chck (  (X "Hello").y.get_inherited_v  = 42     ) "(x String).y.getInheritedV"

  exit
