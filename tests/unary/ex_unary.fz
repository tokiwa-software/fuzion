# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion test ex_unary
#
# -----------------------------------------------------------------------

ex_unary is

  g ref : Unary i32 i32 is
    redef call (xg i32) i32 => 2*xg


  f ref : Unary i32 i32 is
    redef call (yf i32) i32 => yf+2

  x := (f ∘ g).call 3
  say x

  y := (g ∘ f).call 3
  say y


  g0 Unary i32 i32 := t -> 2*t
  f0 Unary i32 i32 := t -> t+2

  x0 := (f0 ∘ g0).call 3
  say x0

  y0 := (g0 ∘ f0).call 3
  say y0

  f0_after_g0 := f0 ∘ g0
  say (f0_after_g0 3)

  g1 i32 -> i32 := x2 -> 2*x2
  f1 i32 -> i32 := y2 -> y2+2

  f1_after_g1 := f1 ∘ g1
  x1 := f1_after_g1 3
  say x1

  g1_after_f1 := g1 ∘ f1
  y1 := g1_after_f1 3
  say y1

  bool_to_letters bool -> list String := (b ->
    b ? true_  => [$"T", $"r", $"u", $"e"].as_list
      | false_ => [$"F", $"a", $"l", $"s", $"e" ].as_list)

  join_list list String -> String := l -> String.join(l, "")

  bool_to_string := join_list ∘ bool_to_letters

  say (bool_to_string true)
  say (bool_to_string false)
