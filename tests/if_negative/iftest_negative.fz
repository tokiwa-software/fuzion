# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion test iftest_negative
#
#  Author: Fridtjof Siebert (siebert@tokiwa.software)
#
# -----------------------------------------------------------------------

iftest_negative is

  exitCode := 0

  chck(b bool, msg string) is
    s := if b
      "PASSED: "
    else
      set exitCode := 1
      "FAILED: "
    say (s + msg)

  testIfNonBoolean1 is
    if "string"       // 1. should flag an error: must be of type bool
    else if "string"  // 2. should flag an error: must be of type bool
  testIfNonBoolean1

  testIfNonBoolean2 is
    if 42             // 3. should flag an error: must be of type bool
    else if 42        // 4. should flag an error: must be of type bool
  testIfNonBoolean2

  testIfBoolean1 { if false  { } else if false  { } }; testIfBoolean1 // ok
  testIfBoolean2 { if true   { } else if true   { } }; testIfBoolean2 // ok
  testIfBoolean3 { if FALSE  { } else if FALSE  { } }; testIfBoolean3 // ok
  testIfBoolean4 { if TRUE   { } else if TRUE   { } }; testIfBoolean4 // ok
  testIfBoolean5 { if !false { } else if !false { } }; testIfBoolean5 // ok
  testIfBoolean6 { if !true  { } else if !true  { } }; testIfBoolean6 // ok

  routine_positive (b bool) choice unit string is
    if b // ok
      "Hello"

  # NYI improve error message
  routine_negative (b bool) string is
    if b // 5. should flag an error: Incompatible types in assignment
      "Hello"

  # NYI improve error message
  constructor (b bool) is
    if b // 6. should flag an error: Incompatible types in branches of if statement
      "Hello"

  exit exitCode
