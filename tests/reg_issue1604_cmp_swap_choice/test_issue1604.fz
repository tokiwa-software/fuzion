test_issue1604 is

  test_cas0 =>

    c : choice large small is

    large(a,b,c,d u64) is
    small(x u8) is

    s := small 0x11
    l := large 0xCCCC_CCCC_CCCC_CCCC 0xCCCC_CCCC_CCCC_CCCC 0xCCCC_CCCC_CCCC_CCCC 0xCCCC_CCCC_CCCC_CCCC
    a := concur.atomic c s

    match a.compare_and_swap s l
      small => #  ok
      large => panic "***expected small***"

    match a.compare_and_swap l s
      small => panic "***expected large***"
      large => #  ok



  test_cas =>

    c : choice large small is

    large(a,b,c,d u64) is
    small(x u8) is


    fill(a,b,c,d,e,f u64, n i32) unit =>
      if n > 0
        fill ~a ~b ~c ~d ~e ~f n-1

    s := small 0x11
    _ := large 0xCCCC_CCCC_CCCC_CCCC 0xCCCC_CCCC_CCCC_CCCC 0xCCCC_CCCC_CCCC_CCCC 0xCCCC_CCCC_CCCC_CCCC
    a0 := concur.atomic c s

    test(n i32) unit =>
      if n > 0
        s1 := small 0x11
        l1 := large 0xCCCC_CCCC_CCCC_CCCC 0xCCCC_CCCC_CCCC_CCCC 0xCCCC_CCCC_CCCC_CCCC 0xCCCC_CCCC_CCCC_CCCC

        match a0.compare_and_swap s1 l1
          small => #  ok
          large => panic "***expected small*** at $n"

        match a0.compare_and_swap l1 s1
          small => panic "***expected large*** at $n"
          large => #  ok

        test n-1

    N := 100

    say "setup:"
    (fill 0xAAAA_AAAA_AAAA_AAAA
          0xAAAA_AAAA_AAAA_AAAA
          0xAAAA_AAAA_AAAA_AAAA
          0xAAAA_AAAA_AAAA_AAAA
          0xAAAA_AAAA_AAAA_AAAA
          0xAAAA_AAAA_AAAA_AAAA N)

    say "test:"
    test N/2
    say "ok"



  test_cas0
  test_cas
