
--CURDIR--/reg_issue5818_calling_with_open_type.fz:41:3: error 1: Failed to infer actual type parameters
  f _                                                              #  1. should flag an error: failed to infer type parameter A
--^
In call to 'reg_issue5818_calling_with_open_type.f', no actual type parameters are given and inference of the type parameters failed.
Expected type parameters: 'A...'
Type inference failed for one type parameter 'A'


--CURDIR--/reg_issue5818_calling_with_open_type.fz:64:3: error 2: Failed to infer actual type parameters
  g _  _                                                           # 11. should flag an error: failed to infer T, U
--^
In call to 'reg_issue5818_calling_with_open_type.g', no actual type parameters are given and inference of the type parameters failed.
Expected type parameters: 'T, U, A...'
Type inference failed for 2 type parameters 'T', 'U'


--CURDIR--/reg_issue5818_calling_with_open_type.fz:65:3: error 3: Failed to infer actual type parameters
  g _  _    _                                                      # 12. should flag an error: failed to infer T, U, A
--^
In call to 'reg_issue5818_calling_with_open_type.g', no actual type parameters are given and inference of the type parameters failed.
Expected type parameters: 'T, U, A...'
Type inference failed for 3 type parameters 'T', 'U', 'A'


--CURDIR--/reg_issue5818_calling_with_open_type.fz:67:3: error 4: Failed to infer actual type parameters
  g u8 _                                                           # 14. should flag an error: too many value arguments
--^
In call to 'reg_issue5818_calling_with_open_type.g', no actual type parameters are given and inference of the type parameters failed.
Expected type parameters: 'T, U, A...'
Type inference failed for one type parameter 'U'


--CURDIR--/reg_issue5818_calling_with_open_type.fz:69:3: error 5: Failed to infer actual type parameters
  g u8 unit _                                                      # 15. should flag an error: failed to infer type parameter A
--^
In call to 'reg_issue5818_calling_with_open_type.g', no actual type parameters are given and inference of the type parameters failed.
Expected type parameters: 'T, U, A...'
Type inference failed for one type parameter 'A'


--CURDIR--/reg_issue5818_calling_with_open_type.fz:88:4: error 6: Failed to infer open type parameter type from actual argument.
  (h                                                                      # 16. should flag an error: failed to infer open type parameters
---^
Type of first actual argument could not be inferred at --CURDIR--/reg_issue5818_calling_with_open_type.fz:89:6:
     f64                                                                  # 17. should flag an error: cannot call `f64`
-----^^^


--CURDIR--/reg_issue5818_calling_with_open_type.fz:102:4: error 7: Failed to infer open type parameter type from actual argument.
  (i nil unit                                                             # 20. should flag an error: failed to infer T, U
---^
Type of third actual argument could not be inferred at --CURDIR--/reg_issue5818_calling_with_open_type.fz:103:6:
     f64                                                                  # 21. should flag an error: cannot call `f64`
-----^^^


--CURDIR--/reg_issue5818_calling_with_open_type.fz:103:6: error 8: Different count of arguments needed when calling feature
     f64                                                                  # 21. should flag an error: cannot call `f64`
-----^^^
Feature not found: 'f64' (no arguments)
Target feature: 'reg_issue5818_calling_with_open_type'
In call: 'f64'
To solve this, you might change the actual number of arguments to match the feature 'f64' (one value argument val) at {base.fum}/f64.fz:32:8:
public f64(public val f64) : float, java_primitive is
-------^^^
To call 'f64', you must provide one argument.



--CURDIR--/reg_issue5818_calling_with_open_type.fz:104:7: error 9: Different count of arguments needed when calling feature
     (array String)                                                       # 22. should flag an error: cannot call `array String`
------^^^^^
Feature not found: 'array' (one argument)
Target feature: 'reg_issue5818_calling_with_open_type'
In call: '(array String)'
To solve this, you might change the actual number of arguments to match the feature 'array' (one type argument T, 2 value arguments length init) at {base.fum}/array.fz:118:8:
public array(T type, length i32, init i32 -> T) array T =>
-------^^^^^
To call 'array', you must provide 3 arguments. The type arguments may be omitted or `_` may be used in place of a type argument if they can be inferred from the value arguments..



--CURDIR--/reg_issue5818_calling_with_open_type.fz:120:5: error 10: Different count of arguments needed when calling feature
  j f64 unit           3.14                                               # 23. should flag an error: failed to infer T, U
----^^^
Feature not found: 'f64' (no arguments)
Target feature: 'reg_issue5818_calling_with_open_type'
In call: 'f64'
To solve this, you might change the actual number of arguments to match the feature 'f64' (one value argument val) at {base.fum}/f64.fz:32:8:
public f64(public val f64) : float, java_primitive is
-------^^^
To call 'f64', you must provide one argument.



--CURDIR--/reg_issue5818_calling_with_open_type.fz:63:3: error 11: Different count of arguments needed when calling feature
  g _                                                              # 10. should flag an error: wrong number of arguments
--^
Feature not found: 'g' (one argument)
Target feature: 'reg_issue5818_calling_with_open_type'
In call: 'g _'
To solve this, you might change the actual number of arguments to match the feature 'g' (2 type arguments T U, one open type argument A (no arguments)) at --CURDIR--/reg_issue5818_calling_with_open_type.fz:55:3:
  g(T,U type, A type ...) =>
--^
To call 'g', you must provide 3 arguments. The type arguments may be omitted or `_` may be used in place of a type argument if they can be inferred from the value arguments..



--CURDIR--/reg_issue5818_calling_with_open_type.fz:66:3: error 12: Different count of arguments needed when calling feature
  g _                                                              # 13. should flag an error: too many value arguments
--^
Feature not found: 'g' (one argument)
Target feature: 'reg_issue5818_calling_with_open_type'
In call: 'g _'
To solve this, you might change the actual number of arguments to match the feature 'g' (2 type arguments T U, one open type argument A (no arguments)) at --CURDIR--/reg_issue5818_calling_with_open_type.fz:55:3:
  g(T,U type, A type ...) =>
--^
To call 'g', you must provide 3 arguments. The type arguments may be omitted or `_` may be used in place of a type argument if they can be inferred from the value arguments..



--CURDIR--/reg_issue5818_calling_with_open_type.fz:42:3: error 13: Wrong number of actual value arguments in call
  f u8 _                                                           #  2. should flag an error: undefined open type parameter
--^
Number of actual value arguments is 1, while call expects no value arguments.
Actual value arguments: '_'
Called feature: 'reg_issue5818_calling_with_open_type.f'
Formal value arguments: --none--
Declared at --CURDIR--/reg_issue5818_calling_with_open_type.fz:35:3:
  f(A type ...) =>
--^


--CURDIR--/reg_issue5818_calling_with_open_type.fz:43:3: error 14: Wrong number of actual value arguments in call
  f _ u8                                                           #  3. should flag an error: extra open type parameter
--^
Number of actual value arguments is 1, while call expects no value arguments.
Actual value arguments: ''
Called feature: 'reg_issue5818_calling_with_open_type.f'
Formal value arguments: --none--
Declared at --CURDIR--/reg_issue5818_calling_with_open_type.fz:35:3:
  f(A type ...) =>
--^


--CURDIR--/reg_issue5818_calling_with_open_type.fz:44:3: error 15: Wrong number of actual value arguments in call
  f _ _                                                            #  4. should flag an error: extra open type parameter
--^
Number of actual value arguments is 1, while call expects no value arguments.
Actual value arguments: ''
Called feature: 'reg_issue5818_calling_with_open_type.f'
Formal value arguments: --none--
Declared at --CURDIR--/reg_issue5818_calling_with_open_type.fz:35:3:
  f(A type ...) =>
--^


--CURDIR--/reg_issue5818_calling_with_open_type.fz:45:3: error 16: Wrong number of actual value arguments in call
  f             3.14 ["true","false"] "?!?"  (num.complex 3.14 4)  #  5. should flag an error: too many value arguments
--^
Number of actual value arguments is 4, while call expects no value arguments.
Actual value arguments: '3.14', '["true","false"]', '"?!?"', '(num.complex 3.14 4)'
Called feature: 'reg_issue5818_calling_with_open_type.f'
Formal value arguments: --none--
Declared at --CURDIR--/reg_issue5818_calling_with_open_type.fz:35:3:
  f(A type ...) =>
--^


--CURDIR--/reg_issue5818_calling_with_open_type.fz:46:3: error 17: Wrong number of actual value arguments in call
  f u8 unit i32 3.14 ["true","false"] "?!?"  (num.complex 3.14 4)  #  6. should flag an error: too many value arguments
--^
Number of actual value arguments is 4, while call expects no value arguments.
Actual value arguments: '3.14', '["true","false"]', '"?!?"', '(num.complex 3.14 4)'
Called feature: 'reg_issue5818_calling_with_open_type.f'
Formal value arguments: --none--
Declared at --CURDIR--/reg_issue5818_calling_with_open_type.fz:35:3:
  f(A type ...) =>
--^


--CURDIR--/reg_issue5818_calling_with_open_type.fz:47:3: error 18: Wrong number of actual value arguments in call
  f _           3.14 ["true","false"] "?!?"  (num.complex 3.14 4)  #  7. should flag an error: too many value arguments
--^
Number of actual value arguments is 4, while call expects no value arguments.
Actual value arguments: '3.14', '["true","false"]', '"?!?"', ''
Called feature: 'reg_issue5818_calling_with_open_type.f'
Formal value arguments: --none--
Declared at --CURDIR--/reg_issue5818_calling_with_open_type.fz:35:3:
  f(A type ...) =>
--^


--CURDIR--/reg_issue5818_calling_with_open_type.fz:61:3: error 19: Wrong number of actual value arguments in call
  g             3.14 ["true","false"] "?!?"  (num.complex 3.14 4)  #  8. should flag an error: failed to infer type parameter T, U
--^
Number of actual value arguments is 4, while call expects no value arguments.
Actual value arguments: '3.14', '["true","false"]', '"?!?"', ''
Called feature: 'reg_issue5818_calling_with_open_type.g'
Formal value arguments: --none--
Declared at --CURDIR--/reg_issue5818_calling_with_open_type.fz:55:3:
  g(T,U type, A type ...) =>
--^


--CURDIR--/reg_issue5818_calling_with_open_type.fz:62:3: error 20: Wrong number of actual value arguments in call
  g u8 unit i32 3.14 ["true","false"] "?!?"  (num.complex 3.14 4)  #  9. should flag an error: too many value arguments
--^
Number of actual value arguments is 4, while call expects no value arguments.
Actual value arguments: '3.14', '["true","false"]', '"?!?"', '(num.complex 3.14 4)'
Called feature: 'reg_issue5818_calling_with_open_type.g'
Formal value arguments: --none--
Declared at --CURDIR--/reg_issue5818_calling_with_open_type.fz:55:3:
  g(T,U type, A type ...) =>
--^


--CURDIR--/reg_issue5818_calling_with_open_type.fz:89:6: error 21: Different count of arguments needed when calling feature
     f64                                                                  # 17. should flag an error: cannot call `f64`
-----^^^
Feature not found: 'f64' (no arguments)
Target feature: 'reg_issue5818_calling_with_open_type'
In call: 'f64'
To solve this, you might change the actual number of arguments to match the feature 'f64' (one value argument val) at {base.fum}/f64.fz:32:8:
public f64(public val f64) : float, java_primitive is
-------^^^
To call 'f64', you must provide one argument.



--CURDIR--/reg_issue5818_calling_with_open_type.fz:90:7: error 22: Different count of arguments needed when calling feature
     (array String)                                                       # 18. should flag an error: cannot call `array String`
------^^^^^
Feature not found: 'array' (one argument)
Target feature: 'reg_issue5818_calling_with_open_type'
In call: '(array String)'
To solve this, you might change the actual number of arguments to match the feature 'array' (one type argument T, 2 value arguments length init) at {base.fum}/array.fz:118:8:
public array(T type, length i32, init i32 -> T) array T =>
-------^^^^^
To call 'array', you must provide 3 arguments. The type arguments may be omitted or `_` may be used in place of a type argument if they can be inferred from the value arguments..



--CURDIR--/reg_issue5818_calling_with_open_type.fz:100:3: error 23: Failed to infer actual type parameters
  i nil unit           3.14 ["true","false"] "?!?"  (num.complex 3.14 4)  # 19. should flag an error: failed to infer T, U
--^
In call to 'reg_issue5818_calling_with_open_type.i', no actual type parameters are given and inference of the type parameters failed.
Expected type parameters: 'T, U, A...'
Type inference failed for 2 type parameters 'T', 'U'

23 errors.
