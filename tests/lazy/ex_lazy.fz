# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion test ex_lazy
#
# -----------------------------------------------------------------------

ex_lazy is
  and(a bool, b Lazy bool) bool =>
    if a
      b
    else
      false

  x := and true true
  y := and true ()->false

  say x
  say y

  say "should not eval mtrue"
  _ := and !true mtrue
  say "should eval mtrue"
  _ := and true mtrue

  mtrue => {say "eval mtrue!"; true}

  lst(T type, h T, t Lazy (list T)) list T =>
    ref : Cons T (list T)
      redef head => h
      redef tail => t

  stars => {say "eval stars!"; lst "*" stars}

  say "x"
  say (stars.take 10)
  say "y"

  type_of2(W type, x Lazy W) Type => W
  # NYI: should work but currently does not:
  # say (type_of2 42)
  say (type_of2 ()->42)
