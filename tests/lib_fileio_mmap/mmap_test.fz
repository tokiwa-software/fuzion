# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion test mmap_test
#
# -----------------------------------------------------------------------

mmap_test =>

  testfile := "testfile"

  f =>
    io.file.open

  say <| io.file.use testfile io.file.mode.append ()->

    io.file.writer.write (array u8 os.mmap_offset_multiple.as_i32 i->0)
      .error.get
    io.file.writer.write "hello!".utf8
      .error.get
    io.file.writer.flush
      .get

    offset := os.mmap_offset_multiple

    # map 6 bytes of file starting from the end of the '+'s.
    say <| f.mmap offset (i64 6) ()->
            # change the 'e' in hello to an 'a'.
            io.file.mapped_buffer.env[1] := io.file.mapped_buffer.env[1] - 4

    # mmap should fail, since offset+size exceeds file size.
    # truncating error code, may differ among OS
    say <| (f.mmap offset (i64 7) ()->).err.as_string.truncate 30


  say <| io.file.use testfile io.file.mode.read ()->
    String.from_bytes ((io.buffered io.file.file_mutate).read_fully.drop os.mmap_offset_multiple.as_i32)

  say (io.file.delete testfile)
