# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion test redef_args
#
#  Author: Fridtjof Siebert (siebert@tokiwa.software)
#
# -----------------------------------------------------------------------

redef_args is

  exitCode := 0

  chck(b bool, msg string) =>
    s := if (b)
      "PASSED: "
    else
      set exitCode := 1
      "FAILED: "
    say (s + msg)

  Complex(T type, real, imag T) is
  Complex1(real, imag i32) is
  Complex2(rr, ii i32) : Complex i32 rr ii is
  Complex3(redefine real, imag i32) : Complex i32 real imag is
  Complex4(redefine real, imag i32) : Complex3(real, imag) is

  chck ((Complex i32 3 4).real  == 3) "generic field real set correctly"
  chck ((Complex i32 3 4).imag  == 4) "generic field imag set correctly"
  chck ((Complex1    3 4).real  == 3) "non-generic field real set correctly"
  chck ((Complex1    3 4).imag  == 4) "non-generic field imag set correctly"
  chck ((Complex2    3 4).real  == 3) "inherited generic field real set correctly"
  chck ((Complex2    3 4).imag  == 4) "inherited generic field imag set correctly"
  chck ((Complex2    3 4).rr == 3) "non-generic field rr set correctly"
  chck ((Complex2    3 4).ii == 4) "non-generic field ii set correctly"
  chck ((Complex3    3 4).real  == 3) "redefined generic field real set correctly"
  chck ((Complex3    3 4).imag  == 4) "redefined generic field imag set correctly"
  c ref Complex i32 := Complex3 3 4
  chck (c                .real  == 3) "redefined generic field real accessed through super feature set correctly"
  chck (c                .imag  == 4) "redefined generic field imag accessed through super feature set correctly"
  chck ((Complex4    3 4).real  == 3) "double redefined generic field real set correctly"
  chck ((Complex4    3 4).imag  == 4) "double redefined generic field imag set correctly"
  c2 ref Complex i32 := Complex4 3 4
  chck (c2               .real  == 3) "double redefined generic field real accessed through super-super feature set correctly"
  chck (c2               .imag  == 4) "double redefined generic field imag accessed through super-super feature set correctly"
  c3 ref Complex3 := Complex4 3 4
  chck (c3               .real  == 3) "double redefined generic field real accessed through super feature set correctly"
  chck (c3               .imag  == 4) "double redefined generic field imag accessed through super feature set correctly"

  # regression test using example from https://github.com/tokiwa-software/fuzion/issues/165
  v := ra 33
  chck (v = 2) "redefined field as in #165"
  ra(redef a i32) : st 2 =>
    chck (a = 2) "redefined field as in #165"
    a
  st (a i32) is
    chck (a = 2) "redefined field as in #165"


  exit exitCode
