# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion standard library feature i128
#
#  Author: Fridtjof Siebert (siebert@tokiwa.software)
#
# -----------------------------------------------------------------------

# i128 -- 128-bit signed integer values
#
public i128(public hi i64, public lo u64) : num.wrap_around, has_interval is
  fixed redef infix + (other i128) i128 is panic "NYI: i128 is not supported"
  fixed redef infix - (other i128) i128 is panic "NYI: i128 is not supported"
  fixed redef infix * (other i128) i128 is panic "NYI: i128 is not supported"
  fixed redef infix / (other i128) i128 is panic "NYI: i128 is not supported"

  # NYI: max is redefined here only to solve repeated inheritance conflict. Since max inherited
  # from has_interval is abstract, fz should not complain about this conflict.
  fixed redef max => i128 0x_7fff_ffff_ffff_ffff 0x_ffff_ffff_ffff_ffff

  # returns the number in whose bit representation all bits are ones
  fixed redef type.all_bits_set => i128 -1 0x_ffff_ffff_ffff_ffff


  # minimum
  #
  public fixed type.min => i128 -0x_8000_0000_0000_0000 0


  # maximum
  #
  public fixed type.max => i128 0x_7fff_ffff_ffff_ffff 0x_ffff_ffff_ffff_ffff
