# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion standard library feature Set
#
#  Author: Fridtjof Siebert (siebert@tokiwa.software)
#
# -----------------------------------------------------------------------

# Set -- an abstract set of values V
#
Set(E hasEquals<E>.type) ref : Sequence<E> is

  # number of entries in this set.  May be undefined, i.e., a range of
  # floating point numbers or an infinite set.
  #
  sizeOption option<i32> is nil


  # does this set contain the given value?
  #
  contains (e E) bool is abstract


  # list representation of values in this set
  #
  redef asList list<E> is abstract


  # add new element k to this set.
  #
  add (k E) Set<E> is abstract


  redef asString =>
    if isEmpty
      "âˆ…"
    else
      ("\{"
       + asList.map<string>(x -> x.asString).fold(strings.concat ";")
       + "\}")
