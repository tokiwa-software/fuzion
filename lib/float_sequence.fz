# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion standard library feature float_sequence
#
#  Author: Michael Lill (michael.lill@tokiwa.software)
#
# -----------------------------------------------------------------------

# NYI
# mode
# Mean (geometric harmonic)
# quartile
# ...

# float_sequence -- a Sequence whose elements inherit from float
#
float_sequence(F type : float F, redef from Sequence F) : numeric_sequence F from is

  # create a list from this Sequence.
  #
  redef as_list => from.as_list


  # the standard deviation of the sequence
  # https://en.wikipedia.org/wiki/Standard_deviation
  std_dev =>
    variance.map (x -> first.sqrt x)


  # the euclidean norm of this sequence
  # i.e. the square of the sum of squares of this sequence
  #
  euclidean_norm F is
    # NYI #500: sqrt,two and sum should be accessed via type
    first.sqrt ((mapSequence (x)->x**first.two).fold first.sum)
