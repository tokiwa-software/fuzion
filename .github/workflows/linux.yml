# This file is part of the Fuzion language implementation.
#
# The Fuzion language implementation is free software: you can redistribute it
# and/or modify it under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3 of the License.
#
# The Fuzion language implementation is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License along with The
# Fuzion language implementation.  If not, see <https://www.gnu.org/licenses/>.


# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  GitHub Actions workflow to build and test Fuzion on Ubuntu.
#
# -----------------------------------------------------------------------

name: run tests on linux

permissions:
  contents: read

on:
  push:
    branches:
      - 'main'
  pull_request: {}

env:
  PRECONDITIONS: true
  POSTCONDITIONS: true

jobs:
  run_tests:
    strategy:
      matrix:
        backend: [int, c]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2 # v3.11.0
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libgc1 libgc-dev shellcheck

      - name: check shell scripts
        run: make shellcheck

      - name: build java code
        run: make javac

      - name: build (no java modules)
        run: make no-java

      - if: matrix.backend == 'int'
        name: run tests (${{ matrix.backend }})
        run: make run_tests_parallel

      - if: matrix.backend == 'c'
        name: run tests (${{ matrix.backend }})
        env:
          FUZION_BACKEND_C_ARGS: -useGC
        run: make run_tests_c_parallel
