hello_world is

  # first we define a custom mutate effect.
  # we will need this for buffered reading from stdin
  #
  lm : mutate is

  # calling `lm` creates an instance of our mutate effect,
  # `instate_self` is then used to instate this instance and
  # run code in the context of the instated effect.
  #
  lm ! ()->

    # read someone's name from standard input
    #
    get_name =>
      (io.stdin.reader lm) ! ()->
        (io.buffered lm).read_line ? str String => str | io.end_of_file => ""

    # greet someone with the name given
    #
    greet(name String) is
      say "Hello, {name}!"

    # greet the user
    #
    x := greet get_name

    # you can access any feature - even argument features of other features
    # from outside
    #
    say "How are you, {x.name}?"
